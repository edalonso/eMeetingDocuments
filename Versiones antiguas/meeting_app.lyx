#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass book
\begin_preamble
\renewcommand{\normalsize}{\fontsize{10.5pt}{12.5pt}\selectfont}
\usepackage{textcomp}
\usepackage{fancyhdr}
\pagestyle{fancy}
\usepackage{color}
\definecolor{gray}{rgb}{0.5,0.5,0.5}
\definecolor{lightgray}{rgb}{0.8,0.8,0.8}
%Configuración de listing
\usepackage{listings}
\lstset{
language={C}, %Lenguaje por defecto
%estilos
keywordstyle=\textbfseries\ttfamily\color[rgb]{0.8,0.1,0.2}, %estilos de palabras clave identificadores, etc
identifierstyle=\ttfamily,
commentstyle=\color[rgb]{0.1,0.5,0.1},
stringstyle=\ttfamily\color[rgb]{0.2,0.2,0.7},
basicstyle=\footnotesize,  %the size of the fonts used for the code
 %espacios
showspaces=false,
showstringspaces=false,
showtabs=false,
tabsize=6,
%cuadro
backgroundcolor=\color[RGB]{192,192,192},
frame=single,
rulecolor=\color[rgb]{.3,.3,.3}, %set the frames color
captionpos=b,
%line breaking
breaklines=true,
breakatwhitespace=false,
prebreak = \raisebox{0ex}[0ex][0ex]{\ensuremath{\hookleftarrow}}, %nos dibuja una flecha guay cuando el código no entra en una línea
escapeinside={++\%*}{*){*}}, %Para escapar a LaTeX los acentos
morekeywords={*,...}
}
\end_preamble
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command makeindex
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref page
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Índice
\shortcut idx
\color #008000
\end_index
\secnumdepth 4
\tocdepth 1
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fancyhead[L]{Departamento 
\backslash

\backslash
 Enxeñería Telemática}
\end_layout

\begin_layout Plain Layout


\backslash
fancyhead[R]{{
\backslash
textit{
\backslash
nouppercase{
\backslash
leftmark}}}}
\end_layout

\begin_layout Plain Layout


\backslash
fancyfoot[L]{E.E.
 Telecomunicación 
\backslash

\backslash
 Universidade de Vigo}
\end_layout

\begin_layout Plain Layout


\backslash
fancyfoot[R]{Autor 
\backslash

\backslash
 Eduardo Alonso Gil}
\end_layout

\begin_layout Plain Layout


\backslash
renewcommand{
\backslash
refname}{Bibliografía}
\end_layout

\begin_layout Plain Layout


\backslash
renewcommand{
\backslash
partname}{Capítulo}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 22cm
\end_inset


\end_layout

\begin_layout Title
\noindent
Diseño, desarrollo y puesta en servicio de una aplicación web para la gestión
 de salas virtuales de vídeoconferencia Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\end_layout

\begin_layout Right Address
\begin_inset VSpace 6cm
\end_inset


\end_layout

\begin_layout Right Address
A mi familia
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Chapter
Introducción
\begin_inset CommandInset label
LatexCommand label
name "chap:Introducción"

\end_inset


\end_layout

\begin_layout Standard
La comunicación humana es uno de los mecanismos que otorgan al ser humano
 una ventaja fundamental sobre el resto de seres que poblan nuestro planeta
 y uno de los motivos de su rápida evolución en comparación con otras criaturas
 inteligentes\SpecialChar \@.
 En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "comunicacion"

\end_inset

, se puede observar un sintético diagrama sobre los elementos que componen
 la comunicación y en él se ha resaltado el canal de comunicaciones por
 ser uno de los temas que fundamentan esta escuela y, en esencia, el argumento
 central y motivación de este proyecto\SpecialChar \@.
 Sin lugar a dudas el canal de comunicació
n ha cambiado desde que Claude Elwood Shannon, considerado el padre de la
 teoría de la información, publicó en 1948 
\begin_inset Quotes eld
\end_inset

Una Teoría Matemática de la Comunicación
\begin_inset Quotes erd
\end_inset

\SpecialChar \@.
 Unido a la invención del transistor, provocó que se multiplicase la utilización
 del espectro radioeléctrico para la comunicación y con el tiempo que la
 red de redes llegase a convertirse en el engendro que es ahora\SpecialChar \@.
 Muchos otros
 han colaborado en la evolución de la comunicación, pero destacamos este
 mecanismo para corregir errores de transmisión que es sin duda un gran
 paso en el avance de la comunicación\SpecialChar \@.

\end_layout

\begin_layout Standard
El ser humano prefiere por naturaleza comunicarse cara a cara, ya que muchos
 otros factores influyen en la comunicación, como gestos, expresividad del
 interlocutor y una serie de conductas innatas que dan, a la comunicación
 presencial, preeminencia sobre meras trasmisiones de voz\SpecialChar \@.
 Debido a esto,
 a lo largo de los años se ha trabajado en la evolución de las comunicaciones
 para llegar al estado actual en el que la palabra vídeoconferencia resulta
 algo cotidiano\SpecialChar \@.
 Sin embargo, los primeros intentos en la carrera espacial
 no resultaron asequibles para el resto de la población debido a la mala
 calidad de imagen y la falta de técnicas eficientes de compresión de vídeo\SpecialChar \@.

 No sería hasta 1980 cuando las redes digitales de transmisión de telefonía,
 como RDSI, lo hicieron posible asegurando una velocidad mínima (por lo
 general 128 kbits/s) para vídeo comprimido y transmisión de audio\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 4cm
\end_inset


\begin_inset Graphics
	filename Diseño/comunciacion_modif.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Diagrama de comunicación
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "comunicacion"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Estos mecanismos de comunicación por vídeoconferencia comenzaron a ser una
 herramienta esencial para el correcto desarrollo empresarial, ya que el
 aprendizaje y comunicación entre sedes alejadas territorialmente, ya sea
 de la misma empresa o de empresas del mismo sector, son sin duda fundamentales
 para el desarrollo ágil y la búsqueda de soluciones\SpecialChar \@.

\end_layout

\begin_layout Standard
El único inconveniente es el periodo de adaptación desde que se pone al
 alcance del ciudadano de a pie una nueva tecnología y el momento en el
 cual es utilizada de forma innata hasta llegar a originar una revolución\SpecialChar \@.

 El avance de la tecnología siempre ha estado ligado al avance de los interfaces
 de usuario\SpecialChar \@.
 Una herramienta útil, pero poco amigable y difícil de utilizar
 seguramente caerá en desuso\SpecialChar \@.
 Por este motivo, adaptar las nuevas tecnologías
 al ser humano es una guerra en la que aún se lucha por ganar\SpecialChar \@.
 Para este
 proyecto se ha jugado con la idea de acercar una sala de vídeoconferencia
 al propio escritorio de cada usuario\SpecialChar \@.
 Se ha intentado mantener la idea de
 puerta de entrada y se ha multiplicado el significado de la palabra llave
 para dicha puerta\SpecialChar \@.

\end_layout

\begin_layout Standard
Para llevar a cabo la puesta en servicio del proyecto se ha contando con
 un escenario inmejorable, el Campus de Excelencia 
\begin_inset Quotes eld
\end_inset

Campus do Mar
\begin_inset Quotes erd
\end_inset

 de Vigo\SpecialChar \@.
 En este ámbito nos encontramos con colaboraciones entre universidades
 situadas en diferentes comunidades autónomas\SpecialChar \@.
 Multitud de universidades
 españolas están trabajando en la actualidad para obtener una aplicación
 que agilice, gestione y cuantifique la reserva de salas virtuales, como
 es el caso de la aplicación 
\begin_inset Quotes eld
\end_inset

Mr.
 Bosy
\begin_inset Quotes erd
\end_inset

 en la Universidad Carlos III de Madrid\SpecialChar \@.
 Le ofrecemos el siguiente enlace
 para acceder al contenido público disponible para esta aplicación: 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{https://mrbosy.uc3m.es/}{https://mrbosy.uc3m.es/}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El diseño visual de esta proyecto toma prestada la estética de 
\begin_inset Quotes eld
\end_inset

Campus do Mar
\begin_inset Quotes erd
\end_inset

 para facilitar la comprensión al lector de las funciones realizadas, ya
 que ha sido el primer lugar donde se ha desplegado esta aplicación\SpecialChar \@.
 Por
 el mismo motivo, se ha dotado a la aplicación con el nombre 
\begin_inset Quotes eld
\end_inset

eMeeting
\begin_inset Quotes erd
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
footnote{Por comodidad nos referiremos a la aplicación con este término
 a lo largo de la memoria.}
\end_layout

\end_inset

, que resulta atractivo al usuario y provee a la aplicación de un arma más
 para ser utilizada\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
Objetivos
\end_layout

\begin_layout Standard
El presente proyecto surge de la necesidad de una plataforma de vídeoconferencia
 que se adapte a las necesidades y perfiles de usuarios de organizaciones
 concretas y facilite el uso de herramientas de vídeoconferencia a usuarios
 que no posean un perfil técnico\SpecialChar \@.

\end_layout

\begin_layout Standard
Todo 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{software}
\end_layout

\end_inset

 de vídeoconferencia intenta brindar el mayor número de funcionalidades
 para copar el mercado y conseguir una gran cartera de clientes, por contraparti
da, este hecho conlleva a una saturación del interfaz de usuario, lo cual
 dificulta su utilización en casos concretos\SpecialChar \@.
 Alcanzar una alta proyección
 y ofrecer un buen servicio son algunos de los objetivos que se pretenden
 alcanzar con este proyecto\SpecialChar \@.
 Aunque una de las más importantes metas ha sido
 diseñar una estructura de aplicación que permita adaptar o crear nuevas
 funcionaliadades para los constantes cambios de los clientes potenciales
 para esta aplicación\SpecialChar \@.
 Esta es una de las principales razones que nos llevan
 a desarrollar este proyecto\SpecialChar \@.

\end_layout

\begin_layout Standard
Entre las funcionalidades maś destacadas que implementaremos podemos resaltar
 la reserva de salas, múltiples posibilidades de disposición de los elementos
 de la sala, es decir, se podrá seleccionar el lugar dónde aparecerán los
 ponentes en la reunión y el contenido visual que aporten, también el acceso
 a gráficas estadísticas que muestran en tiempo real el uso de la aplicación
 o un serivicio de alerta que advierte a los administradores de una posible
 saturación del sistema, ya sea por exceso de usuarios o por escasez de
 salas\SpecialChar \@.

\end_layout

\begin_layout Standard
La búsqueda de una aplicación popular tan ansiada por todo desarrollador
 web nos obligará a desarrollar un interfaz intuitivo, de forma que alcancemos
 el objetivo de una rápida integración de los usuarios sin necesidad de
 conocimientos técnicos o lecturas extensas\SpecialChar \@.

\end_layout

\begin_layout Standard
Este proyecto forma parte de un proyecto mayor en el que diferentes aplicaciones
 formarán parte de una macroaplicación que dará servicio al mencionado 
\begin_inset Quotes eld
\end_inset

Campus do Mar
\begin_inset Quotes erd
\end_inset

\SpecialChar \@.
 Por este motivo, cada aplicación que forme parte del proyecto debe incluir
 un servicio que sincronice las bases de datos de las diferentes aplicaciones
 que engloba el 
\begin_inset Quotes eld
\end_inset

Campus do Mar
\begin_inset Quotes erd
\end_inset

 como pueden ser un calendario o un gestor de tareas, de manera que todas
 las aplicaciones formen parte de la macroaplicación y se comuniquen entre
 sí\SpecialChar \@.
 Este servicio consigue que nuestra aplicación sea más completa, incluyendo
 la opción de integrarla en un proyecto mayor de una forma sencilla\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
Organización
\end_layout

\begin_layout Standard
Después de esta breve introducción comenzaremos con un capítulo que sumergirá
 al lector en el mundo de las tecnologías que se han empleado para alcanzar
 los objetivos del proyecto\SpecialChar \@.
 Se hablará de los motivos que nos han llevado
 a utilizar unas en detrimento de otras, siempre siguiendo un criterio de
 eficiencia temporal, desarrollo ágil, modularidad y apoyo por parte de
 la comunidad libre\SpecialChar \@.

\end_layout

\begin_layout Standard
Continuaremos con una descripción del diseño de nuestra aplicación, construyendo
 el camino fielmente, desde el primer boceto del interfaz a los complejos
 entramados de la base de datos, incluyendo gráficas ilustrativas que aportarán
 luz sobre la enmarañada relación interna de las entidades del proyecto\SpecialChar \@.

 Incluiremos capturas del interfaz de usuario con el estilo diseñado para
 el despliegue en 
\begin_inset Quotes eld
\end_inset

Campus do Mar
\begin_inset Quotes erd
\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
Se describirán las posibles líneas futuras desprendidas del desarrollo de
 la aplicación y de las experiencias de los usuarios que la han utilizado
 en la senda del desarrollo eficiente\SpecialChar \@.
 Se comentarán las ideas surgidas durante
 el desarrollo y que han aportado grandes dosis de conocimiento e intuición
 para ampliar algunas de las funciones de la aplicación\SpecialChar \@.

\end_layout

\begin_layout Standard
Se finalizará con la bibliografía empleada en el desarrollo del proyecto
 y de esta memoria para el deleite de usuarios que sientan predilección
 por el mundo del desarrollo web y sientan el deseo de aumentar sus conocimiento
s en este ámbito\SpecialChar \@.

\end_layout

\begin_layout Chapter
Tecnologías empleadas
\begin_inset CommandInset label
LatexCommand label
name "chap:Tecnologías-empleadas"

\end_inset


\end_layout

\begin_layout Standard
Toda aplicación web y el trabajo de los desarrolladores tiene unas premisas
 comunes, tales como facilitar la interacción usuario-software y, sacando
 el mayor partido a las tecnologías disponibles, conseguir resultados adecuados
 en el menor tiempo posible\SpecialChar \@.
 Para este fin utilizaremos como motor de vídeoconfer
encia el software propietario 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset

 y su API, como motor de administración de bases de datos hemos optado por
 MySQL, para el desarrollo de la aplicación nos hemos declinado por el uso
 del 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{framework}
\end_layout

\end_inset

 Symfony específico para PHP, para las partes dinámicas que se ejecutan
 en el explorador hemos decidido utilizar Javascript y su API jQuery y jQuery
 UI, para la estructura que se visualiza en el explorador HTML 5 y para
 el estilo CSS 3\SpecialChar \@.
 Todas estas tecnologías a excepción de 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset

, poseen licencia libre, lo cual ayuda al programador en el desarrollo y
 la búsqueda de soluciones\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset

 Profesional
\end_layout

\begin_layout Standard
Ahora más que nunca, la gente necesita la capacidad de colaborar de forma
 eficiente con colegas, socios y clientes en todo el mundo, a través de
 dispositivos conectados a la red\SpecialChar \@.
 Más y más organizaciones, incluyendo grandes
 empresas y agencias del gobierno, están utilizando 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 para conducir extremo a extremo, flujos de trabajo críticos para sus negocios,
 reuniones web, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{e-Learning}
\end_layout

\end_inset

 y seminarios.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 ofrece interacciones excepcionalmente ricas y permite a las organizaciones,
 desde el Departamento de Defensa de EE.UU.
 a las corporaciones líderes, incluyendo Toshiba America o Teltek vídeo
 Research, S.L., mejorar sustancialmente su productividad\SpecialChar \@.

\end_layout

\begin_layout Standard
El software propietario 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 posee las características más avanzadas de vídeoconferencia, ofreciendo
 un interfaz perfecto para los diferentes tipos de comunicación, ya sea
 a nivel académico o profesional\SpecialChar \@.

\end_layout

\begin_layout Standard
El sistema de comunicaciones web 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 está compuesto por 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect Enterprise Server}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 (versión con licencia) o 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect Enterprise Hosted}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 (servicio alojado) y tres módulos, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect Training}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect Events}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 y 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Presenter}
\end_layout

\end_inset

, que brindan apoyo a las funciones de 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Acrobat Connect Professional}
\end_layout

\end_inset

 y las amplían para proporcionar soluciones de comunicaciones web de formación,
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{marketing}
\end_layout

\end_inset

 y ventas\SpecialChar \@.
 Este 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{software}
\end_layout

\end_inset

 propietario es sin duda uno de los más avanzados del mercado y su completa
 API nos proporciona la posibilidad de crear aplicaciones web de gran calidad
 aprovechando las características que más convengan a los usuarios finales\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 permite a los invitados asistir a sus reuniones fácilmente desde el escritorio
 sin necesidad de un cliente de descarga, aunque en nuestro caso accederemos
 a través del explorador, y ofrece un completo interfaz entre dispositivos
 móviles para incrementar las capacidades de colaboración y hacer frente
 a las realidades de los actuales entornos empresariales, donde los empleados
 y los clientes están en continuo movimiento\SpecialChar \@.
 Este complejo entramado en
 que se ha convertido la vida laboral e incluso privada de las personas,
 de la mano de las nuevas tecnologías de la comunicación y la información,
 hace indispensable la utilización de 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{software}
\end_layout

\end_inset

 de estas características, donde uno de los factores más importantes es
 el ahorro de tiempo y dinero\SpecialChar \@.
 En un mundo sustancialmente capitalista como
 el actual, son dos pilares básicos para la sostenibilidad del sistema y
 como no podía ser de otro modo, en tiempos de crisis cualquier ventaja
 puede ser la diferencia entre el éxito y el fracaso\SpecialChar \@.

\end_layout

\begin_layout Standard
La experiencia del usuario ha desvelado que el uso de 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect Profesional}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 es complejo para cualquier usuario que no posea un perfil técnico y carece
 de las necesidades específicas de los usuarios de 
\begin_inset Quotes eld
\end_inset

Campus do Mar
\begin_inset Quotes erd
\end_inset

, este hecho provoca el nacimiento de esta aplicación\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
SYMFONY
\begin_inset CommandInset label
LatexCommand label
name "sec:SYMFONY"

\end_inset


\end_layout

\begin_layout Standard
En las siguientes líneas abordaremos la solución a un problema mediante
 un 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{framework}
\end_layout

\end_inset

 específico para PHP y destinado al desarrollo de aplicaciones web\SpecialChar \@.
 Una gran
 lista de aplicaciones se han desarrollado bajo el 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{framework}
\end_layout

\end_inset

 Symfony como Motilee (para crear foros de discusión), SteerCMS (gestor
 de contenidos), Hashbin (facilita la depuración colaborativa de las aplicacione
s), Symfonians (punto de encuentro de usuarios y desarrolladores de Symfony),
 LiveChat (añadir a un sitio web chats en tiempo real), Lichess (servidor
 de juegos de ajedrez) 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{key-7}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
Symfony es un 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{framework}
\end_layout

\end_inset

 PHP que facilita la organización y el desarrollo de las aplicaciones web,
 es decir, se encarga de todos los aspectos comunes y aburridos, dejando
 que el programador se dedique a aportar valor, desarrollando las característica
s únicas de cada proyecto\SpecialChar \@.

\end_layout

\begin_layout Standard
Típicamente, puede incluir soporte de programas, bibliotecas, y un lenguaje
 interpretado, entre otras herramientas, para así ayudar a desarrollar y
 unir los diferentes componentes de un proyecto\SpecialChar \@.
 Representa una arquitectura
 de software que modela las relaciones generales de las entidades del dominio,
 y provee una estructura y una especial metodología de trabajo, la cual
 extiende a las aplicaciones del dominio\SpecialChar \@.
 Las principales herramientas de
 Symfony imprescindibles para este proyecto se describen a continuación\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
El controlador
\end_layout

\begin_layout Standard
En esta sección mostraremos cómo se organizan y qué son los controladores
 en la estructura de Symfony\SpecialChar \@.

\end_layout

\begin_layout Standard
Se llama controlador al conjunto de directorios, en nuestro caso situados
 en la carpeta 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{src/Cmar/MeetingBundle}
\end_layout

\end_inset

, que almacenan la lógica de los diferentes elementos de nuestra aplicación\SpecialChar \@.

 Es, por así decirlo, el cerebro de cada una de las funciones que se realizan\SpecialChar \@.

 El controlador recoge los datos de los formularios y de la base de datos
 y ofrece las respuestas que se visualizarán en las plantillas Twig, que
 describiremos en la sección 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:La-vista"

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
Nos ofrecen la posibilidad de generar respuestas, como páginas HTML o ficheros
 XML para fuentes RSS o servicios Web, y JSON para peticiones AJAX, ajustando
 únicamente el valor de la variable 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{format}
\end_layout

\end_inset

 en la descripción de las funciones del controlador para las cuales necesitemos
 un tipo de respuesta u otra\SpecialChar \@.
 Posee instrucciones específicas para acceder
 al objeto 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{request}
\backslash
footnote{Se utiliza nomenclatura PHP para esta variable.}
\end_layout

\end_inset

, o de respuesta de un formulario, a través de una variable llamada 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{app.request}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{key-7}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{key-3}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
Symfony2 posee un elegante objeto de sesión que representa el cliente (puede
 ser una persona real usando un navegador, un 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{bot}
\end_layout

\end_inset

 o un servicio web)\SpecialChar \@.
 Entre dos peticiones, Symfony2 almacena los atributos
 en una cookie usando sesiones nativas de PHP\SpecialChar \@.
 De esta forma podemos generar
 funciones del tipo migas de pan de forma sencilla utilizando los atributos
 de esta 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{cookie}
\end_layout

\end_inset

 o generar acceso a un servidor evitando peticiones superfluas si aún no
 ha caducado la sesión\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
Arquitectura
\begin_inset CommandInset label
LatexCommand label
name "sub:Arquitectura"

\end_inset


\end_layout

\begin_layout Standard
Uno de los principales beneficios de la utilización de un 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{framework}
\end_layout

\end_inset

 completo es normalizar los desarrollos\SpecialChar \@.
 Gracias a la estructura predeterminada
 de archivos y directorios de Symfony2, cualquier desarrollador con conocimiento
s básicos puede asumir el mantenimiento de un proyecto elaborado con 
este 
\lang spanish

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{framework}
\end_layout

\end_inset

, premisa muy importante para el desarrollo colaborativo de todas las aplicacion
es\SpecialChar \@.

\end_layout

\begin_layout Standard
Adjuntamos una breve descripción de la funcionalidad de cada directorio
 de Symfony2 en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "Explic-direct-Symfony"

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 3.5cm
\end_inset


\begin_inset Graphics
	filename EstructuraDirectoriosSymfony.jpg
	scale 50
	rotateOrigin rightBottom

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Estrucutra de directorios en Symfony2
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "estruc-direct-Sym"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 5.5cm
\end_inset


\begin_inset Graphics
	filename ExplicacionEstructuraDirectoriosSymfony.jpg
	scale 50
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Funcionalidades de la estucutra de directorios en Symfony2
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Explic-direct-Symfony"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
colorbox{lightgray}{web/}
\end_layout

\end_inset

: El directorio web raíz es el hogar de todos los archivo públicos y estáticos
 como imágenes, hojas de estilo y archivos JavaScript.
 También es donde reside cada controlador frontal\SpecialChar \@.
 Un pequeño script PHP
 cuyo trabajo es arrancar la aplicación\SpecialChar \@.
 El kernel requiere primero del archivo
 bootstrap.php, el cual inicia el 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{framework}
\end_layout

\end_inset

 y registra al 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{autoloader}
\end_layout

\end_inset

\SpecialChar \@.
 Como cualquier controlador frontal, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{app.php}
\end_layout

\end_inset

 usa una clase 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Kernel}
\end_layout

\end_inset

, llamada 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{AppKernel}
\end_layout

\end_inset

, para iniciar la aplicación\SpecialChar \@.

\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
colorbox{lightgray}{app/}
\end_layout

\end_inset

: La clase 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{AppKernel}
\end_layout

\end_inset

 es el punto de ingreso principal a la configuración de la aplicación y
 como tal, se ubica en este directorio\SpecialChar \@.

\end_layout

\begin_deeper
\begin_layout Itemize
La velocidad de Symfony2 se debe a su sistema de caché\SpecialChar \@.
 La configuración
 de la aplicación sólo es analizada durante el primer 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{request}
\end_layout

\end_inset

 y luego compilada a código PHP que se guarda en el directorio 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{app/cache/}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Itemize
Durante el desarrollo de una aplicación web, las cosas pueden salir mal
 de muchas maneras.
 Los archivos de log en el directorio 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{app/logs/}
\end_layout

\end_inset

 de la aplicación nos ofrecen todo sobre los 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{requests}
\end_layout

\end_inset

 para arreglar el problema rápidamente.
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
colorbox{lightgray}{vendor/}
\end_layout

\end_inset

: Las librerías de terceros deberían estar ubicadas en este directorio que
 contiene inicialmente las bibliotecas de Symfony2, SwiftMailer, el ORM
 Doctrine, el sistema de plantillas Twig y una selección de clases de 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Zend Framework}
\end_layout

\end_inset

, pero esto es sólo una convención siendo posible ubicarse en un directorio
 global del servidor o en uno local en cada proyecto\SpecialChar \@.

\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
colorbox{lightgray}{src/}
\end_layout

\end_inset

: Para describir este directorio es impresdindible mencionar el sistema
 de 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{bundles}
\end_layout

\end_inset

, una de las más grandiosas y poderosas características de Symfony2\SpecialChar \@.
 Un 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{bundle}
\end_layout

\end_inset

 es similar a un 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{plugin}
\end_layout

\end_inset

 en otros lenguajes\SpecialChar \@.
 Recibe el nombre de 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{bundle}
\end_layout

\end_inset

 y no de 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{plugin}
\end_layout

\end_inset

 porque 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{todo}
\end_layout

\end_inset

 es un 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{bundle}
\end_layout

\end_inset

 en Symfony2\SpecialChar \@.
 Esto le da la flexibilidad de usar características pre-construidas
 empaquetadas en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{bundles}
\end_layout

\end_inset

 de terceros o distribuir sus propios 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{bundles}
\end_layout

\end_inset

\SpecialChar \@.
 Cada 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{bundle}
\end_layout

\end_inset

 puede ser adaptado por medio de archivos de configuración escritos en YAML,
 XML o PHP\SpecialChar \@.
 Cada entrada llamada 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{framework}
\end_layout

\end_inset

 en el archivo de configuración define la composición para un 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{bundle}
\end_layout

\end_inset

\SpecialChar \@.
 Y a su vez cada entorno dentro del directorio 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{src/}
\end_layout

\end_inset

 puede sobreescribir la configuración por omisión si se provee de un archivo
 de configuración específico 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{key-18}
\end_layout

\end_inset

\SpecialChar \@.
 Además de ser una buena manera de organizar y configurar el código, un
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{bundle}
\end_layout

\end_inset

 puede extender otro, ya que los 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{bundles}
\end_layout

\end_inset

 soportan herencia\SpecialChar \@.
 Esto le permite sobreescribir un 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{bundle}
\end_layout

\end_inset

 existente para adaptar sus controladores, plantillas y cualquier archivo
 que contenga\SpecialChar \@.
 Es aquí donde los nombres lógicos resultan útiles ya que abstraen
 al programador del lugar en donde se encuentra realmente ubicado el recurso\SpecialChar \@.

 Por este motivo como veremos en el apartado de diseño, los controladores
 tendrán nombres que hacen referencia a la función que desempeñan\SpecialChar \@.
 A su vez
 Symfony crea una estructura de directorios por cada aplicación que definimos
 con el comando Symfony 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{generate:app}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
La estructura de directorios de nuestra aplicación parte de la base estructural
 de Symfony que acabamos de describir en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "estruc-direct-Sym"

\end_inset

\SpecialChar \@.
 A esta base estructural se le añade, en sus correspondientes directorios,
 los componentes que nuestra aplicación necesita, de forma que obtenemos
 una estructura de directorios como la que se muestra en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "estruc-direct-eMeeting"

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset Wrap figure
lines 0
placement L
overhang 0in
width "35col%"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Lista_directorios_eMeeting.jpg
	scale 37

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Estructura de directorios de eMeeting
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "estruc-direct-eMeeting"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El contenido y la razón de la existencia de los directorios específicos
 para nuestra aplicación serán descritos con detalle en el capítulo 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Diseño-del-proyecto"

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
La vista
\begin_inset CommandInset label
LatexCommand label
name "sub:La-vista"

\end_inset


\end_layout

\begin_layout Itemize
La plantilla TWIG
\end_layout

\begin_deeper
\begin_layout Standard
Twig es el motor de plantillas para PHP que utiliza Symfony2\SpecialChar \@.
 Sus características
 principales son:
\end_layout

\begin_layout Itemize
Rápido: Ofrece la posibilidad de optimizar las llamadas a los contenidos
 de las variables que PHP envía a las plantillas HTML\SpecialChar \@.
 El tiempo de generación
 de las plantillas, en comparación con el habitual código PHP, se ve reducido
 a la mínima expresión\SpecialChar \@.

\end_layout

\begin_layout Itemize
Seguro: Tiene un modo para evaluar código en la plantilla que no es de confianza.
 Esto permite utilizarlo como un lenguaje de plantillas para aplicaciones
 en las que los usuarios pueden modificar el diseño de la plantilla\SpecialChar \@.
 El objetivo
 de modularidad de nuestro proyecto agradece enormemente el uso de este
 motor de plantillas\SpecialChar \@.

\end_layout

\begin_layout Itemize
Flexible: Posee un analizador léxico flexible.
 Esto permite al desarrollador definir sus propias etiquetas y filtros personali
zados, y crear su propio lenguaje específico del dominio (DSL) 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{key-17}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
Todas las plantillas utilizadas por la aplicación eMeeting se han realizado
 con este formato, optimizando la compilación y facilitando el acceso a
 los contenidos de las variables de la base de datos utilizadas en la lógica
 implementada con PHP\SpecialChar \@.

\end_layout

\begin_layout Standard
Con estas plantillas también es muy sencillo incluir otras plantillas para
 evitar la redundancia de código o incluir URIs que hacen referencia a páginas
 de nuestro propio código\SpecialChar \@.
 Las plantillas para cada sección de nuestra aplicación
 se alojan en la carpeta 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{src/Cmar/MeetingBundle/views}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
Doctrine
\end_layout

\begin_layout Standard
El Proyecto Doctrine consta de un conjunto de bibliotecas PHP seleccionadas
 principalmente para ofrecer servicios de persistencia y funcionalidades
 en las relaciones sobre las bases de datos que utilicemos\SpecialChar \@.
 Entre sus principales
 características cabe destacar el asignador relacional de objetos (ORM)
 y la capa de abstracción de base de datos\SpecialChar \@.

\end_layout

\begin_layout Standard
Esta herramienta de Symfony2 nos permite actuar sobre la base de datos de
 una forma sencilla y en cualquier parte del código ya que permite abstraer
 al programador del motor de base de datos que utilicemos\SpecialChar \@.
 Esta característica
 nos permite aumentar la modularidad de nuestro proyecto y poder desplegarlo
 sobre el motor de base de datos que posea el usuario final sin modificar
 apenas líneas de código\SpecialChar \@.
 Sin duda, alguna de las consultas específicas y
 complejas que realice nuestra aplicación deberán ser reescritas para adaptarse
 al nuevo entorno, pero se intentará que sean ínfimas para cumplir con la
 modularidad propuesta en los objetivos del proyecto 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{key-7}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsubsection
Asignador Relacional de Objetos
\end_layout

\begin_layout Standard
El asignador relacional de objetos (ORM) para PHP se encuentra en la parte
 superior de una poderosa abstracción en la capa de la base de datos (DBAL)\SpecialChar \@.

 Una de sus principales características es la opción de escribir las consultas
 de bases de datos en un dialecto propio orientado a objetos llamado Lenguaje
 SQL de consulta de Doctrine (DQL), inspirado en Hiberna HQL\SpecialChar \@.
 Esto proporciona
 a los desarrolladores una poderosa alternativa a SQL que mantiene la flexibilid
ad sin necesidad de duplicar el código innecesariamente
 
\lang spanish

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{key-7}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsubsection
Capa de abstracción de la base de datos
\end_layout

\begin_layout Standard
Posee múltiples características para la introspección en el esquema de la
 base de datos, la administración de esquemas y la abstracción PDO\SpecialChar \@.

\end_layout

\begin_layout Standard
La abstracción de base de datos de Doctrine y la capa de acceso (DBAL) ofrece
 una capa ligera alrededor de un API de PDO-like y multitud de características
 adicionales, como la introspección horizontal en el esquema de la base
 de datos y la manipulación a través de una API orientada a objetos\SpecialChar \@.

\end_layout

\begin_layout Standard
El hecho de que la DBAL de Doctrine abstrae del pesado API DOP mediante
 el uso de interfaces que se parecen mucho a la actual API de PDO, hace
 posible la implementación de los controladores personalizados que pueden
 utilizar las API's nativas existentes o las realizadas por el propio programado
r 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{key-7}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
Para optimizar y aprovechar al máximo el uso de Doctrine se deben describir
 las tablas de la base de datos con el formato específico adoptado por Symfony
 en sus desarrollos para el ORM llamado 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{YAML}
\end_layout

\end_inset

, que pasamos a describir a continuación\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
El Formato YAML
\end_layout

\begin_layout Standard
De acuerdo con el sitio web oficial YAML 
\begin_inset Quotes eld
\end_inset

es una serialización de datos estándar muy amigable para todos los lenguajes
 de programación
\begin_inset Quotes erd
\end_inset

\SpecialChar \@.
 Dicho de otra manera, YAML es un lenguaje sencillo para describir los datos
 (strings, integers, dates, arrays y hashes).
\end_layout

\begin_layout Standard
En YAML, la estructura se muestra a través de la sangría, la secuencia de
 elementos se denotan por un guión, y los pares clave/valor están separados
 por dos puntos\SpecialChar \@.
 YAML también tiene una sintaxis abreviada para describir
 la misma estructura con menos líneas, donde los arrays explícitamente se
 muestran con [] y los hashes o array asociativos con {} 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{key-9}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
El framework Symfony lo utiliza ampliamente para sus archivos de configuración
 o para la creación de tablas y estructuras de Doctrine\SpecialChar \@.
 Por ejemplo en los
 ficheros 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{security.yml}
\end_layout

\end_inset

 y 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{routing.yml}
\end_layout

\end_inset

 que mencionaremos en la sección 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Seguridad-de-la"

\end_inset

\SpecialChar \@.
 Estos ficheros siguen la estructura típica de un fichero YAML y la relación
 entre ambos ofrece la seguridad para cada ruta de la aplicación\SpecialChar \@.
 Como veremos
 en el capítulo 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Desarrollo-del-proyecto"

\end_inset

, las rutas de Symfony2 cobran especial importancia ya que están asociadas
 a funciones, en caso de que sea necesario, y la seguridad de alguna de
 ellas puede ser crítica\SpecialChar \@.

\end_layout

\begin_layout Standard
Gracias al archivo de descripción de la base de datos 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{schema.yml}
\end_layout

\end_inset

, podemos utilizar más ampliamente las simplificaciones que ofrece Doctrine
 al generar los comandos SQL necesarios para crear las tablas en nuestra
 base de datos\SpecialChar \@.
 
\end_layout

\begin_layout Standard
Describimos, a modo de ejemplo, alguna de estas tareas:
\end_layout

\begin_layout Itemize
Para generar el SQL se debe contruir el modelo a partir del contenido del
 archivo 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{schema.yml}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
php symfony doctrine:build-model
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Itemize
Ahora que los modelos existen se puede generar e insertar el SQL.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
php symfony doctrine:build-sql
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Itemize
La tarea doctrine:build-sql genera comandos SQL en el directorio 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{data/sql/}
\end_layout

\end_inset

, optimizado para el motor de base de datos que se ha configurado, en nuestro
 caso MySQL\SpecialChar \@.

\end_layout

\begin_layout Standard
Gracias a esta característica, cualquier cambio en la base de datos, como
 añadir un nuevo campo a una entidad, lo que equivale a una nueva columna
 en la tabla correspondiente, con su valor es una acción simple y que Doctrine
 realizará de forma limpia y sin hacer peligrar el contenido de la base
 de datos\SpecialChar \@.
 Ofrece funcionalidades como visualizar qué comandos específicos
 para la base de datos se realizarán con el cambio implementado, evitando
 así pérdidas de datos o acciones que traerán consecuencias irreversibles\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
Las entidades
\end_layout

\begin_layout Standard
Estos elementos de Symfony2 guardan la estructura de las piezas del juego
 en nuestra aplicación\SpecialChar \@.
 A partir de la estructura de las entidades, Doctrine
 construirá los elementos que rellenarán las tablas de la base de datos
 y aportarán las características y relaciones que introduzcamos en las cabeceras
 de estos elementos\SpecialChar \@.

\end_layout

\begin_layout Standard
Las entidades aportan a nuestro proyecto una gran modularidad ya que podremos
 insertar un nuevo elemento en nuestra base de datos o un nuevo campo en
 el elemento preciso para incrementar las funcionalidades o complementar
 las existentes si se queda en el tintero alguna que se descubra en el proceso
 de puesta en servicio\SpecialChar \@.
 También nos ofrece facilidades a la hora de corregir
 errores en el proceso de diseño o cuando la aplicación está ya en producción\SpecialChar \@.

 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
PHP
\end_layout

\begin_layout Standard
PHP tal y como se conoce hoy en día es en realidad el sucesor de un producto
 llamado PHP/FI.
 Creado en 1994 por Rasmus Lerdorf\SpecialChar \@.

\end_layout

\begin_layout Standard
La primera encarnación de PHP era un conjunto simple de ficheros binarios
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Common Gateway Interface}
\end_layout

\end_inset

 (CGI) escritos en el lenguaje de programación C.
 Originalmente utilizado para rastrear visitas de su currículum online,
 llamó al conjunto de 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{scripts}
\end_layout

\end_inset

 "
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Personal Home Page Tools}
\end_layout

\end_inset

", más frecuentemente referenciado como "
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{PHP Tools}
\end_layout

\end_inset

"\SpecialChar \@.

\end_layout

\begin_layout Standard
En junio de 1995, Rasmus publicó el codigo fuente de 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{PHP Tools}
\end_layout

\end_inset

, lo que permitió a los desarrolladores usarlo como considerasen apropiado\SpecialChar \@.

 Esto animó a los usuarios y permitió que proporcionasen soluciones a los
 errores del código 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{key-10}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
Es un lenguaje interpretado orientado al desarrollo de aplicaciones web
 dinámicas con acceso a información almacenada en una base de datos\SpecialChar \@.
 El código
 fuente escrito en PHP es invisible al navegador web y al cliente ya que
 es el servidor el que se encarga de ejecutar el código y enviar su resultado
 HTML al navegador\SpecialChar \@.
 Esto hace que la programación en PHP sea segura y confiable\SpecialChar \@.

 Aunque puede ser usado también desde un interfaz de línea de comandos o
 como aplicación de escritorio\SpecialChar \@.
 Implementa capacidad de conexión con la mayoría
 de los motores de base de datos que se utilizan en la actualidad, destaca
 su conectividad con MySQL y PostgreSQL\SpecialChar \@.
 Posee la capacidad de expandir su
 potencial utilizando módulos\SpecialChar \@.
 Permite aplicar técnicas de programación orientada
 a objetos\SpecialChar \@.
 No requiere definición de tipos de variables aunque sus variables
 se pueden evaluar también por el tipo que estén manejando en tiempo de
 ejecución\SpecialChar \@.
 PHP5 incorpora manejo de excepciones, una gran herramienta para
 el desarrollo de aplicaciones complejas orientadas a la interacción con
 usuarios, tales como aplicaciones web\SpecialChar \@.

\end_layout

\begin_layout Standard
Si bien PHP no obliga a quien lo usa a seguir una determinada metodología
 a la hora de programar, el programador puede aplicar en su trabajo cualquier
 técnica de programación o de desarrollo que le permita escribir código
 ordenado, estructurado y manejable.
 Un ejemplo de esto son los desarrollos que en PHP se han hecho del patrón
 de diseño Modelo Vista Controlador (MVC), que permiten separar el tratamiento
 y acceso a los datos, la lógica de control y la interfaz de usuario en
 tres componentes independientes\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 5cm
\end_inset


\begin_inset Graphics
	filename Diseño/PHP_arq.gif
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Procesos que describen PHP
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
Apache
\end_layout

\begin_layout Standard
Para la puesta en servicio de la aplicación se ha optado por la opción de
 Apache 2\SpecialChar \@.
 Utilizando PHP para el desarrollo es obvio el uso de Apache ya
 que está implementado como un módulo de forma que aprovecha la máxima integraci
ón con el servidor y velocidad posible\SpecialChar \@.

\end_layout

\begin_layout Standard
El servidor HTTP Apache es un servidor web libre y de código abierto, el
 más popular en cuanto a uso, sirviendo de facto como plataforma de referencia
 para el diseño y evaluación de otros servidores web\SpecialChar \@.
 Pero en la actualidad
 está incrementando su utilización para uso comercial\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 6cm
\end_inset


\begin_inset Graphics
	filename Diseño/apache_estruc.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Arquitectura de directorios de Apache
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Apache_estruct"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Los directorios de Apache albergan funciones de muy diferentes tipos como
 configuración, almacenamiento de librerías, etc\SpecialChar \@.
 Se dispone a continuación
 un breve recorrido por la estructura que podemos observar en la figura
 
\begin_inset CommandInset ref
LatexCommand ref
reference "Apache_estruct"

\end_inset

, que aclarará algunos conceptos sobre este servidor web\SpecialChar \@.

\end_layout

\begin_layout Standard
En el directorio 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{bin/}
\end_layout

\end_inset

 se encuentra el ejecutable para arrancar la aplicación, diferentes 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{scripts}
\end_layout

\end_inset

 y el precompilador de JSP\SpecialChar \@.
 En 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{common/}
\end_layout

\end_inset

 se albergan clases y JARs accesibles a todas las aplicaciones web y al
 propio Apache\SpecialChar \@.
 Los archivos de configuración, como por ejemplo el 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{server.xml}
\end_layout

\end_inset

, se encuentran en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{conf/}
\end_layout

\end_inset

\SpecialChar \@.
 Los archivos de registro y los elementos de consulta de posibles errores
 en las aplicaciones se albergan en el directorio 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{logs/}
\end_layout

\end_inset

\SpecialChar \@.
 El directorio 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{server/}
\end_layout

\end_inset

 ha sido creado para albergar clases y aplicaciones sólo accesibles por
 Apache\SpecialChar \@.
 Las clases y JARs accesibles por todas las aplicaciones web se almacenan
 en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{shared/}
\end_layout

\end_inset

\SpecialChar \@.
 Como era de esperar los archivos temporales que genera Apache se alamcenan
 en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{temp/}
\end_layout

\end_inset

\SpecialChar \@.
 Las aplicaciones web de ejemplo, las creadas por usuarios y otras propias
 de Apache se almacenen en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{webapps/}
\end_layout

\end_inset

\SpecialChar \@.
 En este directorio se encuentran los archivos WAR (
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Web Application Archive}
\end_layout

\end_inset

 - Archivo de aplicación web), que son archivos JAR utilizados para distribuir
 una colección de 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{JavaServer Pages}
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{servlets}
\end_layout

\end_inset

, clases Java, archivos XML, librerías de 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{tags}
\end_layout

\end_inset

 y páginas web estáticas (HTML y archivos relacionados) que juntos constituyen
 una aplicación web\SpecialChar \@.
 Y por último, en el directorio 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{work/}
\end_layout

\end_inset

 se almacenan archivos temporales, como los JSP compilados, etc\SpecialChar \@.

\end_layout

\begin_layout Standard
Algunas entornos de desarrollo como Eclipse o NetBeans instalan su propia
 instancia de Apache utilizando su propia configuración, lo que evita tener
 que instalar 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{plugins}
\end_layout

\end_inset

 para integrar Apache y generar archivos WAR para distribuir la aplicación
 web fácilmente u otros menesteres\SpecialChar \@.

\end_layout

\begin_layout Standard
En el interior del directorio 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{webapps/}
\end_layout

\end_inset

 se encuentra la raíz de la aplicación web, aunque en nuestro caso hemos
 modificado el archivo 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{default}
\end_layout

\end_inset

 dentro del servidor creando un 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{virtualhost}
\end_layout

\end_inset

 que hace que cuando una URL determinada, que para nosotros puede ser 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{emeeting.campusdomar.es, emeetings.campusdomar.es, meeting.campusdomar.es,
 meetings.cam
\backslash
-pusdomar.es}
\end_layout

\end_inset

, intenta acceder al servidor Apache, el propio archivo de configuración
 redirige la petición a la carpeta 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{web}
\end_layout

\end_inset

 de Symfony donde se encuentra el fichero 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{app.php}
\end_layout

\end_inset

 que arranca la aplicación\SpecialChar \@.

\end_layout

\begin_layout Standard
También existen los directorios 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{WEB-INF}
\end_layout

\end_inset

 y 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{META-INF}
\end_layout

\end_inset

 (opcional), situados en una zona privada de la aplicación\SpecialChar \@.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{WEB-INF}
\end_layout

\end_inset

 contiene el descriptor de despliegue de la aplicación, las clases compiladas,
 las bibliotecas de clases y las etiquetas para usar en los documentos JSP\SpecialChar \@.

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{META-INF}
\end_layout

\end_inset

 suele contener sólo el archivo 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{MANIFEST.MF}
\end_layout

\end_inset

, que indica las bibliotecas de las que depende la aplicación\SpecialChar \@.
 Se suele generar
 automáticamente\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
MySQL
\end_layout

\begin_layout Standard
MySQL es un Sistema de Gestión de Bases de Datos (SGBD) relacional, que
 por lo tanto utiliza SQL, multihilo y multiusuario del que se estiman más
 de un millón de instalaciones\SpecialChar \@.

\end_layout

\begin_layout Standard
Lo que durante un tiempo se consideró como un sencillo juguete para su uso
 en lugares web, se ha convertido en la actualidad en una solución viable
 y de misión crítica para la administración de datos\SpecialChar \@.
 Anteriormente, MySQL
 se consideraba como la opción ideal para webs principalmente por su gran
 velocidad\SpecialChar \@.
 Sin embargo, en la actualidad incorpora muchas de las funciones
 necesarias para otros entornos conservando su rapidez característica\SpecialChar \@.
 MySQL
 supera desde hace tiempo a muchas soluciones comerciales en velocidad y
 dispone de un sistema de permisos elegante y potente, además, la versión
 4 incluye el motor de almacenamiento InnoDB compatible con ACID\SpecialChar \@.

\end_layout

\begin_layout Standard
Los registros de las tablas InnoDB tienen las siguientes características:
\end_layout

\begin_layout Itemize
Cada registro de índice en InnoDB contiene un encabezado de seis bytes\SpecialChar \@.
 El
 encabezado se emplea para enlazar entre sí registros consecutivos, y también
 en el bloqueo a nivel de fila\SpecialChar \@.

\end_layout

\begin_layout Itemize
Los registros en el índice agrupado contienen campos para todas las columnas
 definidas por el usuario\SpecialChar \@.
 Adicionalmente, hay un campo de seis bytes para
 el identificador de transacción y un campo de siete bytes para el 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{roll pointer}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Itemize
Si no se definió una clave primaria para la tabla, cada registro de índice
 agrupado contiene un campo de identificación de fila de seis bytes\SpecialChar \@.

\end_layout

\begin_layout Itemize
Cada registro de índice secundario contiene también todos los campos definidos
 para la clave del índice agrupado\SpecialChar \@.

\end_layout

\begin_layout Itemize
Un registro contiene además un puntero a cada campo del mismo\SpecialChar \@.
 Si la longitud
 total de los campos en un registro es menor de 128 bytes, el puntero medirá
 un byte, de lo contrario, tendrá dos bytes de longitud\SpecialChar \@.
 La matriz de estos
 punteros se conoce como el directorio de registros\SpecialChar \@.
 El área a donde señalan
 estos punteros se denomina la parte de datos del registro\SpecialChar \@.

\end_layout

\begin_layout Itemize
Internamente, InnoDB almacena las columnas de caracteres de longitud fija
 en un formato de longitud fija\SpecialChar \@.
 InnoDB trunca los espacios sobrantes de
 las columnas VARCHAR\SpecialChar \@.
 Nótese que MySQL puede convertir internamente columnas
 CHAR a VARCHAR\SpecialChar \@.

\end_layout

\begin_layout Itemize
Un valor NULL SQL reserva 1 ó 2 bytes en el directorio de registros\SpecialChar \@.
 No reservará
 ningún byte en la parte de datos del registro si se almacena en una columna
 de longitud variable\SpecialChar \@.
 En una columna de longitud fija, reservará en la parte
 de datos la longitud asignada a dicha columna\SpecialChar \@.
 La razón por la que se reserva
 este espacio fijo a pesar de tratarse de un valor NULL, es que en el futuro
 se podrá insertar en su lugar un valor no-NULL sin provocar la fragmentación
 de la página de índice\SpecialChar \@.

\end_layout

\begin_layout Standard
Los nombres de bases de datos, tablas, índices, columnas y alias son identificad
ores\SpecialChar \@.
 Los identificadores de MySQL tienen una sintaxis concreta\SpecialChar \@.
 La longitud
 máxima para bases de datos, tablas, índices y columnas es de 64 bytes y
 para alias de 255 bytes\SpecialChar \@.

\end_layout

\begin_layout Standard
Adicionalmente a las restricciones que se acaban de detallar, ningún identificad
or puede contener un caracter ASCII 0 o un byte con un valor de 255\SpecialChar \@.
 Los
 nombres de bases de datos, tablas y columnas no deberían terminar con caractere
s de espacio\SpecialChar \@.
 MySQL 5.0 permite el uso de comillas en identificadores, aunque
 es mejor evitarlos tanto como sea posible\SpecialChar \@.

\end_layout

\begin_layout Standard
Los identificadores se almacenan empleando Unicode (UTF8).
 Esto se aplica a identificadores en las definiciones de tabla que se almacenan
 en ficheros .frm y a identificadores almacenados en las tablas de permisos
 en la base de datos mysql\SpecialChar \@.

\end_layout

\begin_layout Standard
Es preciso ser cuidadoso al utilizar MD5 para producir nombres de tablas,
 porque puede producir nombres ilegales\SpecialChar \@.
 En nuestro caso el MD5 es usado
 únicamente para generar unas URLs especiales para el acceso de usuarios
 y se almacenan en las tablas, pero nunca es utilizado para generar nombres
 de tablas\SpecialChar \@.

\end_layout

\begin_layout Standard
MySQL posee procedimientos almacenados y funciones que son funcionalidades
 añadidas a partir de la versión de MySQL 5.0\SpecialChar \@.
 Un procedimiento almacenado
 es un conjunto de comandos SQL que pueden almacenarse en el servidor\SpecialChar \@.
 Una
 vez que se hace, los clientes no necesitan relanzar los comandos individuales
 pero pueden en su lugar referirse al procedimiento almacenado\SpecialChar \@.

\end_layout

\begin_layout Standard
Los procedimientos almacenados pueden mejorar el rendimiento ya que se necesita
 enviar menos información entre el servidor y el cliente\SpecialChar \@.
 Por contra se aumenta
 la carga de la base de datos del servidor ya que la mayoría del trabajo
 se realiza en la parte del servidor y no en el cliente\SpecialChar \@.

\end_layout

\begin_layout Standard
Los procedimientos almacenados le permiten tener bibliotecas o funciones
 en el servidor que sirve de base de datos\SpecialChar \@.
 Esta característica es compartida
 por los lenguajes de programación modernos que permiten este diseño interno,
 por ejemplo, usando clases\SpecialChar \@.

\end_layout

\begin_layout Standard
En nuestro MySQL sigue la sintaxis SQL:2008 para procedimientos almacenados\SpecialChar \@.

\end_layout

\begin_layout Standard
Muchas de estas restricciones son corregidas por Doctrine y en caso de no
 tener la capacidad de correción, la generación de las estructuras de la
 base de datos mediante las instrucciones de propias de Doctrine ofrecerá
 los errores correspondientes para una rápida corrección del código erróneo\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
Javascript
\end_layout

\begin_layout Standard
JavaScript es un lenguaje de programación que se utiliza principalmente
 para crear páginas web dinámicas.
\end_layout

\begin_layout Standard
Una página web dinámica es aquella que incorpora efectos como texto que
 aparece y desaparece, animaciones, acciones que se activan al pulsar botones
 y ventanas con mensajes de aviso al usuario.
\end_layout

\begin_layout Standard
Técnicamente, JavaScript es un lenguaje de programación interpretado, por
 lo que no es necesario compilar los programas para ejecutarlos.
 En otras palabras, los programas escritos con JavaScript se pueden probar
 directamente en cualquier navegador sin necesidad de procesos intermedios.
\end_layout

\begin_layout Standard
A pesar de su nombre, JavaScript no guarda ninguna relación directa con
 el lenguaje de programación Java 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{key-11}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
jQuery
\end_layout

\begin_layout Standard
jQuery es una biblioteca de JavaScript rápida y concisa que simplifica el
 código en documentos HTML, manejo de eventos, animación, y las interacciones
 Ajax para el desarrollo web rápido.
 
\end_layout

\begin_layout Standard
El proyecto jQuery comenzó como una idea en 2005 y ha crecido hasta convertirse
 en el conjunto de proyectos que conocemos hoy en día.
 jQuery está diseñado para cambiar la forma en que el usuario escribe JavaScript.
 Sin duda utilizar la API de cualquier software es cómodo y sencillo\SpecialChar \@.
 Es
 un camino rápido para conseguir las funcionalidades en una aplicación o
 página web, de una forma rápida obteniendo unos resultados verdaderamente
 satisfactorios 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{key-12}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Itemize
JQuery UI
\end_layout

\begin_deeper
\begin_layout Standard
Esta librería es sencilla y fácil de manejar utilizando la documentación
 detallada y sus tutoriales, además existe una comunidad muy activa a disposició
n de cualquier usuario\SpecialChar \@.
 Compatible con IE 6.0 +, Firefox 3 +, Safari 3.1 +,
 Opera 9.6 + y Google Chrome\SpecialChar \@.
 Ofrece al usuario una enorme potencia, que permite
 alcanzar un alto nivel en toda aplicación web\SpecialChar \@.

\end_layout

\begin_layout Standard
jQuery UI proporciona abstracciones de bajo nivel de interacción y animación,
 efectos avanzados y de alto nivel y 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{widgets}
\end_layout

\end_inset

 configurables\SpecialChar \@.
 Está construido en la parte superior de la biblioteca jQuery
 JavaScript, y se utiliza para crear aplicaciones web altamente interactivas
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{key-12}
\backslash
cite{key-13}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
HTML 5 y CSS 3
\end_layout

\begin_layout Standard
La elección de este avanzado lenguaje es obvia\SpecialChar \@.
 Dentro de no muchos años
 todos los exploradores sorportarán únicamente HTML 5 que incluye unas mejoras
 para la visualización de vídeos muy importantes e incluye características
 de estilo novedosas, con la ayuda de Twig es altamente eficiente la creación
 de plantillas HTML y la última versión revisada es la mejor opción en la
 actualidad\SpecialChar \@.

\end_layout

\begin_layout Standard
CSS 3 incluye las últimas mejoras en el diseño de interfaces y en compatibilidad
 con exploradores\SpecialChar \@.
 De esta forma sacaremos el mayor partido a nuestro diseño
 y facilitaremos la compatibilidad con todos los exploradores del mercado\SpecialChar \@.

 El consorcio W3C valora cualquier cambio que se realice para conseguir
 un estándar actualizado y compatible con el mayor número de exploradores,
 por ello las novedades que incorpora CSS en su 3ª versión son altamente
 recomendables\SpecialChar \@.

\end_layout

\begin_layout Chapter
Decisiones de diseño
\begin_inset CommandInset label
LatexCommand label
name "chap:Diseño-del-proyecto"

\end_inset


\end_layout

\begin_layout Section
\noindent
Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Durante más de 25 años, Adobe ha revolucionado la interacción de todo el
 mundo con ideas e información\SpecialChar \@.
 Tanto en la web como en papel, en vídeo o
 en dispositivos móviles, las tecnologías y el software de Adobe han llegado
 a todos los rincones del mundo.
 Adobe Flash
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset

 Player es la plataforma de software más extendida, y se encuentra instalada
 en más del 98 % de los equipos de escritorio con conexión a Internet\SpecialChar \@.
 La
 tecnología Adobe Flash es la más utilizada para producir vídeo en la Web,
 mientras que el software Adobe Reader
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset

 se ha convertido en el estándar mundial para compartir documentos e información\SpecialChar \@.

 Las famosas marcas de Adobe como Adobe Photoshop
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset

, PDF, Acrobat Reader
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset

 y Flash, fijan continuamente estándares para la producción y difusión de
 contenidos sofisticados que resulten atractivos para los usuarios\SpecialChar \@.

\end_layout

\begin_layout Standard
Este sistema, que se complementa con Adobe
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset

 Connect™, es especial para el desarrollo de reuniones en línea al instante
 y clases virtuales, a través de una amplia gama de navegadores web y sin
 necesidad de descargas pesadas\SpecialChar \@.
 Permite compartir contenido dinámico, incluido
 flujo de audio, vídeo y simulaciones de software, también hace posible
 las conferencias de vídeo entre varias personas\SpecialChar \@.
 Además, las salas de reuniones
 personalizables de 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Acrobat Connect Professional}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset

 y todo su contenido se guardan automáticamente y siempre quedan disponibles,
 lo que se traduce en una reducción considerable del tiempo de preparación
 para los seminarios recurrentes, las reuniones de equipos y las presentaciones
 de ventas\SpecialChar \@.
 Es la solución para conferencias web de tipo 
\begin_inset Quotes eld
\end_inset

todo en uno
\begin_inset Quotes erd
\end_inset

 más completa, y de lejos ofrece tres ventajas claras con respecto a los
 productos de la competencia:
\end_layout

\begin_layout Enumerate
Acceso inmediato
\end_layout

\begin_deeper
\begin_layout Standard
Los asistentes pueden participar en las reuniones con sólo hacer clic en
 una URL, sin necesidad de perder tiempo con descargas o esperas molestas.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Acrobat Connect Professional}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset

 permite que personas de todo el mundo puedan reunirse para colaborar e
 interactuar de forma inmediata\SpecialChar \@.
 Lo único que se requiere es un navegador
 web y 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Flash Player}
\end_layout

\end_inset

, una aplicación que ya está instalada en más del 98 % de los equipos de
 escritorio conectados a Internet.
\end_layout

\begin_layout Standard
A diferencia de otras soluciones líderes para conferencias web, que requieren
 que los participantes descarguen 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{plug-ins}
\end_layout

\end_inset

 o 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{software}
\end_layout

\end_inset

 propietario, lo cual puede significar grandes retrasos cuando los usuarios
 se enfrenten a problemas técnicos, e incluso puede impedir que algunos
 participantes asistan a la reunión\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Enumerate
Alto impacto
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Flash}
\end_layout

\end_inset

 es la tecnología utilizada en la mayoría de los archivos multimedia de
 vídeo e interactivos que se encuentran hoy en Internet.
 En las conferencias web, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Flash}
\end_layout

\end_inset

 permite disponer de vídeo, audio e interactividad lo cual brinda a los
 usuarios la sensación de estar asistiendo en persona\SpecialChar \@.
 La elegante interfaz
 y las funciones de interactividad de 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Acrobat Connect Professional}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset

 mantienen al público interesado, con el fin de que trabajen de forma productiva
 y que retengan lo aprendido, al mismo tiempo que disfrutan mientras lo
 hacen\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Enumerate
En directo y bajo demanda
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Acrobat Connect Professional}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset

 hace posible reunir a personas de distintas partes del mundo en una sesión
 de trabajo en tiempo real o en un aula virtual, y también ofrece la opción
 de que los usuarios accedan a contenidos importantes cuando y donde les
 resulte más conveniente\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 3cm
\end_inset


\begin_inset Graphics
	filename Diseño/RelacionUsuarioAdobeFlashPlayer.jpg
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Utilización de Adobe Flash Player
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Acrobat Connect Professional}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset

 se basa en una arquitectura abierta y ampliable que permite una integración
 rentable con la infraestructura existente y las inversiones futuras en
 tecnología\SpecialChar \@.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Acrobat Connect Professional}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset

 utiliza estándares como XML y Java™ para el intercambio de datos, y es
 la única solución que admite servicios web que se pueden usar para la gestión
 de todos los elementos\SpecialChar \@.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset

 ofrece también un centro de recursos para desarrolladores, con cientos
 de interfaces de programación de aplicaciones (API) y kits de desarrollo
 de software (SDK) para ampliar funciones e integrar la solución con otras
 aplicaciones y servicios internos, hasta crear la solución personalizada
 que mejor se adapte a las necesidades exclusivas de la organización\SpecialChar \@.

\end_layout

\begin_layout Standard
La API de 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 es sin duda su principal baza para que cualquier desarrollador de aplicaciones
 web lo elija como motor de vídeoconferencia\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 posee una de las API's más completas para sistemas de vídeoconferencia,
 lo que ofrece la posibilidad de configurar todos los parámetros de una
 sala de una forma muy precisa\SpecialChar \@.
 Para este proyecto una de las funcionalidades
 más interesante es la posibilidad de configurar las plantillas de cada
 sala para adaptar nuestra aplicación a los diferentes escenarios, ya sean
 clases magistrales, reuniones de grupos de investigación con uno o varios
 ponentes, salas de trabajo en grupo, etc\SpecialChar \@.
 También ofrece la opción de configurar
 el ancho de banda que ocupará el flujo de audio y vídeo de la aplicación
 en su viaje por la red\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
Symfony
\end_layout

\begin_layout Standard
Es unos de los 
\shape italic
frameworks 
\shape default
con mayor impacto en la actualidad\SpecialChar \@.
 Symfony aumenta exponencialmente la productiv
idad y ayuda a mejorar la calidad de las aplicaciones web aplicando todas
 las buenas prácticas y patrones de diseño que se han definido para la web
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{key-7}
\end_layout

\end_inset

\SpecialChar \@.
 Un gran abanico de aplicaciones web que nacen en la actualidad se realizan
 utilizando este 
\shape italic
framework,
\shape default
 ya que ofrece una gran versatilidad y la posibilidad de testear el código
 con un eficiente sistema interno para la corrección de errores\SpecialChar \@.
 Symfony
 también dota a las aplicaciones de una gran velocidad como se ha comentado
 en el apartado 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Arquitectura"

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
Su asignador relacional de objetos (ORM) y la capa de abstracción de base
 de datos de potente calado y gran capacidad de configuración, hacen que
 este 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{framework}
\end_layout

\end_inset

 ofrezca al desarrollador la posibilidad de realizar aplicaciones web basadas
 en PHP muy sofisticadas\SpecialChar \@.
 Una de las virtudes más importantes para la elección
 de este 
\shape italic
framework
\shape default
, es la gran comunidad que lo respalda y que aporta correción de errores
 e implantación de tecnologías punteras en sus últimas versiones\SpecialChar \@.
 Las versiones
 actuales nos garantizan que la evolución de Symfony guarde una buena estructura
 de manera que actualizar el antiguo 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{software}
\end_layout

\end_inset

 implementado con Symfony no traerá grandes quebraderos de cabeza\SpecialChar \@.

\end_layout

\begin_layout Standard
El proyecto Doctrine hace que la elección de Symfony sea obvia ante el desarroll
o de cualquier aplicación digna de perdurar en el tiempo\SpecialChar \@.
 Ofrece un gran
 abanico de opciones para ampliar nuestra base de datos y optimizar el tiempo
 empleado para conseguir las nuevas funcionalidades en un breve espacio
 de tiempo y sin un gran despliegue humano\SpecialChar \@.
 Cualquier tecnología web puede
 ser incrustada en los ficheros de Symfony para mejorar o aumentar la compatibil
idad entre aplicaciones y necesidades del usuario final\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
PHP
\end_layout

\begin_layout Standard
Según crecía PHP, empezó a ser reconocido como una popular plataforma de
 desarrollo web\SpecialChar \@.
 Una de las más interesantes formas de ver esta tendencia
 fue observando los libros de PHP que se han ido publicando a lo largo de
 los años\SpecialChar \@.
 Este gran número de libros, escritos por diferentes autores, publicado
s por muchos editores, y su disponibilidad en tantas lenguas son un fuerte
 testimonio del éxito mundial de PHP 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{key-10}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
Las cuatro grandes características para declinar la balanza hacia PHP han
 sido:
\end_layout

\begin_layout Itemize
Velocidad: No sólo la velocidad de ejecución, la cual es importante, sino
 además no crear demoras en la máquina\SpecialChar \@.
 Por esta razón no debe requerir demasiado
s recursos de sistema.
 PHP se integra muy bien junto a otro software, especialmente bajo ambientes
 Unix, cuando se configura como módulo de Apache\SpecialChar \@.
 
\end_layout

\begin_layout Itemize
Estabilidad: La velocidad no sirve de mucho si el sistema no es fiable.
 Ninguna aplicación es 100% libre de errores, pero con una increíble comunidad
 de programadores y usuarios como respaldo es mucho mas difícil que sobrevivan.
 PHP utiliza su propio sistema de administración de recursos y dispone de
 un sofisticado método de manejo de variables, conformando un sistema robusto
 y estable.
 
\end_layout

\begin_layout Itemize
Seguridad: El sistema debe poseer protecciones contra ataques.
 PHP provee diferentes niveles de seguridad configurables\SpecialChar \@.
 
\end_layout

\begin_layout Itemize
Simplicidad: Se les debe permitir a los programadores generar código productivam
ente en el menor tiempo posible.
 Usuarios con experiencia en C y C++ podrán utilizar PHP rápidamente\SpecialChar \@.
 No
 cabe la menor duda de que la utilización de un 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{framework}
\end_layout

\end_inset

 simplifica todavía más su utilización\SpecialChar \@.

\end_layout

\begin_layout Standard
Este conjunto de dogmas unidos a la gran comunidad que desarrolla PHP y
 ayuda a incluir las funcionalidades de última generación, hacen de PHP
 el software recomendado para el servidor Apache, que como describiremos
 a continuación hacen un fantástico equipo, altamente recomendado para la
 puesta en servicio de aplicaciones web\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
Apache
\end_layout

\begin_layout Standard
La elección del servidor Apache se debe a las siguientes ventajas:
\end_layout

\begin_layout Itemize
Modular:
\end_layout

\begin_deeper
\begin_layout Standard
Podemos incluir multitud de módulos para adecuar el servidor a las necesidades
 de nuestra aplicación\SpecialChar \@.
 De hecho, PHP posee un módulo específico para Apache,
 como ya se ha comentado, que aprovecha al máximo la velocidad de Apache
 ya que actúa sobre el núcleo del servidor de forma directa a través de
 este módulo\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Código abierto:
\end_layout

\begin_deeper
\begin_layout Standard
Las plataformas de código abierto nos permiten desarrollar código de forma
 libre y a un menor coste que el software propietario\SpecialChar \@.
 Los foros de discusión
 y resolución de errores son mucho mayores, de forma que un desarrollador
 puede encontrar solución a su problema de forma rápida y en caso de ser
 pionero en una casuística determinada, también obtendrá respuesta de forma
 rápida, ya que la comunidad libre es muy activa\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Multi-plataforma:
\end_layout

\begin_deeper
\begin_layout Standard
Es imprescindible para cualquier aplicación poder desplegarse en todo sistema
 operativo existente en el mercado, y esta premisa la cumple Apache a la
 perfección\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Extensible:
\end_layout

\begin_deeper
\begin_layout Standard
Consta de una amplia galería de módulos que hacen que podamos agregar multitud
 de funcionaliades, como el ya mencionado y utilizado en este proyecto módulo
 para PHP\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Popular:
\end_layout

\begin_deeper
\begin_layout Standard
Gracias a su popularidad que crece día a día debido a su licencia, cualquier
 desarrollador cuenta con una amplia comunidad que lo respalda y aumenta
 la actividad tanto de desarrolladores como de expertos en este servidor\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
MySQL
\end_layout

\begin_layout Standard
Son muchas las razones para escoger MySQL como solución de misión crítica
 para la administración de datos\SpecialChar \@.
 Las más interesantes ligadas a este proyecto
 son:
\end_layout

\begin_layout Itemize
Coste: El coste de MySQL es gratuito en su mayor parte y su servicio de
 asistencia resulta económico en caso de ser necesario\SpecialChar \@.

\end_layout

\begin_layout Itemize
Asistencia: MySQL AB, la compañía responsable del desarrollo de MySQL, ofrece
 contratos de asistencia a precios razonables y existe una nutrida y activa
 comunidad MySQL\SpecialChar \@.

\end_layout

\begin_layout Itemize
Velocidad: MySQL es mucho mas rápido que la mayor parte de sus rivales,
 por tanto en este aspecto es obvia su elección\SpecialChar \@.

\end_layout

\begin_layout Itemize
Funcionalidad: MySQL dispone de muchas de las funciones que exigen los desarroll
adores profesionales, como compatibilidad completa con ACID, compatibilidad
 para la mayor parte de SQL ANSI, volcados online, duplicación, funciones
 SSL e interacción con la mayor parte de los entornos de programación.
 Se desarrolla y actualiza mas rápidamente que la mayoría de sus rivales,
 por lo que prácticamente todas las funciones estándar de MySQL no están
 en fase de desarrollo\SpecialChar \@.

\end_layout

\begin_layout Itemize
Portabilidad: MySQL se ejecuta en la inmensa mayoría de sistemas operativos
 y, en la mayor parte de los casos, los datos se pueden transferir de un
 sistema a otro sin dificultad\SpecialChar \@.

\end_layout

\begin_layout Itemize
Facilidad de uso: MySQL resulta fácil de utilizar y de administrar.
 Gran parte de las viejas bases de datos presentan problemas por utilizar
 sistemas obsoletos, lo que complica innecesariamente las tareas de administraci
ón\SpecialChar \@.
 Las herramientas de MySQL son potentes y flexibles, sin sacrificar su
 capacidad\SpecialChar \@.

\end_layout

\begin_layout Standard
MySQL 5.5 es rápido, dispone de funciones de volcado online e incorpora una
 gran cantidad de funciones nuevas\SpecialChar \@.
 Son pocas las razones para desechar MySQL
 como solución de base de datos\SpecialChar \@.

\end_layout

\begin_layout Standard
MySQL AB dispone de un sistema de asistencia eficiente y a un precio razonable,
 y, como ocurre con la mayor parte de las comunidades de código abierto,
 hay disponible una gran cantidad de ayuda en la web\SpecialChar \@.

\end_layout

\begin_layout Standard
Junto con el visor de base de datos TOra que permite la edición de la base
 de datos de una forma sencilla, facilitando la búsqueda visual de datos
 para su depuración y mayor facilidad en el diseño, hacen de estas dos herramien
tas la mejor opción disponible en el mercado relación calidad-precio para
 el desarrollo de aplicaciones web y cada vez más en otros sectores\SpecialChar \@.

\end_layout

\begin_layout Chapter
Implementación del proyecto
\begin_inset CommandInset label
LatexCommand label
name "chap:Desarrollo-del-proyecto"

\end_inset


\end_layout

\begin_layout Standard
La aplicación 
\begin_inset Quotes eld
\end_inset

eMeeting
\begin_inset Quotes erd
\end_inset

 está diseñada para crear salas de forma dinámica bajo demanda y acceder
 a las mismas de forma similar a una llamada telefónica, es decir, en el
 momento de acceso se consulta la disponibilidad de recursos y se deniega
 el acceso en el peor de los casos\SpecialChar \@.
 En la creación de la sala se pueden seleccion
ar los usuarios destino de una lista o enviando la URL correspondiente por
 algún medio electrónico\SpecialChar \@.
 El número máximo de conferencias simultáneas es
 una limitación para la aplicación, ya que el software propietario aumenta
 su coste con el incremento de salas\SpecialChar \@.
 Sin embargo en nuestro diseño se ha
 supuesto que nunca se llegará a tal número y se han dimensionado las conexiones
 con un criterio que garantice un bajo porcentaje de bloqueo de petición
 de conexión, para lo cual se realizará un interfaz de seguimiento que mostrará
 estadísticas con el número máximo de conferencias simultáneas, número de
 usuarios en activo y otros parámetros de interés\SpecialChar \@.
 De esta forma la lógica
 del número máximo de salas será transparente para el usuario\SpecialChar \@.

\end_layout

\begin_layout Standard
Para llevar a cabo la aplicación se ha dispuesto de 5 elementos\SpecialChar \@.
 Como se
 puede observar en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "Estruc_aplicacion"

\end_inset

, contamos con un cliente que representa el conjunto de usuarios involucrados
 en la comunicación que disfrutan de la aplicación desde su explorador web,
 aunque también es posible operar desde un terminal móvil previa descarga
 de un 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{plugin}
\end_layout

\end_inset

, y 4 servidores que pasamos a describir a continuación\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 1cm
\end_inset


\begin_inset Graphics
	filename Diseño/Esquema_aplicación.jpg
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Diagrama estructural de la aplicación
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Estruc_aplicacion"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
El servidor eMeeting: almacena todos los ficheros necesarios para la configuraci
ón y el funcionamiento de la aplicación web\SpecialChar \@.

\end_layout

\begin_layout Itemize
La base de datos de respaldo de la aplicación: que en este caso se implenta
 utilizando el motor MySQL\SpecialChar \@.
 El diseño de la aplicación nos permite modificar
 el motor de base de datos realizando cambios exiguos\SpecialChar \@.

\end_layout

\begin_layout Itemize
Directorio +: este servidor ayudará a sincronizar la macroaplicación mencionada
 en el capítulo 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Introducción"

\end_inset

 y que se describirá con mayor detalle en este capítulo\SpecialChar \@.
 Nuestra base de
 datos de respaldo sería redundante pero en la fase de despliegue y puesta
 en servicio es aconsejable para aportar una mayor fiabilidad y estabilidad
 al servicio\SpecialChar \@.

\end_layout

\begin_layout Itemize
El servidor 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset

: donde se encuentra alojada la aplicación Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset

que usaremos como motor de vídeoconferencia\SpecialChar \@.

\end_layout

\begin_layout Itemize
El servidor CAS: que aloja el servicio para autenticar a los usuarios que
 accedan a la aplicación y ayudará a 
\begin_inset Quotes eld
\end_inset

Directorio +
\begin_inset Quotes erd
\end_inset

 a detectar usuarios ya registrados en alguna aplicación para evitar registros
 superfluos en el resto de aplicaciones que componen 
\begin_inset Quotes eld
\end_inset

Campus do Mar
\begin_inset Quotes erd
\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
Archivos de configuración
\end_layout

\begin_layout Standard
Los archivos de configuración están almacenados en diferentes carpetas dentro
 de los directorios Symfony descritos en la subsección 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:SYMFONY"

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
En el interior del directorio app/config se encuentran dos ficheros importantes:
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{routing.yml}
\end_layout

\end_inset

 y 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{security.yml}
\end_layout

\end_inset

\SpecialChar \@.
 Este par de ficheros, contienen la configuración que determina qué URLs
 de acceso a la aplicación serán públicas o privadas y cuál será la puerta
 de entrada para las URLs privadas\SpecialChar \@.

\end_layout

\begin_layout Standard
En la carpeta 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Resources/public/css}
\end_layout

\end_inset

 guardaremos los archivos para alojar el CSS, en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Resources/public/js}
\end_layout

\end_inset

 el Javascript, en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Resources/public/images}
\end_layout

\end_inset

 las imágenes y en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Resources/public/wsdl}
\end_layout

\end_inset

 la configuración de las funciones del 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{middleware}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
En la carpeta 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Resources/views}
\end_layout

\end_inset

 guardaremos las plantillas que se mostrarán como página HTML para cada
 uno de los controladores de aplicación debidamente ordenados según a cuál
 correspondan\SpecialChar \@.
 En el interior de este directorio se encuentra una carpeta
 por cada controlador, con archivos que ofrecen información para completar
 los parámetros y elementos necesarios en cada plantilla HTML\SpecialChar \@.

\end_layout

\begin_layout Standard
En la carpeta 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Test}
\end_layout

\end_inset

 se encuentra una organización de directorios con archivos para diseñar
 pruebas específicas para cada controlador, entidad y servicio de la aplicación\SpecialChar \@.

 En el interior de cada uno de estos 3 directorios se encuentran los ficheros
 para realizar pruebas que han sido diseñadas por el programador e intentan
 detectar errores, fallos de diseño o puntos débiles de la aplicación\SpecialChar \@.
 Esta
 funcionalidad de Symfony ha revelado una gran cantidad de errores en el
 código, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{a priori}
\end_layout

\end_inset

 muy difíciles de detectar\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
CRON
\end_layout

\begin_layout Standard
El cron es la parte del servidor 
\begin_inset Quotes eld
\end_inset

eMeeting
\begin_inset Quotes erd
\end_inset

 que se encarga de ejecutar funciones periódicas que ayudan a la sincronización,
 depuración y mantenimiento de la aplicación\SpecialChar \@.
 Cada una de estas funciones
 realiza tareas críticas para el correcto funcionamiento de la aplicación
 y alerta a los administradores de posibles saturaciones en el servicio\SpecialChar \@.

\end_layout

\begin_layout Standard
A continuación pasamos a describir las funciones ejecutadas por el cron\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
Sincronización de grabaciones
\end_layout

\begin_layout Standard
Para poder visualizar las grabaciones en tiempo real y antes de eliminar
 la reunión, se ejecuta el comando 
\shape smallcaps
cmar:sync:rec
\shape default
 diseñado para guardar en la base de datos la URL de acceso a las grabaciones
 únicamente cuando la grabación ha finalizado\SpecialChar \@.

\end_layout

\begin_layout Standard
Esta acción es ejecutada cada 5 minutos por el cron y dispone en un elemento
 de la reunión la lista de grabaciones finalizadas para esa reunión\SpecialChar \@.

\end_layout

\begin_layout Standard
La acción de borrado de la reunión también finaliza ejecutando esta acción
 para almacenar todas las grabaciones en una carpeta creada para tal efecto
 dentro del servidor de Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

\SpecialChar \@.
 Las grabaciones nunca se eliminan del servidor y siempre son accesibles
 por el usuario desde el panel de control que describiremos más adelante\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
Sincronización de usuarios de Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Cuando un usuario accede a una sala y no tiene una cuenta de acceso a la
 aplicación, se crea un usuario temporal en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

\SpecialChar \@.
 Esta medida nos otorga control total sobre los privilegios de los participantes
 en la reunión\SpecialChar \@.
 Se ha diseñado esta solución porque
 
\lang spanish

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 no ofrece ninguna solución en su API para para abordar esta casuística,
 aunque se ha comprobado que internamente sí están implementados diferentes
 roles para usuarios anónimos\SpecialChar \@.
 Dicho comando se llama 
\shape smallcaps
cmar:sync:userADO
\shape default
\SpecialChar \@.

\end_layout

\begin_layout Standard
El usuario creado para dar solución a este problema es borrado dos días
 después de su creación\SpecialChar \@.
 Para ello en el campo descripción que ofrece 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 se incluye el texto: 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{User created as guest}
\end_layout

\end_inset

 y en el campo reservado para la dirección de correo electrónico incluimos
 la fecha de creación para que la función compruebe que el usuario se ha
 creado hace dos días\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
Recopilación de datos para la elaboración de estadísticas de la aplicación
\end_layout

\begin_layout Standard
Este script se ejecuta cada 30 minutos y recoge información sobre el número
 de salas activas y el número de usuarios en cada sala para elaborar estadística
s de uso del sistema\SpecialChar \@.
 La función más importante consiste en comparar el número
 de salas activas con el número máximo contratado y alertar al administrador
 de la proximidad entre ambos ya que 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 ofrece licencias de pago que se han de contratar previamente\SpecialChar \@.
 Si se da el
 caso, el administrador debe ampliar el número de licencias para evitar
 que usuarios no puedan disfrutar de su multivídeoconferencia\SpecialChar \@.
 Este comando
 recibe el nombre de 
\shape smallcaps
cmar:sync:storestat
\shape default
\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
Diseño de la base de datos
\end_layout

\begin_layout Standard
Uno de los primeros desafíos al que nos enfrentamos es el diseño de la base
 de datos\SpecialChar \@.
 Como se indica en el capítulo 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Diseño-del-proyecto"

\end_inset

 con el 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{framework}
\end_layout

\end_inset

 Symfony es fácilmente implementable e incluso puede modificarse durante
 la fase de prueba, en caso de encontrar alguna carencia en el diseño inicial\SpecialChar \@.

 La utilización de MySQL, gracias a su velocidad, nos augura un desarrollo
 exitoso\SpecialChar \@.
 A pesar de ello, con la aplicación en producción, modificar la
 base de datos puede ocasionar enormes quebraderos de cabeza\SpecialChar \@.
 Como consecuencia
 de este hecho, implementar una base de datos sólida con la información
 más relevante para nuestra aplicación es una labor tediosa que hemos elaborado
 con gran detenimiento\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 2.5cm
\end_inset


\begin_inset Graphics
	filename Diseño/Imagenes base de datos/Meeting.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Tabla para almacenar datos de reuniones
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Tabla_eMeeting"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "Tabla_eMeeting"

\end_inset

 podemos observar los diferentes campos que incluye la entidad 
\begin_inset Quotes eld
\end_inset

Meeting
\begin_inset Quotes erd
\end_inset

 a continuación describiremos el cometido de las diferentes columnas de
 la tabla\SpecialChar \@.

\end_layout

\begin_layout Standard
El campo 
\begin_inset Quotes eld
\end_inset

id
\begin_inset Quotes erd
\end_inset

 se genera de forma automática al introducir un elemento en la tabla e identific
a cada entidad 
\begin_inset Quotes eld
\end_inset

Meeting
\begin_inset Quotes erd
\end_inset

 dentro de nuestra base de datos de forma única, requisito impuesto por
 el motor MySQL para identificar de forma unívoca los contenidos de cada
 tabla\SpecialChar \@.
 En la columna 
\begin_inset Quotes eld
\end_inset

owner_id
\begin_inset Quotes erd
\end_inset

 se almacena el identificador correspondiente al propietario y creador de
 cada reunión\SpecialChar \@.
 
\begin_inset Quotes eld
\end_inset

Group_id
\begin_inset Quotes erd
\end_inset

 se corresponde con una funcionalidad 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Out of Scope}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
footnote{Fuera de los objetivos de la versión final}
\end_layout

\end_inset

, por lo tanto no se ha utilizado en la actual versión del proyecto, pero
 está reservada para una funcionalidad en la que una reunión puede pertenecer
 a un grupo de usuarios además de al usuario creador\SpecialChar \@.
 La columna 
\begin_inset Quotes eld
\end_inset

state
\begin_inset Quotes erd
\end_inset

 almacena el estado de cada reunión que puede ser 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{NOW, NEW, SCHEDULED, CANCELLED, FINISHED o LOCKED}
\end_layout

\end_inset

\SpecialChar \@.
 El estado 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{NOW}
\end_layout

\end_inset

 nos indica que la reunión está siendo creada y nos ayuda a sincronizar
 la base de datos ante tiempos de demora, también se llega a este estado
 cuando una reunión con duración y fecha se está realizando en el momento
 actual\SpecialChar \@.
 El estado 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{NEW}
\end_layout

\end_inset

 se corresponde con aquel en el cual una reunión está disponible pero no
 se le ha dado una fecha ni una duración\SpecialChar \@.
 Para la versión en la que no utilizamos
 la funcionalidad de programar una reunión para el futuro, la mayoría de
 las reuniones se encuentran en el estado 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{NEW}
\end_layout

\end_inset

\SpecialChar \@.
 El estado 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{SCHEDULED}
\end_layout

\end_inset

 nos informa de que la reunión tendrá lugar en el futuro\SpecialChar \@.
 La reunión 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{CANCELLED}
\end_layout

\end_inset

 es aquella que ha sido creada y luego borrada pero nuestra aplicación almacena
 datos para posteriores estadísticas\SpecialChar \@.
 El estado 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{FINISHED}
\end_layout

\end_inset

 nos indica que la reunión ha finalizado, funcionalidad desarrollada para
 la versión en la que podemos programar grabaciones\SpecialChar \@.
 Por último, una reunión
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{LOCKED}
\end_layout

\end_inset

 es aquella que el usuario bloquea para que otros usuarios que han sido
 invitados no tengan acceso a la sala, sería como una llave que cierra la
 puerta a la entrada de la sala de vídeoconferencia\SpecialChar \@.
 Las columnas 
\begin_inset Quotes eld
\end_inset

salt
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

secretesalt
\begin_inset Quotes erd
\end_inset

 y 
\begin_inset Quotes eld
\end_inset

viewsalt
\begin_inset Quotes erd
\end_inset

 almacenan una variable especial cada una, referente a la reunión a la que
 pertenecen, creada para dar un acceso con diferentes privilegios a usuario
 que no tienen una cuenta de usuario en la aplicación 
\begin_inset Quotes eld
\end_inset

eMeeting
\begin_inset Quotes erd
\end_inset

\SpecialChar \@.
 Si la URL que recibe un usuario invitado a una vídeoconferencia contiene
 el 
\begin_inset Quotes eld
\end_inset

viewsalt
\begin_inset Quotes erd
\end_inset

 el usuario tendrá privilegios de presentador, si por el contrario contiene
 el 
\begin_inset Quotes eld
\end_inset

secretsalt
\begin_inset Quotes erd
\end_inset

 el usuario tendrá unos privilegios similares al creador de la reunión\SpecialChar \@.
 La
 variable 
\begin_inset Quotes eld
\end_inset

salt
\begin_inset Quotes erd
\end_inset

 guarda una URL simple creada con el título de la reunión que nos simplificará
 el trabajo a la hora de crear las URL para asistir a la reunión en el caso
 de usuarios que tienen acceso a la aplicación 
\begin_inset Quotes eld
\end_inset

eMeeting
\begin_inset Quotes erd
\end_inset

\SpecialChar \@.
 La variable 
\begin_inset Quotes eld
\end_inset

title
\begin_inset Quotes erd
\end_inset

 guarda el título dado a la reunión\SpecialChar \@.
 En 
\begin_inset Quotes eld
\end_inset

description
\begin_inset Quotes erd
\end_inset

 guardamos, si lo consideramos oportuno, una breve descripción de la reunión
 que aparecerá en la página principal acompañando a cada reunión\SpecialChar \@.
 La columna
 
\begin_inset Quotes eld
\end_inset

url
\begin_inset Quotes erd
\end_inset

 contiene la URL de acceso a cada reunión y de esta forma tenemos un acceso
 rápido apra ofrecerla en cualquier parte de nuestro código\SpecialChar \@.
 
\begin_inset Quotes eld
\end_inset

Date
\begin_inset Quotes erd
\end_inset

 indica la fecha de creación de la reunión\SpecialChar \@.
 
\begin_inset Quotes eld
\end_inset

Public
\begin_inset Quotes erd
\end_inset

 es una columna con valor 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{booleano}
\end_layout

\end_inset

 que indica si la reunión es pública en caso de ser cierta o privada en
 caso de ser falsa\SpecialChar \@.
 
\begin_inset Quotes eld
\end_inset

Magic
\begin_inset Quotes erd
\end_inset

 es otra columna 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{booleana}
\end_layout

\end_inset

 que nos informa si la reunion es mágica o no y poder así otorgarle los
 privilegios oportunos\SpecialChar \@.
 En la columna 
\begin_inset Quotes eld
\end_inset

concurrent
\begin_inset Quotes erd
\end_inset

 se almacena el número de reuniones que coincidirán en el tiempo, para asegurarn
os que todas las reuniones tendrán disponibilidad de sala de vídeoconferencia\SpecialChar \@.

 La columna 
\begin_inset Quotes eld
\end_inset

created
\begin_inset Quotes erd
\end_inset

 almacena la fecha de creación de la reunión\SpecialChar \@.
 La base de datos de una aplicación
 con posibilidad de reservar salas, deberá contener la duración de la reunión,
 en este caso no se contempla esta posibilidad en la base de datos\SpecialChar \@.
 
\series bold
\size larger
\emph on
\color red
preguntar a Yolanda si implemento la columna??
\series default
\size default
\emph default
\color inherit
 La columna 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{updated}
\end_layout

\end_inset

 indica si hemos modificado alguna variable de la reunión y nos ayuda a
 tomar decisiones a la hora de eliminar o dar acceso a las reuniones\SpecialChar \@.
 
\series bold
\size larger
\emph on
\color red
Comprobar la funcionalidad de esta variable
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 2.5cm
\end_inset


\begin_inset Graphics
	filename Diseño/Imagenes base de datos/User.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Tabla para Usuarios
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Tabla_usuario"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Como podemos observar en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "Tabla_usuario"

\end_inset

, en la tabla 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{user}
\end_layout

\end_inset

 almacenaremos datos referentes al usuario\SpecialChar \@.
 Por simple inspección podemos
 intuir que tipo de parámetros del usuario se guardan en cada columna de
 esta tabla\SpecialChar \@.
 De nuevo se tiene una variable 
\begin_inset Quotes eld
\end_inset

id
\begin_inset Quotes erd
\end_inset

 imprescindible para el motor MySQL y poder así identificar cada entidad
 dentro de la tabla de forma única\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 2.5cm
\end_inset


\begin_inset Graphics
	filename Diseño/Imagenes base de datos/Recording.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Tabla para grabaciones
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Tabla_grabaciones"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "Tabla_grabaciones"

\end_inset

, observamos los datos que se almacenan de cada grabación\SpecialChar \@.
 Son destacables
 las columnas 
\begin_inset Quotes eld
\end_inset

meeting_id
\begin_inset Quotes erd
\end_inset

 que almacena el identificador de la reunión a la que pertenece la grabación
 o 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{state}
\end_layout

\end_inset

 que almacena el estado de cada grabación\SpecialChar \@.
 Este estado puede ser 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{REACHABLE}
\end_layout

\end_inset

 cuando tenemos acceso a la grabación o 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{LOCKED}
\end_layout

\end_inset

 cuando la grabación está bloqueada y no se tiene acceso a ella\SpecialChar \@.

\end_layout

\begin_layout Standard
En las figuras 
\begin_inset CommandInset ref
LatexCommand ref
reference "Log"

\end_inset

 y 
\begin_inset CommandInset ref
LatexCommand ref
reference "Log_total"

\end_inset

, se encuentran los datos estadísticos que almacenamos a partir de las funciones
 que se ejecutan en el cron\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 3cm
\end_inset


\begin_inset Graphics
	filename Diseño/Imagenes base de datos/Log.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Tabla para almacenar datos estadísticos parciales
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Log"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "Log"

\end_inset

 podemos observar varibles que se refieren a una reunión en concreto\SpecialChar \@.
 La
 columna 
\begin_inset Quotes eld
\end_inset

datetime
\begin_inset Quotes erd
\end_inset

 guarda la fecha y hora de inicio de una reunión según el formato 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{datetime}
\end_layout

\end_inset

 de PHP\SpecialChar \@.
 La columna 
\begin_inset Quotes eld
\end_inset

sco_id
\begin_inset Quotes erd
\end_inset

 guarda un 
\begin_inset Quotes eld
\end_inset

id
\begin_inset Quotes erd
\end_inset

 que identifica de forma unívoca la reunión dentro del servidor Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

\SpecialChar \@.
 Las columnas 
\begin_inset Quotes eld
\end_inset

participants
\begin_inset Quotes erd
\end_inset

 y 
\begin_inset Quotes eld
\end_inset

length_minutes
\begin_inset Quotes erd
\end_inset

 guardan el número máximo de participantes de esa reunión y la duración
 en minutos de la misma\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 2.7cm
\end_inset


\begin_inset Graphics
	filename Diseño/Imagenes base de datos/Log_Total.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Tabla para almacenar datos estadísticos totales
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Log_total"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Por su parte en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "Log_total"

\end_inset

, se guarda en la variable 
\begin_inset Quotes eld
\end_inset

datetime
\begin_inset Quotes erd
\end_inset

 la fecha y hora del momento en el cual se tomó la muestra, es decir, el
 momento en el que el cron ejecutó el comando correspondiente que rellena
 esta tabla\SpecialChar \@.
 En la variable 
\begin_inset Quotes eld
\end_inset

participants
\begin_inset Quotes erd
\end_inset

 se guarda el número total de participantes activos en el servidor Adobe
 Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

, es decir, el número de usuarios que están participando en una vídeoconferencia\SpecialChar \@.

 En la variable 
\begin_inset Quotes eld
\end_inset

active_rooms
\begin_inset Quotes erd
\end_inset

 guardamos el número de salas de vídeoconferencia que están siendo utilizadas,
 estas dos variables serán comprobadas por la función que ejecuta el cron
 de forma que si se llega a una zona próxima a la saturación se enviará
 un correo electrónico al administrador del sistema, para advertirle de
 tal situación\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 2.5cm
\end_inset


\begin_inset Graphics
	filename Diseño/Imagenes base de datos/Meeting_user.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Tabla de cruce de las tablas meeting y user
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "meeting_user"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "meeting_user"

\end_inset

, es una tabla creada por Symfony a petición del programador y que almacena
 de forma automática un cruce entre los identificadores de reuniones con
 sus respectivos usuarios\SpecialChar \@.
 De esta forma tendremos acceso a las tablas de
 reuniones y de usuarios en cualquier parte de nuestro código únicamente
 con tener acceso a uno de estos dos identificadores\SpecialChar \@.
 Se podrá acceder a
 los datos de todas las reuniones de un usuario si obtenemos su identificador,
 a la vez que podremos recorrer los datos de todos los usuarios de una reunión
 si se consigue el identificador de la reunión\SpecialChar \@.
 Podremos acceder al nombre
 de un grupo a partir de un usuario que pertenezca a ese grupo sin más que
 realizar las instrucciones:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
$
\end_layout

\end_inset

Group_name=
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
$
\end_layout

\end_inset

user->getGroup()->getName();
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Muchas de estas asociaciones son indispensables para legitimar con facilidad
 los permisos que damos a cada “role” de usuario sobre las reuniones o para
 acceder a información dentro de los controladores de aplicación o servicios,
 incluso para interactuar con el servidor 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

, ya que en funciones determinadas obtenemos información sobre los permisos
 de acceso de un usuario a partir de la 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{cookie}
\end_layout

\end_inset

 generada por este servidor\SpecialChar \@.
 Estas y otras útiles funcionalidades se encuentran
 disponibles gracias a esta tabla\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 2.5cm
\end_inset


\begin_inset Graphics
	filename Diseño/Imagenes base de datos/Staff.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Tabla para grupos
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Tabla_grupos"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La tabla 
\begin_inset CommandInset ref
LatexCommand ref
reference "Tabla_grupos"

\end_inset

, está diseñada para guardar los datos de grupos de usuario\SpecialChar \@.
 Como se puede
 observar las columnas almacenan el nombre del grupo, una breve descripción
 y el tipo de grupo que compone la tablas\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 2.5cm
\end_inset


\begin_inset Graphics
	filename Diseño/Imagenes base de datos/Users_staffs.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Tabla para el cruce de datos entre grupos y usuarios
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Como complemento a la tabla de grupos, mediante la configuración en la entidad
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{group}
\end_layout

\end_inset

 y en la entidad 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{user}
\end_layout

\end_inset

 de Symfony cruzaremos en nuestra base de datos los identificadores de ambas
 entidades mediante una relación 
\begin_inset Quotes eld
\end_inset

n→n
\begin_inset Quotes erd
\end_inset

, ya que un usuario puede pertenecer a 
\begin_inset Quotes eld
\end_inset

n
\begin_inset Quotes erd
\end_inset

 grupos y un grupo puede contener 
\begin_inset Quotes eld
\end_inset

n
\begin_inset Quotes erd
\end_inset

 usuarios\SpecialChar \@.

\end_layout

\begin_layout Standard
Después de diseñar nuestra base de datos debemos decirle a Symfony qué base
 de datos usará, nuestro caso como se puede ver en las figuras anteriores,
 nuestra base de datos recibe el nombre de 
\begin_inset Quotes eld
\end_inset

emeeting
\begin_inset Quotes erd
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
php symfony configure:database --name=doctrine --class=sfDoctrineDatabase
 
\begin_inset Quotes eld
\end_inset

mysql:host=localhost; dbname=emeeting
\begin_inset Quotes erd
\end_inset

 root mYsEcret
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
Especificación de la organización
\end_layout

\begin_layout Standard
En toda organización existen diferentes tipos de usuarios y cada usuario
 puede acceder a la aplicación y en este caso a las reuniones con diferentes
 roles como los que se pueden observar en el cuadro 
\begin_inset CommandInset ref
LatexCommand ref
reference "Tipos_usuarios"

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 2.5cm
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tipo de Usuario - Role
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Owner
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Presenter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Participant
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Administrator
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DigiMar Partner
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
External Partner
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Tipos de usuarios frente a tipos de registro en la aplicación
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Tipos_usuarios"

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
Definición de roles de acceso a la aplicacion eMeeting
\end_layout

\begin_layout Standard
En esta subsección explicaremos los diferentes tipos de acceso que concede
 la aplicación eMeeting sobre las salas creadas en Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize
Owner
\end_layout

\begin_deeper
\begin_layout Standard
Este tipo de usuario sólo es posible si formamos parte de los usuarios de
 DigiMar\SpecialChar \@.
 Es el creador de la sala\SpecialChar \@.
 En el servidor Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset

 recibe el nombre de 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{mini-host}
\end_layout

\end_inset

\SpecialChar \@.
 Es el único con el privilegio de borrar la sala y poder grabar las reuniones\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize
Presenter
\end_layout

\begin_deeper
\begin_layout Standard
Este tipo de usuario es posible tanto si tienes acceso a DigiMar como si
 algún miembro de DigiMar te invita con la URL adecuada que describiremos
 más adelante\SpecialChar \@.
 Este tipo de usuario puede interactuar en la sala pero no
 puede grabar reuniones\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize
Participant
\end_layout

\begin_deeper
\begin_layout Standard
Es el usuario con menos privilegios, no le está permitido grabar ni interactuar
 en la sala, únicamente puede ver a los diferentes usuarios que participen
 en el eMeeting\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
Definición de roles internos de eMeeting para 
\begin_inset Quotes eld
\end_inset

Campus do Mar
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
La aplicación permite dos tipos de roles internos, de los cuales el administrado
r posee privilegios que hacen única la gestión de la apliación\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset space \hspace{}
\length 4cm
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Administrador
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Usuario estándar
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize

\series bold
Administrador
\end_layout

\begin_deeper
\begin_layout Standard
Este usuario tiene acceso a la base de datos de la aplicación y puede manipular
 los contenidos a su voluntad\SpecialChar \@.
 La siguiente lista hace referencia a las funcional
idades particulares de los administradores y nos ofrece una visión de las
 posibilidades de la aplicación\SpecialChar \@.

\end_layout

\begin_layout Itemize
El administrador tiene acceso a las estadísticas de la aplicación\SpecialChar \@.
 Mediante
 gráficos realizados con el API de Javascript JQUERY, podemos conecer el
 número máximo de salas concurrentes para tener una visión de la utilización
 de las salas, opción altamente útil, ya que las licencias de Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 son un bien limitado\SpecialChar \@.
 Del mismo modo, la aplicación genera correos electrónicos
 para los administradores cuando se llega a puntos críticos de utilización
 del servicio\SpecialChar \@.

\end_layout

\begin_layout Itemize
El administrador puede dar privilegios a ciertas salas para que siempre
 se encuentren disponibles.
 Este es el concepto de sala mágica que introduciremos más adelante\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize

\series bold
Usuario estándar
\end_layout

\begin_deeper
\begin_layout Standard
La mayoría de los usuarios poseeran este tipo de acceso que permite crear
 y borrar eMeetings dentro de la aplicación y la gestión de los mismos\SpecialChar \@.
 Este
 tipo de usuario podrá invitar a sus reuniones a usuarios externos a la
 base de datos de 
\begin_inset Quotes eld
\end_inset

Campus do Mar
\begin_inset Quotes erd
\end_inset

\SpecialChar \@.
 Los usuarios externos serán monitorizados desde el acceso anónimo que pasaremos
 a describir a continuación\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize

\series bold
Acceso anónimo
\end_layout

\begin_deeper
\begin_layout Standard
Cuando un usuario es invitado desde una URL generada para tal efecto, se
 le redirige a una pantalla de acceso, en la cual, se da la opción de ingresar
 en la aplicación como usuario de DigiMar o entrar como usuario anónimo\SpecialChar \@.

\end_layout

\begin_layout Standard
La URL generada para este efecto tiene dos roles, presentador o participante,
 estos roles serán otorgados por el 
\begin_inset Quotes eld
\end_inset

owner
\begin_inset Quotes erd
\end_inset

 de la reunión\SpecialChar \@.
 El enlace para entrar como anónimo se contruye a traves de
 la URL que se le envía apareciendo la opción guest=true lo cual hace que
 por defecto el panel de acceso anónimo marque la opción de entrar como
 huesped\SpecialChar \@.
 En cualquier otro caso la opción marcada por defecto será un formulario
 para entrar como usuario de DigiMar\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
El interfaz de usuario
\begin_inset CommandInset label
LatexCommand label
name "sec:El-interfaz-de"

\end_inset


\end_layout

\begin_layout Standard
En esta sección describiremos las modificaciones y las decisiones de diseño
 que se han tomado en el interfaz de usuario desde el inicio de la implementació
n\SpecialChar \@.
 Esta sección ayudará al lector en la interpretación de las diferentes
 funciones que se describirán a lo largo del capítulo y la relación de éstas
 con el interfaz de usuario\SpecialChar \@.

\end_layout

\begin_layout Standard
Como se puede ver en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "wrap:maqueta_1_version"

\end_inset

, así nació el primer interfaz de usuario para esta aplicación en el cual
 se tenía claro la información que se debe visualizar, pero no tanto la
 experiencia de usuario ante la visión de la información\SpecialChar \@.
 Para el boceto
 de diseño de las primeras versiones de interfaz se ha utilizado la herramienta
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Mockups}
\end_layout

\end_inset

 de 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Balsamiq}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{key-19}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 3cm
\end_inset


\begin_inset Graphics
	filename Diseño/boceto.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Maqueta de la primera versión
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "wrap:maqueta_1_version"

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "wrap:maqueta_1_version"

\end_inset

 se observa lo esencial de una funcionalidad para crear una nueva reunión
 con el botón 
\begin_inset Quotes eld
\end_inset

+ Meeting
\begin_inset Quotes erd
\end_inset

 y un botón para agregar usuarios a la reunión 
\begin_inset Quotes eld
\end_inset

+ Partner to Meeting
\begin_inset Quotes erd
\end_inset

\SpecialChar \@.
 Aparecen los datos que mostraremos para cada reunión, tales como el título,
 un link para invitar usuarios ajenos a la aplicación, una pequeña descripción
 y un botón para eliminar la reunión 
\begin_inset Quotes eld
\end_inset

Cancel Meeting
\begin_inset Quotes erd
\end_inset

\SpecialChar \@.
 En la parte superior central se vislumbra la idea de un mensaje superpuesto
 sobre la pantalla que alerta al usuario que acaba de crear una reunión\SpecialChar \@.

 Este mensaje se desvanece progresivamente gracias a una funcionalidad de
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{jQuery UI}
\end_layout

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{key-13}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 1.8cm
\end_inset


\begin_inset Graphics
	filename Diseño/versión_1.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Primer interfaz de usuario visualizado en el explorador
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "interfaz1"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A partir de la maqueta que observamos en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "wrap:maqueta_1_version"

\end_inset

 se ha implementado un interfaz elemental como el de la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "interfaz1"

\end_inset

, para facilitar un avance más diligente\SpecialChar \@.
 Se puede concluir que no es muy
 atractivo, pero las funcionalidades más importantes, como el enlace para
 invitar a otros usuarios o las URLs para usuarios ajenos se han implementado
 y agilizarán la evolución del interfaz y de las funcionalidades finales\SpecialChar \@.

 La necesidad de un interfaz más intuitivo en términos generales era obvia\SpecialChar \@.

 El enriquecimiento del estilo también debía ocupar parte de nuestro tiempo
 para realizar un interfaz elegante y afín al usuario final\SpecialChar \@.
 Decisiones y
 tiempo después se realizó un interfaz más atractivo y se empezó a evaluar
 la posibilidad de un panel de control en la parte superior del interfaz
 disponible en cualquier página de la aplicación que facilitase su navegación,
 como se puede observar en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "intefaz_final"

\end_inset

\SpecialChar \@.
 La presencia de jQuery UI se hacía indispensable para abordar problemas
 complejos de diseño y rematar la aplicación con un diseño sugerente\SpecialChar \@.
 Todas
 las ventanas emergentes y los efectos visuales que aparecen al presionar
 los botones de la aplicación han sido diseñados con jQuery UI 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{key-13}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 2.5cm
\end_inset


\begin_inset Graphics
	filename Diseño/versión_2.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Versión más trabajada del interfaz de usuario
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "intefaz_final"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Botonera para cada reunión
\end_layout

\begin_layout Standard
Pasamos a describir las funciones de los botones que podemos contemplar
 en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "intefaz_final"

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Itemize
Join
\end_layout

\begin_deeper
\begin_layout Standard
Acceso a la sala para disfrutar de la vídeoconferencia\SpecialChar \@.
 Cuando pinchemos
 en este botón se abrirá un iframe en nuestro explorador que contendrá la
 ventana de Adobe Connect con la URL que se haya configurado para esta sala\SpecialChar \@.

 La URL de la sala cambia en función del estado de la sala, lógica que explicare
mos con detenimiento en la sección 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Concepto-de-sala"

\end_inset

\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Disabled
\end_layout

\begin_deeper
\begin_layout Standard
Deshabilita la sala temporalmente\SpecialChar \@.
 Este botón sólo está disponible para el
 dueño de la sala\SpecialChar \@.
 Cuando se pincha en este botón se llama a la función asociada
 y mediante el método POST se pasa una variable verdadera o falsa en función
 de si la sala se encuentra habilitada o deshabilitada para alternar su
 estado entre uno u otro\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Itemize
Delete
\end_layout

\begin_deeper
\begin_layout Standard
Elimina la sala de la lista de reuniones disponibles en el interfaz de usuario\SpecialChar \@.

 Sin embargo, se ha decidido por diseño que una reunión nunca se elimine
 por completo del sistema, es decir, se borra del servidor 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset

, per nunca de la base de datos de la aplicación de forma que en el botón
 Achievement Files siempre estarán disponibles las reuniones eliminadas
 con su correspondiente lista de grabaciones\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Sobre
\end_layout

\begin_deeper
\begin_layout Standard
Al pulsar sobre este icono se despliega una ventana emergente como la de
 la figura\SpecialChar \@.
 Nos muestra un texto destinado a usuarios ajenos a la aplicación
 de forma que si lo reciben puedan disfrutar de la sala\SpecialChar \@.
 El texto contiene
 las instrucciones necesarias para entrar a la sala y la ventana emergente
 las necesarias para enviarlo\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Interrogante
\end_layout

\begin_deeper
\begin_layout Standard
Este icono aparece a lo largo de la aplicación y con la ayuda de jQuery
 emerge un mensaje cuando pasamos el puntero por encima que explica la funcional
idad del elemento al que acompaña\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Url de enlace para otros usuarios
\end_layout

\begin_deeper
\begin_layout Itemize
Presenter Access
\end_layout

\begin_deeper
\begin_layout Standard
Este enlace proporciona a su poseedor privilegios de presentador en la reunión\SpecialChar \@.

 Un presentador podrá introducir contenido en la sala, como presentaciones
 o compartir su escritorio\SpecialChar \@.
 Sin duda podrá compartir la imagen de su cámara
 web y el audio\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Limited Access
\end_layout

\begin_deeper
\begin_layout Standard
Por el contrario, este enlace otorga la posibilidad de disfrutar de la reunión,
 pero no se podrá participar de forma activa en ella\SpecialChar \@.
 Tampoco tendrá la opción
 de compartir su cámara web o su audio\SpecialChar \@.

\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Managed DigiMar Users
\end_layout

\begin_deeper
\begin_layout Standard
Se podrá invitar a una vídeoconferencia a usuarios ya registrados en la
 aplicación, a partir de una lista generada con la técnica de autocompletar\SpecialChar \@.

 Para implementar esta ventana se ha empleado la librería jQuery y la tecnología
 AJAX\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Recordings
\end_layout

\begin_deeper
\begin_layout Standard
Proporciona el acceso a las grabaciones de la reunión a la que pertenece
 el botón\SpecialChar \@.
 Las grabaciones que aparecen en la figura ya han finalizado, y
 aparecen después de ejecutárse la correspondiente función en el cron\SpecialChar \@.
 
\end_layout

\end_deeper
\begin_layout Itemize
Change NickName
\end_layout

\begin_deeper
\begin_layout Standard
Ofrece la posibilidad de cambiar el nombre que aparecerá en cada reunión
 de vídeoconferencia\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
También se muestra un párrafo con información sobre la sala:
\end_layout

\begin_deeper
\begin_layout Enumerate
Fecha de creación de la sala
\end_layout

\begin_layout Enumerate
Tipo de sala ya sea pública o privada
\end_layout

\begin_layout Enumerate
Número de usuarios de 
\begin_inset Quotes eld
\end_inset

Campus do Mar
\begin_inset Quotes erd
\end_inset

 invitados a la reunión
\end_layout

\end_deeper
\begin_layout Subsection
Botonera superior de menú
\end_layout

\begin_layout Standard
Esta botonera situada en la parte superior del cuerpo central de la web,
 como se puede ver en la figura, nos proporciona el acceso a las funciones
 globales de la aplicación que pasamos a describir a continuación\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize
Achievement Files
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 3.5cm
\end_inset


\begin_inset Graphics
	filename Diseño/achievement_files.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Ventana emergente para 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Achievement Files}
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "achievement_files"

\end_inset


\end_layout

\end_inset

En este botón podemos acceder a una lista de reuniones com la mostrada en
 la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "achievement_files"

\end_inset

 que han finalizado\SpecialChar \@.
 Nos ofrece información sobre su fecha y hora de creación
 y la lista de grabaciones en caso de existir\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 Test
\end_layout

\begin_deeper
\begin_layout Standard
Se accede a una prueba de conexión facilitada por 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 para ofrecer al usuario la seguridad de que existe conexión con el servidor\SpecialChar \@.

 Es un archivo flash alojado en el servidor 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

, que descarga un 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{applet}
\end_layout

\end_inset

 en nuestro navegador para realizar las pruebas de conexión\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
eMeeting Help
\end_layout

\begin_deeper
\begin_layout Standard
Al pinchar sobre este botón se accede a una ayuda que nos indica las diferentes
 funcionalidades proporcionadas por 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{eMeeting}
\end_layout

\end_inset

 y se explica como se utiliza\SpecialChar \@.
 Los usuarios podrán resolver las diferentes
 dudas que puedan surgir sin más que ojear esta página\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Admin
\end_layout

\begin_deeper
\begin_layout Standard
Sólo es accesible por los administradores de la aplicación y nos lleva a
 funcionalidades para actuar directamente sobre la base de datos o visualizar
 las estadísticas de la aplicación en tiempo real\SpecialChar \@.
 Una de las funcionalidades
 a destacar es la posibilidad de poder modificar el estado de las reuniones
 a pesar de no ser el dueño\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
+ eMeetings
\end_layout

\begin_deeper
\begin_layout Standard
En la ventana modal que se desplegará podremos seleccionar el título de
 nuestra reunión, un sobrenombre de usuario con el que nos conectaremos
 a la sala, invitar usuarios de 
\begin_inset Quotes eld
\end_inset

Campus do Mar
\begin_inset Quotes eld
\end_inset

 a nuestra nueva reunión y determinar el carácter de la sala (pública o
 privada)\SpecialChar \@.
 El campo descripción es opcional\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize
Change Password
\end_layout

\begin_deeper
\begin_layout Standard
Se accede a una ventana modal que nos permite cambiar la contraseña de acceso
 a la aplicación.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
Funciones PHP asociadas a la botonera
\end_layout

\begin_layout Itemize
Join
\end_layout

\begin_deeper
\begin_layout Standard
Este botón realiza una serie de comprobaciones antes de llevarlos al eMeeting
 correspondiente en Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

\SpecialChar \@.
 Comprueba el número de eMeetings simultáneos ya que el número está limitado
 por el número de licencias compradas por el administrador del servidor
 de conexión a Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

\SpecialChar \@.
 Comprueba que la sala todavía existe y que se tienen los privilegios necesarios
 para disfrutar el eMeeting, ya que el usuario creador ha podido desahibilitar
 la sala o incluso eliminarla antes de que la página se recargue y por tanto
 todavía aparezca como activa en nuestro interfaz\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize
Enabled/Disabled
\end_layout

\begin_deeper
\begin_layout Standard
Con este botón el creador del eMeeting puede habilitar y deshabilitar la
 sala a su voluntad impidiendo la entrada a todos los usuarios, incluso
 aunque tengan acceso desde la puerta trasera creada en las salas privadas\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize
Delete
\end_layout

\begin_deeper
\begin_layout Standard
Con este botón eliminamos la sala de nuestro interfaz de usuario y también
 de todos los usuarios invitados al eMeeting.
 Únicamente el creador del eMeeting tiene el privilegio de eliminar su sala
 para evitar futuros conflictos y potenciar que los usuarios creen sus propias
 salas\SpecialChar \@.

\end_layout

\begin_layout Standard
Se comprueba si el eMeeting posee grabaciones y se almacenan en una carpeta
 interna de Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
En el botón antes descrito como 
\begin_inset Quotes eld
\end_inset

Achievement Files
\begin_inset Quotes eld
\end_inset

 tendremos acceso a las grabaciones de los eMeetings eliminados\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize
Recordings
\end_layout

\begin_deeper
\begin_layout Standard
Con este botón podremos visualizar las grabaciones realizadas en el eMeeting
 hasta el momento\SpecialChar \@.
 Se accede por AJAX al EndPoint correspondiente de Symfony
 para conseguir los valores actualizados de nuestra lista de grabaciones\SpecialChar \@.

 Más adelante hablaremos de la función que se ejecuta en el servidor cada
 minuto para almacenar las nuevas grabaciones en nuestra base de datos al
 finalizar dicha grabación\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize
Change Nick Name
\end_layout

\begin_deeper
\begin_layout Standard
En la ventana modal que despliega este botón se nos da la opción de cambiar
 nuestro 
\begin_inset Quotes eld
\end_inset

NickName
\begin_inset Quotes eld
\end_inset

 en cada reunión\SpecialChar \@.
 Este código comprueba que no insertamos un 
\begin_inset Quotes eld
\end_inset

NickName
\begin_inset Quotes eld
\end_inset

 vacío, aunque sería posible en el Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 la posibilidad de no tener 
\begin_inset Quotes eld
\end_inset

NickName
\begin_inset Quotes eld
\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
URLs de acceso a la aplicación
\begin_inset CommandInset label
LatexCommand label
name "sec:URLs-de-acceso"

\end_inset


\end_layout

\begin_layout Standard
En esta sección y para acompañar a las funcionaliadades descritas en la
 sección 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:El-interfaz-de"

\end_inset

, explicaremos las diferentes rutas que se han implementado para esta aplicación
 y que dan acceso a las funciones de los controladores\SpecialChar \@.
 Symfony nos ofrece
 esta potente funcionalidad, de forma que podemos indicar la funcionalidad
 que realizará la aplicación en función de la URL de acceso a la aplicación\SpecialChar \@.

 A raíz de la explicación de estas rutas de acceso tendremos una visión
 más completa de la estructura de la aplicación y también del gran trabajo
 simplificado mediante la utilización de Symfony\SpecialChar \@.

\end_layout

\begin_layout Itemize
index_personal ANY /personal/
\end_layout

\begin_deeper
\begin_layout Standard
Esta función que se encuentra en el archivo 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controller/PersonalController.php}
\end_layout

\end_inset

, devuelve el usuario logueado, la lista de grupos a los que pertenece el
 usuario, la lista de reuniones con estado NOW de cada asociadas a cada
 grupo y la lista de reuniones asociada a cada usuario con estado NOW que
 no pertenecen al grupo\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
group ANY /groupadmin/
\end_layout

\begin_deeper
\begin_layout Standard
Situado en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controller/GroupAdminController.php}
\end_layout

\end_inset

, devuelve un array con la lista de todos los grupos que posee la aplicación\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
group_show ANY /groupadmin/{id}/show
\end_layout

\begin_deeper
\begin_layout Standard
Situado en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controller/GroupAdminController.php}
\end_layout

\end_inset

, debemos pasarle el identificador del grupo que queremos visualizar en
 el formulario de edición para el menú de administrador\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
group_new ANY /groupadmin/new
\end_layout

\begin_deeper
\begin_layout Standard
Situado en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controller/GroupAdminController.php}
\end_layout

\end_inset

, crea un formulario para añadir un nuevo grupo en el menú de administrador\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
group_create POST /groupadmin/create
\end_layout

\begin_deeper
\begin_layout Standard
Situado en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controller/GroupAdminController.php}
\end_layout

\end_inset

, valida el formulario creado en group_new y actualiza la base de datos\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
group_edit ANY /groupadmin/{id}/edit
\end_layout

\begin_deeper
\begin_layout Standard
Situado en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controller/GroupAdminController.php}
\end_layout

\end_inset

, debemos pasarle el identificador del grupo que solicitamos editar en el
 menú de administración\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
group_update POST /groupadmin/{id}/update
\end_layout

\begin_deeper
\begin_layout Standard
Situado en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controller/GroupAdminController.php}
\end_layout

\end_inset

, valida el formulario de edición y actuliza la base de datos\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
group_delete POST /groupadmin/{id}/delete
\end_layout

\begin_deeper
\begin_layout Standard
Situado en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controller/GroupAdminController.php}
\end_layout

\end_inset

, borra un un grupo desde el menú de administrador actualizando la base
 de datos\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
meeting ANY /meeting/
\end_layout

\begin_deeper
\begin_layout Standard
Situado en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controller/MeetingController.php}
\end_layout

\end_inset

, realiza una consulta a la base de datos para mostrar al administrador
 una lista con todas las reuniones de la aplicación\SpecialChar \@.
 
\end_layout

\end_deeper
\begin_layout Itemize
Las funciones meeting_show ANY /meeting/{id}/show, meeting_new ANY /meeting/new,
 meeting_create POST /meeting/create, meeting_edit ANY /meeting/{id}/edit,
 meeting_update POST, /meeting/{id}/update, meeting_delete POST /meeting/{id}/de
lete situadas en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controller/MeetingController.php}
\end_layout

\end_inset

, son análogas a las que acabamos de mencionar para los grupos y ofrecen
 al administrador las funcionalidades descritas y la validación de los datos,
 para actuar sobre la base de datos, de una forma casi instantánea para
 el programador\SpecialChar \@.

\end_layout

\begin_layout Itemize
index_welcome ANY /welcome 
\end_layout

\begin_deeper
\begin_layout Standard
Situada en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controller/SecurityController.php}
\end_layout

\end_inset

, recibe la dirección de correo electrónico que introduce el usuario al
 entrar en la aplicación, la valida y si existe nos redirije a la pantalla
 de entrada\SpecialChar \@.
 También incluye el código para que en caso de introducir una
 contraseña incorrecta que enviará un correo electrónico alertando de que
 un usuario ha intentado acceder a esa cuenta y ha fallado\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
mail_sent ANY /mail/sent
\end_layout

\begin_deeper
\begin_layout Standard
Situada en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controller/SecurityController.php}
\end_layout

\end_inset

, función que envía el correo electrónico en caso de que un intruso intente
 acceder a una cuenta de forma errónea\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
recover ANY /recover/{email}/{hash}
\end_layout

\begin_deeper
\begin_layout Standard
Situada en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controller/SecurityController.php}
\end_layout

\end_inset

, si le pasamos una dirección de correo electrónico y una huella asociada
 al usuario dueño del correo electrónico cambiará la contraseña, del usuario
 en la base de datos, que le pasamos como parámetro POST\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
recover_error ANY /recover/error
\end_layout

\begin_deeper
\begin_layout Standard
Situada en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controller/SecurityController.php}
\end_layout

\end_inset

, si la huella que pasamos en la función anterior es correcta o la dirección
 de correo electrónico no existe se supone un intento de ataque, para defender
 a la aplicación de ello se redirije a esta función que tomará las medidas
 oportunas\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
recover_update ANY /recover/update
\end_layout

\begin_deeper
\begin_layout Standard
Situada en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controller/SecurityController.php}
\end_layout

\end_inset

, si la función recover ha tenido éxito, se redirije a esta función que
 mostrará un mensaje informando de que la contraseña se ha modificado correctame
nte\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Las funciones wizard ANY /wizard/, wizard_metadata ANY /wizard/metadata,
 wizard_metadata_submit POST /wizard/metadata_submit, wizard_date ANY /wizard/da
te, wizard_date_submit POST /wizard/date_submit, wizard_users ANY /wizard/users,
 wizard_users_submit POST /wizard/users_submit, wizard_persist ANY /wizard/persi
st, wizard_error ANY /wizard/error, wizard_end ANY /wizard/end
\end_layout

\begin_deeper
\begin_layout Standard
Situadas en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controller/WizardController.php}
\end_layout

\end_inset

, realizan las operaciones necesarias para controlar las reuniones que tendrán
 lugar en el futuro\SpecialChar \@.
 Operaciones tales como agregar una reunión futura, agregar
 un usuario a una reunión futura, cambiar la fecha a una reunión futura,
 controlar que los datos de la reunión sean coherentes, etc\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
recording ANY /recording/
\end_layout

\begin_deeper
\begin_layout Standard
Situada en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controller/RecordingController.php}
\end_layout

\end_inset

, devuelve todas las grabaciones de la base de datos\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Las funciones recording_show ANY /recording/{id}/show, recording_new ANY
 /recording/new, recording_create POST /recording/create, recording_edit
 ANY /recording/{id}/edit, recording_update POST /recording/{id}/update,
 recording_delete POST /recording/{id}/delete 
\end_layout

\begin_deeper
\begin_layout Standard
Situadas en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controller/RecordingController.php}
\end_layout

\end_inset

, de nuevo ofrecen las mismas funcionalidades descritas para las reuniones
 y para los grupos, en las cuales el administrador puede actuar directamente
 sobre la base de datos si fuese necesario\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Para terminar con estas funciones específicas para el administrador de la
 aplicación user ANY /useradmin/, user_show ANY /useradmin/{id}/show, user_new
 ANY /useradmin/new, user_create POST /useradmin/create, user_edit ANY /useradmi
n/{id}/edit, user_update POST /useradmin/{id}/update, user_delete POST /useradmi
n/{id}/delete
\end_layout

\begin_deeper
\begin_layout Standard
Situadas en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controller/RecordingController.php}
\end_layout

\end_inset

, también realizan el tipo de operaciones relacionadas con la edición directa
 de la base de datos por parte del administrador\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
cmar_meeting_middleware_index ANY /middleware
\end_layout

\begin_deeper
\begin_layout Standard
Esta es la ruta de acceso a las funciones del middleware\SpecialChar \@.
 La llamada de 
\begin_inset Quotes eld
\end_inset

Directorio +
\begin_inset Quotes erd
\end_inset

 para recopilar o enviar datos a la aplicación, invocará esta ruta acompañada
 de la función o funciones que se soliciten\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
index ANY /
\end_layout

\begin_deeper
\begin_layout Standard
Función situada en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controler/UserController.php}
\end_layout

\end_inset

, envía la información necesaria al template qeu visualiza el usuario al
 entrar en la aplicación\SpecialChar \@.
 Esta función hace una petición a la base de datos
 para obtener, todos los usuarios de la base de datos, la entidad con los
 datos del usuario que realiza la petición, las reuniones que el usuario
 posee activas y los nombres que el propio usuario posee para cada reunión
 (Nicknames)\SpecialChar \@.
 Esta función también contiene los datos de las funciones futuras
 en caso de implementarse esta funcionalidad, incluso se ha implementado
 la lógica para mostrar las reuniones activas de otros usuarios por si fuese
 de interés\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
index_recording ANY /recording/{id}
\end_layout

\begin_deeper
\begin_layout Standard
Función situada en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controler/UserController.php}
\end_layout

\end_inset

\SpecialChar \@.
 Cuando se invoca acompañada del identificador de una grabación, comprueba
 si la grabación está bloqueada devolviendo un mensaje con la información
 o en caso contrario redirigiendo al usuario al servidor 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 para visualizar la grabación\SpecialChar \@.
 Sólo un usuario registrado en la aplicación
 pordrá visualizar la grabación\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
index_public_recording ANY /recording_public/{id}
\end_layout

\begin_deeper
\begin_layout Standard
Función situada en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controler/UserController.php}
\end_layout

\end_inset

\SpecialChar \@.
 Cuando se invoca realiza comprobaciones similares a la función anterior
 pero el usuario no precisa estar registrado en la aplicación\SpecialChar \@.
 Característica
 muy útil si se trabaja con usuarios ajenos a la aplicación\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
index_immediate ANY /immediate
\end_layout

\begin_deeper
\begin_layout Standard
Función situada en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controler/UserController.php}
\end_layout

\end_inset

, para crear una nueva reunión en la base de datos\SpecialChar \@.
 Se realizan las siguientes
 comprobaciones antes de crear la reunión:
\end_layout

\begin_layout Enumerate
En caso de elegir la opción de sala mágica se comprueba si se ha llegado
 al número máximo para este tipo de salas, en caso afirmativo se emite un
 error\SpecialChar \@.

\end_layout

\begin_layout Enumerate
Se comprueba si el estado de la sala está entre los posibles, para evitar
 posibles ataques a la aplicación y obtener un error sobre la base de datos\SpecialChar \@.

\end_layout

\begin_layout Enumerate
Los títulos para las salas en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 no pueden exceder de 60 caracteres, por tanto se realiza esta comprobación
 y si es necesario se da el error correspondiente\SpecialChar \@.

\end_layout

\begin_layout Enumerate
Se comprueba si el título elegido existe en la aplicación ya que el servidor
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 no permite títulos duplicados\SpecialChar \@.

\end_layout

\begin_layout Enumerate
Se procede a crear la sala en la base de datos y en el servidor 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

, para ello se invoca a la función 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{createMeeting}
\end_layout

\end_inset

\SpecialChar \@.
ESta función se encuentra en el módulo de servicio para las reuniones en
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Service/MeetingService.php}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Enumerate
En caso de que todo sea correcto se muestra el mensaje de sala creada correctame
nte y en caso contrario el mensaje: 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Error in ADO, you may need to change the title}
\end_layout

\end_inset

, ya que es posible que el título elegido contenga algún caracter no permitido\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
change_nickname ANY /changenick
\end_layout

\begin_deeper
\begin_layout Standard
Función situada en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controler/UserController.php}
\end_layout

\end_inset

, que cambia el nombre que un usuario mostrará en una reunión determinada\SpecialChar \@.

 Esta función comprueba que se introduce algún caracter y a continuación
 si el nombre que se introduce no es el mismo que ya existe en la base de
 datos para evitar modificaciones superfluas\SpecialChar \@.
 Cabe mencionar que por defecto
 este nombre de usuario para cada reunión, en caso de que el usuario no
 especifique ninguno, será el nombre y apellidos\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
update_rank ANY /updaterank
\end_layout

\begin_deeper
\begin_layout Standard
Función situada en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controler/UserController.php}
\end_layout

\end_inset

, que ordena la lista de reuniones que visualiza el usuario en su cuenta\SpecialChar \@.

 Cuando se entra a la aplicación y el usuario realiza la consulta para obtener
 la lista de reuniones, se pide a la base de datos que ordene esta lista
 según la varible 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{rank}
\end_layout

\end_inset

, perteneciente a cada reunión\SpecialChar \@.
 Esta variable 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{rank}
\end_layout

\end_inset

 es la que actualiza esta función\SpecialChar \@.
 Esta actualización se realiza mediante
 una petición AJAX para actualizar la base de datos y la animación de movimiento
 de una reunión al pinchar sobre ella con el ratón se ha implementado con
 la librería jQuery UI\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
addusers_meeting ANY /addusers
\end_layout

\begin_deeper
\begin_layout Standard
Función situada en 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Controler/UserController.php}
\end_layout

\end_inset

\SpecialChar \@.
 Para añadir usuarios a una reunión se pincha en el botón 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Invite DigiMar Partners}
\end_layout

\end_inset

 y se despliega una ventana emergente en la cual podemos visualizar los
 usuarios que ya han sido invitados a la reunión\SpecialChar \@.
 Esta ventana invoca a la
 función que se está describiendo, la cual realiza la petición a la base
 de datos con la lista de usuarios para dicha reunión\SpecialChar \@.
 Esta ventana, mediante
 la técnica de autocompletado, nos ofrece una lista de usuarios a partir
 de 3 letras que han de ser tecleadas en el correspondiente cajetín de entrada\SpecialChar \@.

 La funcionalidad de autocompletado realiza una petición AJAX para obtener
 los usuarios que conindicen con las letras introducidas en dicho cajetín
 de entrada\SpecialChar \@.
 Si pinchamos sobre un usuario, éste se añade a la caja de usuarios
 invitados a la reunión\SpecialChar \@.
 Si por el contrario pinchamos en el aspa a la derecha
 de algún usuario invitado, éste será eliminado de la reunión\SpecialChar \@.
 Las operaciones
 realizadas sobre esta ventana emergente se confirmarán pinchando en el
 botón 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Save}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 3.5cm
\end_inset


\begin_inset Graphics
	filename Diseño/InviteDigiMarPartners.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Ventana emergente al pinchar en el botón 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Invite DigiMar Partners}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
updateviewsalt_meeting ANY /updateviewsalt/{id}, updatesecretsalt_meeting
 ANY /updatesecretsalt/{id}
\end_layout

\begin_deeper
\begin_layout Standard
Situadas en Controller/UserController.php, ambas rutas comparten la misma
 función y en su interior se evalúa si el parámetro indicado es viewsalt
 o el secretsalt\SpecialChar \@.
 Esta función ofrece entrada a las reuniones con diferentes
 privilegios, si se envía viewsalt los privilegios son limitados, acceso
 sólo para los que visualizarán la reunión pero no podrán participar en
 ella; si se envía el secretsalt se accederá ala reunión con privilegios
 de presentador\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
index_cancel ANY /cancel/{id}
\end_layout

\begin_deeper
\begin_layout Standard
Situada en Controller/UserController.php, es la función que invoca el botón
 Delete de cada reunión\SpecialChar \@.
 En esta función se comprueba primeramente si la
 reunión ha finalizado ya, por si ocurriese algún problema de sincronización,
 en caso contrario pasamos a cambiar el estado de la reunión en la base
 de datos, lo cual eliminará las función de la lista de reuniones en el
 índice de la aplicación para el usuario\SpecialChar \@.
 Para ello se invoca a la función
 stop en el servicio de reuniones\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
index_edit ANY /edit/{id}
\end_layout

\begin_deeper
\begin_layout Standard
Situada en Controller/UserController.php, despliega un formulario para modificar
 una reunión existente, comprobando de inicio si el usuario es el dueño
 de la reunión\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
index_update POST /update/{id}
\end_layout

\begin_deeper
\begin_layout Standard
Situada en Controller/UserController.php, actualiza la base de datos a partir
 de la información del formulario creado en index_edit\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
index_search_meeting ANY /recordings/{meeting_id}
\end_layout

\begin_deeper
\begin_layout Standard
Situada en Controller/UserController.php, crea una lista de grabaciones de
 una reunión para mostrarla en cuando pinchamos en el botón Achievement
 Files\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
index_historical ANY /historical
\end_layout

\begin_deeper
\begin_layout Standard
Situada en Controller/UserController.php, genera la lista de reuniones pasadas
 o eliminadas cuando pinchamos en el botón Achievement Files\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
index_month ANY /historical/{string_month}
\end_layout

\begin_deeper
\begin_layout Standard
Situada en Controller/UserController.php, ofrece la funcionalidad de mostrar
 la lista de reuniones ordenadas por año y mes\SpecialChar \@.
 Como se puede ver en la ventana
 emergente al pinchar en el botón Achievement Files, existe un menú para
 seleccionar año y mes, este menú realiza una llamada a esta función para
 servir la lista de reuniones correspondientes a esta fecha\SpecialChar \@.
 También se puede
 ver que se muestra el número de grabaciones para esa fecha, consulta realizada
 por está función para mostrarse en la ventana emergente\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
change_password ANY /change_password/{email}
\end_layout

\begin_deeper
\begin_layout Standard
Situada en Controller/UserController.php, funcionalidad asociada al botón
 Change Password situado en el menú superior de la aplicación\SpecialChar \@.
 ESta función
 busca el usuario en la base de datos a partir de su dirección de correo
 electrónico, para luego actualizar la base de datos con la contraseña introduci
da en la ventana emergente\SpecialChar \@.
 Si el método utilizado no es POST se reporta
 un error ya que se ha detectado un intento de ataque sobre esta función\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
recording_list ANY /r_list/{id}
\end_layout

\begin_deeper
\begin_layout Standard
Situada en Controller/UserController.php, está asociada a la petición AJAX
 que realiza el botón Recordings de cada reunión\SpecialChar \@.
 Devuelve el usuario dueño
 de la reunión y la entidad que representa la reunión de la cual se ha pulsado
 el botón Recordings\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
locked_recording ANY /locked_record/{locked}/{id}
\end_layout

\begin_deeper
\begin_layout Standard
Situada en Controller/UserController.php, bloquea las grabaciones cuando
 pulsamos en el botón pausa asociado a cada grabación o la desbloquea en
 caso de que pulsemos en dicho botón y la grabación está bloqueada\SpecialChar \@.
 Este
 botón realiza una petición AJAX sobre esta función para que actualice la
 base de datos\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
recording_public_list ANY /r_public_list/{secretsalt}
\end_layout

\begin_deeper
\begin_layout Standard
Situada en Controller/UserController.php, ofrece una lista de grabaciones
 cuando enviamos a usuarios ajenos a la aplicación la URL que aparece en
 la parte superior de la ventana emergente que se despliega al pulsar en
 el botón de grabaciones\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
locked_meeting ANY /locked/{locked}/{id}
\end_layout

\begin_deeper
\begin_layout Standard
Situada en Controller/UserController.php, bloquea las reuniones cuando pulsamos
 en el botón Disabled asociado a cada reunión\SpecialChar \@.
 Con tecnología AJAX este botón
 cambia a Enabled cuando la reunión está deshabilitada, de forma que si
 se pulsa la reunión se desbloquea\SpecialChar \@.
 Este botón realiza una petición AJAX
 sobre esta función para que actualice la base de datos\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
user_form ANY /u_form/{id}
\end_layout

\begin_deeper
\begin_layout Standard
Situada en Controller/UserController.php, devuelve la reunión indicada por
 el identificador que se le pasa mediate POST para la función que genera
 el formulario para el menú de usuarios del administrador\SpecialChar \@.
 REVISAR
\end_layout

\end_deeper
\begin_layout Itemize
user_list ANY /u_list
\end_layout

\begin_deeper
\begin_layout Standard
Situada en Controller/UserController.php, devuelve la lista de usuarios coinciden
tes con las letras introducidas en el cajetín de búsqueda de usuarios por
 AJAX, cuando se quiere añadir nuevos usuarios a una reunión\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
admin ANY /admin
\end_layout

\begin_deeper
\begin_layout Standard
Situada en Controller/UserController.php, consulta las tablas Log y Log_Total
 de la base de datos y envía los datos a la plantilla que genera las tablas
 estadísticas, con el número de participantes activos para cada reunión
 y totales, el tiempo de duración de las reuniones activas, la fecha de
 inicio de la reunión, número de reuniones activas, la fecha y hora de la
 consulta de la base de datos para completar la tabla Log_Total y el identificad
or único para la reunión dentro del servidor 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
indexgroup ANY /group/{key}
\end_layout

\begin_deeper
\begin_layout Standard
Situada en Controller/GroupController.php, comprueba que existe el grupo
 solicitado, a continuación que el usuario que solicita la información pertenece
 al grupo y finalmente devuelve a la plantilla las reuniones actuales, las
 reuniones programadas y la entidad que describe las características del
 grupo\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
indexgroup_recording ANY /group/recording/{id}
\end_layout

\begin_deeper
\begin_layout Standard
Situada en Controller/GroupController.php, redirige a la grabación del grupo
 solicitada\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
indexgroup_immediate ANY /group/immediate/{key}
\end_layout

\begin_deeper
\begin_layout Standard
Situada en Controller/GroupController.php, construye una reunión para un
 grupo determinado de manera que todos los componentes del grupo serán invitados
 a la reunión creada\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
indexgroup_cancel ANY /group/cancel/{id}
\end_layout

\begin_deeper
\begin_layout Standard
Situada en Controller/GroupController.php, actualiza el estado de una reunión
 a 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{CANCELLED}
\end_layout

\end_inset

 con lo cual ya no aparece en la lista de reuniones para los usuarios pertenecie
ntes al grupo y pasa a formar parte de la lista de 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Achievement Files}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
indexgroup_delete ANY /group/delete/{id}
\end_layout

\begin_deeper
\begin_layout Standard
Situada en Controller/GroupController.php, elimina la reunión de la base
 de datos\SpecialChar \@.
 Esta función no se utiliza en la versión final ya que se ha preferido
 mantener la información de todas las reuniones en la base de datos y únicamente
 actualizar su estado para poder acceder a información si fuese necesario
 en caso de que el usuario elimine su reunión\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
indexgroup_edit ANY /group/edit/{id}
\end_layout

\begin_deeper
\begin_layout Standard
Situada en Controller/GroupController.php, crea el formulario necesario para
 editar información a cerca de una reunión de grupo ya creada\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
indexgroup_update POST /group/update/{id}
\end_layout

\begin_deeper
\begin_layout Standard
Situada en Controller/GroupController.php, la información de la reunión descrita
 en el formulario creado en la función anterior se valida en esta función
 y se actualiza en la base de datos\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
indexgroup_historical ANY /group/historical/{key}
\end_layout

\begin_deeper
\begin_layout Standard
Situada en Controller/GroupController.php, crea una lista con las reuniones
 de un grupo que ya han finalizado y poseen el estado 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{CANCELLED}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
indexgroup_month ANY /group/historical/{key}/{string_month}
\end_layout

\begin_deeper
\begin_layout Standard
Situada en Controller/GroupController.php, devuelve la lista de reuniones
 de grupos con sus respectivas grabaciones\SpecialChar \@.
 La petición se hace para un mes
 y año concretos, de forma similar al 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Achievement Files}
\end_layout

\end_inset

 para las reuniones de usuarios individuales\SpecialChar \@.
 A la vez que se visualiza el
 número de reuniones para un mes en la lista desplegable, también se puede
 saber el número de reuniones para ese mes\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
index_room ANY /room/{salt}, index_secretroom ANY /secretroom/{salt}, index_noan
onymousroom ANY /noanonymousroom/{salt}, 
\begin_inset Newline linebreak
\end_inset

index_noanonymoussecretroom ANY /noanonymoussecretroom/{salt}
\end_layout

\begin_deeper
\begin_layout Standard
Situadas en Controller/RoomController.php, todas estas URLs llaman a la misma
 función\SpecialChar \@.
 Implementa uncontrol de acceso a las reuniones a partir de una
 URL secreta generada con el algoritmo MD5 a partir del nombre de la reunión
 y otros datos, a parte de una huella aleatoria\SpecialChar \@.
 El usuario que posea la
 URL podrá acceder a la reunión con unos privilegios determinados en función
 de si la URL que posee contiene el parámetro salt, secretsalt o viewsalt
 de la reunión\SpecialChar \@.
 Para dar acceso a una reunión se comprueba ese parámetro
 de la URL y el estado de la reunión, de forma que el usuario que accede
 a la reunión podrá ser presentador o visualizador de la reunión\SpecialChar \@.
 El acceso
 también podrá ser anónimo, es decir, un usuario que no tenga una cuenta
 en la aplicación también tendrá acceso a través de las URLs que no contienen
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{noanonymousroom}
\end_layout

\end_inset

 o 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{noanonymoussecretroom}
\end_layout

\end_inset

\SpecialChar \@.
 Estas URLs no redirigen a sus correspondientes plantillas para entrada
 de acceso anónimo o para que accedamos a un menú de registro en la aplicación\SpecialChar \@.

 De esta forma la aplicación siempre tendrá el control sobre los usuarios
 que acceden, pertenezcan o no a la lista de usuarios registrados en la
 aplicación\SpecialChar \@.
 Para obtener control total de los privilegios de acceso de usuarios
 anónimos, no registrados en la aplicación, se crea un usuario temporal
 en el servidor 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

, que luego será eliminado desde la función del cron correspondiente\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
login ANY /login
\end_layout

\begin_deeper
\begin_layout Standard
Esta ruta nos redirige a la plantilla de entrada a la aplicación, si se
 accede a una ruta configurada como privada en el archivo 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{security.yml}
\end_layout

\end_inset

\SpecialChar \@.
 Es una ruta por defecto que ofrece el 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{framework}
\end_layout

\end_inset

 Symfony para simplificar el intercambio entre mecanismos de registro en
 aplicaciones y para simplificar el acceso de usuario anónimos para la aplicació
n\SpecialChar \@.
 Esta ruta, al igual que las 2 que describiremos a continuación, se encuentra
 en el fichero 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{routing.yml}
\end_layout

\end_inset

\SpecialChar \@.
 Nos ofrece un formulario para acceder a través del correo electrónico del
 usuario y su contraseña asociada, además de un enlace a un formulario de
 recuperación de contraseña\SpecialChar \@.
 Para mayor seguridad el formulario de recuperación
 de contraseña envía un correo electrónico a la cuenta indica y se genera
 un enlace único enviado a ese correo electrónico que nos redirige a un
 nuevo formulario para cambiar la contraseña directamente en la base de
 datos\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
login_check ANY /
\end_layout

\begin_deeper
\begin_layout Standard
Esta ruta que pertenece al fichero 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{routing.yml}
\end_layout

\end_inset

 controlará el envío de formularios de inicio de sesión\SpecialChar \@.
 Es decir todo usuario
 que intente acceder a la aplicación será reenviado a la función loginAction
 del archivo Controller/SecurityController.php\SpecialChar \@.
 En este archivo se evaluará
 el resto de la URL de acceso para comprobar el tipo de acceso que hemos
 definido en el archivo 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{security.yml}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
logout ANY /logout
\end_layout

\begin_deeper
\begin_layout Standard
Esta función perteneciente al fichero 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{routing.yml}
\end_layout

\end_inset

, realiza la salida de la aplicación\SpecialChar \@.
 Es una función interna a la lógica
 de Symfony2, al igual que las 2 anteriores y ofrece potentes mecanismos
 de seguridad\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
Los términos que aparecen entre corchetes hacen referencia a la variable
 que se pasa por el método POST a cada una de las funciones\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
Interfaz de Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\end_layout

\begin_layout Standard
En esta sección describiremos el interfaz de Adobe Connect Professional
 al que accedemos al pinchar en el botón 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Join}
\end_layout

\end_inset

 de la aplicación\SpecialChar \@.

\end_layout

\begin_layout Standard

\color red
COMPLETAR
\end_layout

\begin_layout Section
Directorio +
\end_layout

\begin_layout Standard
Es un servidor que almacena los datos de todas la aplicaciones y ofrece
 un servicio de sincronización e información\SpecialChar \@.
 Comercialmente recibe el nombre
 de 
\begin_inset Quotes eld
\end_inset

Directorio +
\begin_inset Quotes erd
\end_inset

 y proveerá a todas las aplicaciones de 
\begin_inset Quotes eld
\end_inset

Campus do Mar
\begin_inset Quotes erd
\end_inset

 de información para cargar sus bases de datos, tales como usuarios, sus
 datos personales, pertenencia a determinados gupos, contraseñas y otros
 datos de interés.
 Es la parte más compleja del sistema ya que en combinación con el servidor
 CAS permitirá registrarse a todos los usuarios en todas las aplicaciones
 registrándose únicamente en una de ellas\SpecialChar \@.
 La información modificada en cualquier
 aplicación se sincronizará con el resto gracias al 
\begin_inset Quotes eld
\end_inset

Directorio +
\begin_inset Quotes erd
\end_inset

\SpecialChar \@.
 Este servidor realizará peticiones periódicas a todas las aplicaciones,
 incluída 
\begin_inset Quotes eld
\end_inset

eMeeting
\begin_inset Quotes erd
\end_inset

, para actualizar datos\SpecialChar \@.
 Este flujo de datos se realizará en ambos sentidos
 y con un formato determinado\SpecialChar \@.
 La descripción de los datos solicitados se
 almacena en archivos XML y 
\begin_inset Quotes eld
\end_inset

Directorio +
\begin_inset Quotes erd
\end_inset

 ejecutará las funciones que necesite para actualizarse adecuadamente\SpecialChar \@.
 La
 descripción de las funciones que ejecutará Directorio + referentes a eMeeting
 se almacenan en un fichero llamado 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{middleware.wsdl}
\end_layout

\end_inset

 y que ambas partes poseen\SpecialChar \@.
 Evidentemente el archivo de 
\begin_inset Quotes eld
\end_inset

eMeeting
\begin_inset Quotes erd
\end_inset

 sólo contiene sus funciones\SpecialChar \@.
 Las funciones asociadas a este archivo y la
 descripción de su contenido pasamos a describirlas a continuación\SpecialChar \@.

\end_layout

\begin_layout Subsection
El Middleware
\end_layout

\begin_layout Standard
Middleware, se refiere al software que media para conectar dos componentes
 software en un sistema distribuido.
 
\end_layout

\begin_layout Standard
En el fichero 
\begin_inset Quotes eld
\end_inset

middleware.wsdl
\begin_inset Quotes erd
\end_inset

 indicaremos el formato de información que directorio plus envía a nuestra
 aplicación en formato XML\SpecialChar \@.
 Esta información se procesará en las distintas
 funciones implementadas en la aplicación 
\begin_inset Quotes eld
\end_inset

eMeeting
\begin_inset Quotes erd
\end_inset

 para rellenar los campos necesarios en nuestra base de datos, para los
 usuarios y grupos pertenecientes a la plataforma Campus do Mar\SpecialChar \@.
 Algunas
 de estas funciones son: 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{createUser, EnjoinGroup o addGroup}
\end_layout

\end_inset

\SpecialChar \@.
 Cada una de estas funciones, a partir de los flujos generados por 
\begin_inset Quotes eld
\end_inset

Directorio +
\begin_inset Quotes erd
\end_inset

 hacia nuestra aplicación, adaptan los datos enviados para almacenarlos
 en la base de datos, necesarios para la sincronización de la aplicación
 
\begin_inset Quotes eld
\end_inset

eMeeting
\begin_inset Quotes erd
\end_inset

 de forma completamente transparente para el usuario\SpecialChar \@.
 La primera función
 añade un nuevo usuario a nuestra aplicación cuando un nuevo usuarios es
 añadido a 
\begin_inset Quotes eld
\end_inset

Directorio +
\begin_inset Quotes erd
\end_inset

, si un nuevo usuario es añadido a un grupo se invoca al segunda función
 y si queremos crear un nuevo grupo se invocará la tercera función\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
Seguridad de la Aplicación
\begin_inset CommandInset label
LatexCommand label
name "sec:Seguridad-de-la"

\end_inset


\end_layout

\begin_layout Standard
En el fichero 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{security.yml}
\end_layout

\end_inset

 de Symfony tenemos configuradas tres opciones de logueo en nuestra aplicación\SpecialChar \@.

 La ofrecida por html con un desplegable donde se puede introducir login
 y contraseña, el método de configuración de servidores de control de acceso
 (entidades certificadoras) o la que ofrece Symfony mediante la redirección
 a un formulario que se puede maquetar a nuestro gusto como puerta de acceso
 a nuestra aplicación\SpecialChar \@.

\end_layout

\begin_layout Standard
De esta forma podemos alternar fácilmente entre 3 tipos de logueo sin más
 que comentar y descomentar unas cuantas líneas en nuestro fichero 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{security.yml}
\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
Como aplicación independiente descrita en el capítulo 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Diseño-del-proyecto"

\end_inset

 de diseño, es imprescindible que ofrezca estos diferentes tipos de seguridad
 y registro de usuarios\SpecialChar \@.
 Una de las más interesantes es la posibilidad de
 registrarse a través de un servidor CAS, que pasamos a describir\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 2.5cm
\end_inset


\begin_inset Graphics
	filename Diseño/CAS.png
	width 12cm
	height 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Servidor CAS
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Servidor_CAS"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
CAS (
\lang english
Central Authentication Service
\lang spanish
) es una aplicación web que nos permite implementar el conocido SSO (
\lang english
Single Sign On
\lang spanish
) que es un procedimiento de autenticación que habilita a un usuario para
 acceder a distintas aplicaciones web (en distintos dominios y en distintos
 servidores) con hacer login una única vez\SpecialChar \@.
 En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "Servidor_CAS"

\end_inset

 se describe el intercambio de tickets entre las entidades que realizan
 el registro\SpecialChar \@.
 En general, cuando un usuario se conecta a una de las aplicaciones
 invoclucradas en el sistema comprueba si está autenticado y si no lo está
 lo redirige a la pantalla del servidor de autenticación.
 Si la autenticación es correcta el sistema de autenticación, en este caso
 CAS, vuelve a redirigir al usuario a la página que se solicitaba en un
 primer momento.
 El desarrollador no tiene que preocuparse por mantener la seguridad y tener
 un formulario de login en cada una de las aplicaciones web que desarrolla,
 sino que simplemente tiene que hacer la comprobación de si el usuario ya
 está registrado, que es tan sencillo como preguntar a la request de esta
 forma: request.getRemoteUser()\SpecialChar \@.
 Si el método devuelve null es que no está
 registrado y será redireccionado a la página de login de CAS\SpecialChar \@.
 Si ya está
 registrado por CAS, este método devolverá un valor con el que sabremos
 que es un usuario registrado\SpecialChar \@.
 Algo que debe quedar muy claro es que CAS
 se encarga única y exclusivamente de la autenticación, es decir, de comprobar
 contra una fuente de datos especifica si el usuario y contraseña facilitados
 existen y son correctos, NO se encarga de la autorización, que sería la
 gestión de lo que puede o no puede hacer ese usuario en función de sus
 roles.
 
\end_layout

\begin_layout Standard
Para entrar en la aplicación eMeeting debemos encontrarnos logueados mediante
 dicho servidor CAS, implementado para todas las aplicaciones de 
\begin_inset Quotes eld
\end_inset

Campus do Mar
\begin_inset Quotes erd
\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
Para 
\begin_inset Quotes eld
\end_inset

eMeeting
\begin_inset Quotes erd
\end_inset

 también se ha implementado la posibilidad de acceder a través de un formulario
 creado con Symfony\SpecialChar \@.
 Symfony compara la información introducida con la almacenada
 en la base de datos de la aplicación, para permitir el acceso a la aplicación\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 5cm
\end_inset


\begin_inset Graphics
	filename Diseño/login.png
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Formulario de acceso a la aplicación
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "login"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Como se observa en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "login"

\end_inset

, el acceso es sencillo y posee un enlace para recuperar la contraseña en
 caso de que el usuario la olvide\SpecialChar \@.

\end_layout

\begin_layout Standard
Por último se ha implementado la opción de registro que ofrece HTML con
 un formulario sencillo que accede a la base de datos para comprobar que
 el usuario y contraseña introducidos son correctos\SpecialChar \@.

\end_layout

\begin_layout Standard
El fichero 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{routing.yml}
\end_layout

\end_inset

 es el único que se debe modificar para alternar entre todas las posibilidades
 de acceso implementadas\SpecialChar \@.
 Cabe resaltar que incluso se puede definir el tipo
 de acceso para cada una de las rutas descritas en la sección 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:URLs-de-acceso"

\end_inset

\SpecialChar \@.
 La parte útil de este echo recae en que las partes de la aplicación denominadas
 públicas sean accesibles por usuarios no registrados en la aplicación,
 como por ejemplo, las grabaciones de las reuniones\SpecialChar \@.
 Para el acceso a las
 zonas públicas se ha implementado un control de acceso manejado por el
 usuario\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
Concepto de sala
\begin_inset CommandInset label
LatexCommand label
name "sec:Concepto-de-sala"

\end_inset


\end_layout

\begin_layout Standard
Llamaremos sala a la entidad fundamental de nuestra aplicación, cada sala
 contendrá una única reunión en la que todos los participantes colaboran
 según el rol que desempeñen\SpecialChar \@.
 Cada usuario podrá crear las salas que precise
 oportunas y darle el nombre que desee, aunque el número total de salas
 en uso no podrá superar 10, pero esta información será transparente al
 usuario y una lógica interna ha sido diseñada para alertar al administrador
 de la aplicación sobre la proximidad al número máximo de salas en uso,
 por si cree oportuno disponer de más salas y debe negociarlo con la compañía
 suministradora de recursos, en nuestro caso 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

\SpecialChar \@.
 La aplicación 
\begin_inset Quotes eld
\end_inset

eMeeting
\begin_inset Quotes erd
\end_inset

 podría utilizarse con otro motor de vídeoconferencia, pero sería de todas
 formas necesario informar al administrador de la proximidad del número
 máximo de salas en uso, ya que en cualquier motor el número de salas es
 un recurso limitado\SpecialChar \@.
 Un requisito de la aplicación es que no puede darse
 un nombre de sala que exista de entre las salas en activo, sería posible
 implementar una lógica para que cada usuario no se percate de este echo,
 ya que 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 no permite tener salas con el mismo nombre, pero será un cometido para
 líneas futuras\SpecialChar \@.

\end_layout

\begin_layout Standard
El concepto de sala no se refleja en la lógica de la base de datos, pero
 se tiene muy presente a la hora de diseñar y mostrar la aplicación al usuario,
 podríamos decir que una reunión se realiza en una sala, pero en realidad
 disponemos únicamente de 10 salas, sin embargo el usuario puede crear todas
 las reuniones que desee\SpecialChar \@.
 En los primeros diseños, de forma transparente
 al usuario, se creaba una sala de vídeoconferencia para cada usuario de
 
\begin_inset Quotes eld
\end_inset

Campus do Mar
\begin_inset Quotes erd
\end_inset

, y se mostraba al usuario los estados de sala (
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{room}
\end_layout

\end_inset

) habilitada/deshabilitada, mágica/no mágica o secreta/pública.
 Definitivamente este diseño se abandonó y el usuario entra por primera
 vez a la aplicación y no posee ninguna sala, una enorme flecha le inidica
 las instrucciones a seguir para crear su propia sala\SpecialChar \@.
 También se dispone
 de un manual en red con indicaciones para realizar cualquier acción disponible
 dentro de la aplicación 
\begin_inset Quotes eld
\end_inset

eMeeting
\begin_inset Quotes erd
\end_inset

\SpecialChar \@.
 En nuestra lógica de base de datos, las salas libres son en realidad reuniones
 (
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{meetings}
\end_layout

\end_inset

) almacenadas en la tabla “meeting” y siempre están asociadas a un estado:
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{NOW, NEW, SCHEDULE, CANCELLED, FINICHED o LOCKED}
\end_layout

\end_inset

\SpecialChar \@.
 Estos 6 estados son fundamentales para gestionar las funcionalidades que
 ofrece la aplicación\SpecialChar \@.

\end_layout

\begin_layout Subsection
Acceso a las salas
\end_layout

\begin_layout Standard
Debido a los diferentes tipos de salas y usuarios es necesario implementar
 un control de acceso para las salas\SpecialChar \@.
 Para esta lógica definimos los conceptos
 de 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Viewsalt}
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Salt}
\end_layout

\end_inset

 y 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{SecretSalt}
\end_layout

\end_inset

, el cual nos ayudará a construir la url que dará acceso a las diferentes
 salas de la aplicación\SpecialChar \@.

\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Viewsalt}
\end_layout

\end_inset

: Se genera con el algoritmo MD5\SpecialChar \@.

\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Salt}
\end_layout

\end_inset

: Este campo que almacenamos asociado a cada uno de las reuniones creadas,
 es generado con el login de usuario o el nombre del grupo, según corresponda\SpecialChar \@.

 Cconstruye la url de acceso para las salas públicas y usuarios presentadores\SpecialChar \@.

\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{SecretSalt}
\end_layout

\end_inset

: Se genera con el algoritmo MD5 a partir del login de usuario o del nombre
 del grupo.
 Construye las url para las salas privadas\SpecialChar \@.

\end_layout

\begin_layout Standard
Esta decisión se toma a partir del momento en que se decide crear todas
 las salas con el estado de públicas en el servidor 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 y gestionar el control de acceso desde la propia aplicación 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{eMeeting}
\end_layout

\end_inset

\SpecialChar \@.
 De esta forma a partir de la url generada el usuario puede decidir invitar
 a cualquier persona, ya sea miembro de la Plataforma 
\begin_inset Quotes eld
\end_inset

Campus del Mar
\begin_inset Quotes erd
\end_inset

 o no y otogarle el rol que considere oportuno\SpecialChar \@.
 Este planteamiento es altamente
 útil para dar una mayor flexibilidad a la hora de trabajar con personal
 ajeno a 
\begin_inset Quotes eld
\end_inset

Campus do Mar
\begin_inset Quotes erd
\end_inset

, pero que en un momento dado puede llegar a colaborar en un proyecto de
 investigación.
\end_layout

\begin_layout Standard
Este control de acceso se implementa con la siguiente lógica: 
\end_layout

\begin_layout Itemize
Pública: 
\end_layout

\begin_deeper
\begin_layout Itemize
Entrada con Salt: Pueden entrar los usuarios que conozcan la sala del usuario
 ya que la url se construye con el login del usuario que la crea 
\end_layout

\begin_layout Itemize
Entrada con SecretSalt: Pueden entrar todos los que conozcan la url generada
 con el SecretSalt de la sala.
 
\end_layout

\end_deeper
\begin_layout Itemize
Privada: 
\end_layout

\begin_deeper
\begin_layout Itemize
Entrada con Salt: Sólo puede entrar el usuario, no tiene mucho sentido ya
 que un meeting para un sólo usuario no necesita comunicación.
\end_layout

\begin_layout Itemize
Entrada con SecretSalt: Pueden entrar todos los que conozcan la url generada
 con el SecretSalt de la sala.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
Comandos para una gestión de mayor comodidad
\end_layout

\begin_layout Itemize
Importación de usuarios definida en la base de datos interna de la aplicación
\end_layout

\begin_deeper
\begin_layout Standard
La aplicación posee una base de datos interna que carga una serie de usuarios
 por defecto definidos en el corazón de la aplicación que facilita el testeo
 de la aplicación, y sus respectivas pruebas en un nuev servidor\SpecialChar \@.
 En el fichero
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{DataFixtures/ORM/LoadUserData.php}
\end_layout

\end_inset

 creamos los usuarios que serán introducidos por defecto en la base de datos
 cuando ejecutemos el comando cmar:import:user\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize
Estado de las reuniones
\end_layout

\begin_deeper
\begin_layout Standard
El comando cmar:meeting:cron nos permite conocer el estado de las reuniones
 y testear las últimas funcionalidades de manera ágil y rápida\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize
Comprobación de la sincronización de usuarios
\end_layout

\begin_deeper
\begin_layout Standard
El comando cmar:sync:user, nos permite comprobar si los usuarios de la base
 de datos interna de la aplicación existen en servidor de Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

\SpecialChar \@.
 En caso contrario los usuarios no podrán disfrutar de vídeoconferencias
 dentro de la aplicación como usuarios internos\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize
Comprobación de conectividad con el servidor de Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
El comando cmar:test:meeting, nos permite comprobar si el servidor donde
 alojaremos la aplicación posee conectividad con el servidor donde está
 alojada la aplicación Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

\SpecialChar \@.
 Una forma rápida de detectar errores de conexión con dicho servidor nos
 ayudará a descartar errores con mayor agilidad\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
Servicios de la aplicación
\end_layout

\begin_layout Standard
Los servicios están descritos en el fichero de configuración 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Resources/config/services.xml}
\end_layout

\end_inset

\SpecialChar \@.
 En este fichero debemos configurar el tipo de dato de entrada para cada
 servicio a usar en la aplicación\SpecialChar \@.
 Este fichero en formato XML guarda en
 sus variables los datos de conexión al servidor Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset

\SpecialChar \@.
 Estas variables son la URL donde está alojado el servidor Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset

con los datos de registro del usuario administrador para este servidor,
 ya que es necesario para utilizar todas las opciones de la API\SpecialChar \@.
 También
 se encuentran aquí los datos que nos limitan el uso del servidor como son
 el número total de salas contratadas en el servidor\SpecialChar \@.
 Definimos aquí también
 el número de salas que usaremos como mágicas y por tanto también el número
 de salas que serán de libre acceso para cualquier usuario, de esta forma
 si deseamos modificar este número sólo debemos cambiar este archivo\SpecialChar \@.
 Como
 ya comentamos dentro del servidor existe una carpeta en la que almacenaremos
 todas las grabaciones de las reuniones que los usuarios borren\SpecialChar \@.
 El identificador
 de esta carpeta que será permanente durante la vida de cada aplicación,
 se configurará también en este archivo\SpecialChar \@.
 Pasamos ahora a describir los servicios
 de la aplicación y los parámetros que posee este archivo relativos a cada
 servicio\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize
Servicio de Meeting
\end_layout

\begin_deeper
\begin_layout Standard
A este servicio se le pasa como parámetros desde el fichero 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{services.xml}
\end_layout

\end_inset

 el identificador de Doctrine, ya que se usará acceso a la base de datos
 en este servicio, el identificador del servicio AdoAdmin debido a que se
 usarán gran cantidad de las funciones que se crean en este fichero para
 acceder al servidor Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

\SpecialChar \@.
 Se le envía el número total de salas disponibles, o lo que es lo mismo,
 el máximo número de licencias de Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 disponibles, el número de salas simultáneas y el número de salas mágicas\SpecialChar \@.

 Por último también se envía el identificador del servicio de registro ya
 que es necesario que estas funciones se encuentren disponibles para posibles
 accesos a las salas y al interfaz de usuario\SpecialChar \@.
 El servicio de registro nos
 permite obtener los datos del usuario que accede a la aplicación para poder
 ofrecerle sus parámetros y los privilegios que posee dentro de la aplicación\SpecialChar \@.

\end_layout

\begin_layout Standard
En este servicio proporcionamos a la aplicación las funciones para actuar
 sobre las reuniones de la aplicación y para llamar a funciones de la API
 de Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 relacionadas con las reuniones de nuestra aplicación.
\end_layout

\begin_layout Itemize
Función para crear reuniones en la base de datos de la aplicación
\end_layout

\begin_deeper
\begin_layout Standard
En este servicio se aloja la función que crea las reuniones en la base de
 datos de la aplicación\SpecialChar \@.
 Recoge los datos que le ofrece el formulario de
 creación de reuniones de la aplicación como el título, el usuario que la
 crea, el nickname que ese usuario desee mostrar para esta reunión en concreto,
 por defecto su nombre y apellidos, un parámetro que indica si la sala es
 pública o privada, una pequeña descripción de la reunión si se desea, y
 para los usuarios administradores también aparece la opción de elegir si
 la sala será mágica o no\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Función para crear reuniones en el servidor Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
En este servicio se aloja la función que crea las reuniones en el servidor
 Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

\SpecialChar \@.
 Cuando pulsamos el botón 
\begin_inset Quotes eld
\end_inset

Join
\begin_inset Quotes erd
\end_inset

 de la aplicación se ejecuta esta función que mediante el uso del servicio
 de administrador de Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 crea la reunión en el servidor Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 y nos introduce en la sala\SpecialChar \@.
 También se cambia el estado de la sala y se
 almacena en la base de datos la url que, para Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

, identificará esta sala\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Función para eliminar reuniones en el servidor Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
En esta función se hace una búsqueda de la reunión en la base de datos de
 Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 mediante la url que nos proporcionó en la función para crear las reuniones\SpecialChar \@.

 Una vez identificada la reunión se procede a guardar sus grabaciones, si
 las hubiese, en una carpeta dentro del servidor Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 destinada a tal fin\SpecialChar \@.
 Acto seguido se cambia el estado de la reunión en la
 base de datos de la aplicación a finalizada\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Función para añadir usuarios del 
\begin_inset Quotes eld
\end_inset

Campus do Mar
\begin_inset Quotes erd
\end_inset

 a reuniones en el servidor Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Esta función recibe como parámetros la entidad reunión y un array con los
 usuarios que debe contener la reunión, por tanto, eliminamos todos los
 usuarios de la reunión menos el creador y añadimos todos los usuarios que
 contiene el array recibido.
 Debido a que es posible que un usuario quiera borrar únicamente al propietario
 de la reunión y no al resto se añade una comprobación a mayores en la cual
 si en la lista recibida no está el propietario de la reunión, se devuelve
 un error y no se modifica la lista de usuarios de la reunión\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Función para crear usuarios en el servidor Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Esta función recibe todos los campos necesarios para crear un usuario en
 el servidor Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

, login, nombre, apellidos, correo electrónico, descripción y contraseña\SpecialChar \@.

 Estos datos se introducen en el servidor con una llamada 
\begin_inset Quotes eld
\end_inset

principal-update
\begin_inset Quotes erd
\end_inset

 de la API de Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Control de acceso a las reuniones en el servidor Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Esta función devuelve verdadero o falso tras realizar una serie de comprobacione
s que indican si está permitido el acceso a una determinada reunión, comprobando
 si el usuario está en la base de datos o es un usuario anónimo, si la reunión
 está bloqueada, si el usuario pertenece a lista de invitados o es el creador,
 y si en caso de ser un usuario anónimo accede desde la url correspondiente
 para tal fin\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Función para cambiar el 
\begin_inset Quotes eld
\end_inset

nickname
\begin_inset Quotes erd
\end_inset

 de usuario
\end_layout

\begin_deeper
\begin_layout Standard
La aplicación permite tener un nombre corto para cada reunión\SpecialChar \@.
 De esta forma
 en la actual función implementamos una lógica que nos permite modificar
 el nombre corto asociado a cada usuario en cada reunión\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Función para cambiar el hash de la entrada secreta
\end_layout

\begin_deeper
\begin_layout Standard
En esta función se implementa un cambio aleatorio de una clave que nos permite
 entrar a una sala con ciertos privilegios otorgados por el creador de la
 reunión que aloja dicha sala\SpecialChar \@.
 Podriamos decir que es una llave maestra que
 nos otorga el creador de la sala para poder entrar en ella, en ocasiones
 con los mismo privilegios que el creador\SpecialChar \@.
 Esta función en concreto implementa
 la lógica que nos permite modificar dicha llave maestra para que los usuarios
 que tengan la llave maestra obsoleta ya no puedan de disfrutar de la sala
 y se les tenga que enviar la nueva llave otra vez\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Función para cambiar el hash de la entrada común
\end_layout

\begin_deeper
\begin_layout Standard
Al igual que para la entrada secreta para la entrada común también se implementa
 un hash con el algoritmo md5 que nos permite el acceso de forma común a
 la sala e identifica cada reunión\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Función para cambiar la contraseña de usuario
\end_layout

\begin_deeper
\begin_layout Standard
En esta función implementamos una llamada a la API de Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 para cambiar la contraseña de usuario en dicho servidor, ya que la contraseña
 del usuario deben estar sincronizadas tanto en el servidor Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 como en el servidor de la aplicación\SpecialChar \@.

\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize
Servicio de aplicación de Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
En este servicio implementamos diferentes funciones que relacionan de forma
 directa la aplicación con el servidor Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Servidor
\end_layout

\begin_deeper
\begin_layout Standard
Función que obtiene las credenciales del servidor donde se aloja la aplicación
 Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Itemize
Cookies
\end_layout

\begin_deeper
\begin_layout Standard
Diferentes funciones que guardan y rescatan la cookie de sesión que el servidor
 Adobe ofrece cada vez que realizamos un login\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Función de login
\end_layout

\begin_deeper
\begin_layout Standard
Esta función realiza el login en el servidor Adobe con las credenciales
 del usuario que realiza la petición desde la aplicación\SpecialChar \@.
 Realiza una serie
 de peticiones con curl utilizando el APi de Adobe y procesa las respuestas
 del servidor para determinar si la operación se ha realizado con éxito\SpecialChar \@.

 SE han diseñado una serie de excepciones para determinar posibles errores
 en el login y atarjarlos ágilmente\SpecialChar \@.

\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize
Servicio de administrador de Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

AdoAdmin
\end_layout

\begin_deeper
\begin_layout Standard
Desde el archivo 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{services.xml}
\end_layout

\end_inset

, se envía la URL donde se aloja el servidor Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

, el usuario y contreña de acceso para el usuario administrador, la carpeta
 donde se alojarán las grabaciones cuando eliminamos una sala y el servicio
 de registro\SpecialChar \@.

\end_layout

\begin_layout Standard
En este servicio albergamos los comandos de la API de Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 para realizar las diferentes acciones sobre el servidor\SpecialChar \@.
 Algunas de estas
 acciones son la creación de usuarios, la creación de reuniones, el cambio
 de contraseña para un usuario o la actualización de cualquiera de las entidades
 que alberga el servidor Adobe\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize
Factoría de Adobe
\end_layout

\begin_deeper
\begin_layout Standard
Desde el archivo 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{services.xml}
\end_layout

\end_inset

, se envía la URL donde se aloja el servidor Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

y el servicio de registro\SpecialChar \@.

\end_layout

\begin_layout Standard
Proporciona funciones para utilizar el API de Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

\SpecialChar \@.
 Desde este servicio obtenemos el nombre del servidor dónde se aloja Adobe
 Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 para poder comunicarnos con él\SpecialChar \@.
 También se obtiene el usuario que está conectado
 en ese momento y nos da la capacidad de hacer una llamada a la administración
 de Adobe para crear un usuario en caso de que no estemos ya logueados en
 el servidor\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize
Interfaz de administración para Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
En el interfaz de administración debemos añadir las cabeceras de las funciones
 más importantes de la aplicación como son crear y borrar reuniones\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize
Servicio de Mail
\end_layout

\begin_deeper
\begin_layout Standard
Este servicio nos permite utilizar las herramientas de Symfony para enviar
 correos tanto a los usuarios como a los administradores\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize
Servicio de Middleware
\end_layout

\begin_deeper
\begin_layout Standard
Desde el archivo 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{services.xml}
\end_layout

\end_inset

, se envía el identificador de Doctrine, el servicio AdoAdmin, el servicio
 de validación y el servicio de registro\SpecialChar \@.
 El servicio de validación nos permitirá
 validar los campos de nuestra clase Profile, esto puede ser inyectado en
 cualquiera de nuestros servicios que necesitan validar un objeto\SpecialChar \@.

\end_layout

\begin_layout Standard
Este servicio contiene las acciones que se ejecutan en la aplicación para
 las diferentes llamadas desde Directorio +.
 Tales como actualizar datos de usuario o de reuniones\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Itemize
Servicio EntityListener
\end_layout

\begin_deeper
\begin_layout Standard
Este servicio ofrece la posibilidad de ejecutar tareas o mensajes cuando
 ocurre una determinada acción dentro de Doctrine\SpecialChar \@.

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
Controladores
\end_layout

\begin_layout Subsection
Controlador de meeting
\end_layout

\begin_layout Standard
Este controlador contiene múltiples funciones sobre las reuniones de la
 aplicación\SpecialChar \@.
 
\end_layout

\begin_layout Standard
Una de las primeras funciones es crear un útil controlador de la tabla meeting
 de la base de datos, que nos permite actualizar la base de datos via web\SpecialChar \@.

 Esta herramienta es súmamente útil para facilitar las actualizaciones de
 la base de datos a los administradores de la aplicación\SpecialChar \@.
 Una función muy
 importante para el administrador es poder convertir en salas mágicas u
 observar qué salas son mágicas en la aplicación de una forma rápida\SpecialChar \@.
 Este
 controlador nos permite administrar las salas, incluido el campo magic,
 rápidamente\SpecialChar \@.
 Podemos también convertir una sala pública en privada y viceversa,
 cambiar el nombre o su descripción\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
Controlador personal
\end_layout

\begin_layout Standard
En una versión anterior este controlador nos permitía obtener la lista de
 todas las reuniones disponibles para cada usuario\SpecialChar \@.
 En la actualidad esta
 funcionalidad está fuera del alcance de la versión liberada\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
Controlador de grabaciones
\end_layout

\begin_layout Standard
Este controlador ofrece funcionalidades para controlar la tabla de grabaciones
 de la base de datos\SpecialChar \@.
 Al igual que la tabla meeting, es posible manipular
 vía web, la tabla de las grabaciones de la aplicación\SpecialChar \@.
 Es un controlador
 menos usado que el controlador de las reuniones pero útil igualmente\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
Controlador de sala
\end_layout

\begin_layout Standard
Este es uno de los controladores más importantes para el buen funcionamiento
 de la aplicación\SpecialChar \@.
 Posee un control de acceso para cada tipo de enlace ofrecido
 por la aplicación para acceder a las salas\SpecialChar \@.
 Con este control de acceso definimos
 mediante la url proporcionada los privilegios que cada usuario poseerá
 sobre las reunión a la que es invitado o que ha creado\SpecialChar \@.

\end_layout

\begin_layout Standard
En este controlador se comprueban si los hash son correctos para permitir
 el acceso de cada usuario a la reunión\SpecialChar \@.
 También se diseñan los errores que
 la aplicación reportará en caso de no acceso a la reunión\SpecialChar \@.
 La función que
 realiza este control de acceso crea la url con la que el usuario accederá
 al servidor Adobe\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
Controlador de seguridad
\end_layout

\begin_layout Standard
Este controlador contiene las funciones para la puerta de entrada a la aplicació
n para cualquier usuario que desee disfrutar de ella\SpecialChar \@.
 En la primera función
 se comprueba que el usuario se encuentra en la base de datos y que su contraseñ
a es correcta\SpecialChar \@.
 Si se produce algún error en el acceso, Symfony ofrece una
 serie de errores detectados que se muestran en el formulario de acceso\SpecialChar \@.

 Para esta aplicación hemos filtrado esos errores para que sólo se muestren
 una serie de mensajes diseñados por el programador, para que el usuario
 los entienda fácilmente\SpecialChar \@.
 Estos mensajes se muestran en modo flash de forma
 que la aplicación se detiene por instante para ejecutar el mensaje y mostrarlo
 sobre la propia pantalla dónde nos encontremos, en este caso la pantalla
 de logueo\SpecialChar \@.
 Este tipo flash para mostrar errores se usará frecuentemente
 a lo largo de la aplicación\SpecialChar \@.

\end_layout

\begin_layout Standard
Las funciones para recoger los datos de los formularios de olvido de contraseña
 también se encuentran en este controlador\SpecialChar \@.
 Que llamará al servicio de correo
 electrónico para enviar un mensaje de 
\begin_inset Quotes eld
\end_inset

reseteo
\begin_inset Quotes erd
\end_inset

 de contraseña al usuario en cuestión\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
Controlador de administrador
\end_layout

\begin_layout Standard
Este contralador contiene la lógica para el menú de los usuarios administradores
, que nos permite viajar los menús para administrar las bases de datos de
 reuniones, grabaciones y usuarios\SpecialChar \@.
 También incluye el código javascript
 para mostrar las gráficas estadísticas para controlar el uso de la aplicación\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
Controlador de usuario
\end_layout

\begin_layout Standard
Este controlador nos permite consultar en la base de datos las diferentes
 reuniones filtrando según los criterios que precisemos para mostrárselas
 al usuario en su página principal\SpecialChar \@.
 Primero se hace una consulta al servidor
 para que nos devuelve el identificador del usuario que va a realizar las
 consultas: $user = $this->get('security.context')->getToken()->getUser();
\end_layout

\begin_layout Standard
Los diferentes criterios de filtrado son:
\end_layout

\begin_layout Itemize
$meetings_scheduled: esta variable almacena las reuniones futuras pertenecientes
 al usuario reservando así la sala para ese instante\SpecialChar \@.

\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
$meetings_scheduled=$repo->findByStateAndUser(Meeting::STATE_SCHEDULED,$user);
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
$meetings_finished: esta varible almacena todas las reuniones del usuario
 que ya han finalizado, como se puede observar hay dos tipos de estado,
 cancelado y terminado, esto se debe a que es posible que el usuario cancele
 la reunión o que la fecha de fin de reunión sea en el pasado\SpecialChar \@.

\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
$meeting_finished=$repo->findByStatesAndUser(array(Meeting::STATE_CANCELLED,Meet
ing::STATE_FINISHED),$user); 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
$other_meetings_now: esta variable almacena las reuniones activas que no
 pertenecen al usuario y están en su círculo de usuario en la plataforma\SpecialChar \@.

\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
$other_meetings_now=$repo->findByStateAndNotUser(Meeting::STATE_NOW,$user);
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
$meetings_now: nos permite mostrar al usuario todas las reuniones que tiene
 activas en el momento de la consulta\SpecialChar \@.

\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
$meetings_now=$repo->findByStatesAndUser(array(Meeting::STATE_NOW,Meeting::STATE
_LOCKED),$user);
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
$meeting_now_rank: que nos permite ordenar las reuniones que pertenecen
 al usuario según el ranking que ocupen en su página principal, ya que el
 usuario puede ordenar a su gusto las reuniones que posee para que aparezcan
 arriba las más importantes\SpecialChar \@.

\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
$meetings_now_rank=$repo->findByUserAndStatesOrderByRank($user,array(Meeting::ST
ATE_NOW,Meeting::STATE_LOCKED));
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
En este controlador también se realiza el control de acceso a las grabaciones
 de reuniones de cada usuario, para ello se comprueba si la grabación ha
 sido bloqueada por el usuario si es así se muestra el correspondiente mensaje
 de error, en caso contrario se produce la reproducción de la grabación\SpecialChar \@.

\end_layout

\begin_layout Standard
Se encuentra también la lógica para la publicación de grabaciones y se genera
 un enlace a dichas grabaciones a las que podrán acceder todos los usuarios
 que obtengan dicho enlace que será entregado por el usuario\SpecialChar \@.

\end_layout

\begin_layout Standard
Otra función que se encuentra en este controlador es la necesaria para crear
 una nueva reunión\SpecialChar \@.
 Para la creación de una nueva reunión debemos comprobar
 si existen salas disponibles y en caso de ser administrador y precisar
 crear una sala mágica, también se comprueba si hay salas mágicas disponibles\SpecialChar \@.

 Estas variables $numRooms y $numRoomsForNonMagic se pueden modificar en
 el archivo de configuración según el número de licencias que tengamos disponibl
es o salas que pongamos a disposición de los usuarios\SpecialChar \@.

\end_layout

\begin_layout Standard
Otra función que se encuentra en este controlador es la que nos permite
 cambiar nuestro nickname en las reuniones del Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
La función con la lógica que usa la consulta javascript para actualizar
 el ranking que establece el usuario para las reuniones también se encuentra
 en este controlador\SpecialChar \@.

\end_layout

\begin_layout Standard
Si precisamos añadir un usuario a una reunión que pertenece a la paltaforma
 Campus do Mar realizaremos una consulta a una función llamada addUsersAction
 que se encuentra en este controlador\SpecialChar \@.

\end_layout

\begin_layout Standard
Tenemos disponible un enlace para invitar a usuarios que no pertenecen a
 Campus do Mar a nuestra reunión\SpecialChar \@.
 Existe la posibilidad de cambiar este enlace,
 ya que es posible que reutilicemos nuestra sala para diferentes grupos
 de usuarios\SpecialChar \@.
 La lógica para cambiar los enlaces de acceso externos a las
 reuniones se encuentra en este controlador\SpecialChar \@.

\end_layout

\begin_layout Standard
Cuando pulsamos el botón de cancelar una reunión usaremos la lógica de la
 función cancelAction que se encuentra en este controlador\SpecialChar \@.
 Esta función
 comprueba si hay grabaciones asociadas a dicha reunión y en caso afirmativo
 las almacenamos en una carpeta especial en el servidor de Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 para que los usuarios tenga acceso a ellas\SpecialChar \@.

\end_layout

\begin_layout Standard
Para mostrar las grabaciones en su correspondiente 
\begin_inset Quotes eld
\end_inset

template
\begin_inset Quotes erd
\end_inset

 usaremos la función recordingAction\SpecialChar \@.
 Esta función es invocada por el usuario
 cuando pulsa el botón All eMeetings\SpecialChar \@.
 Cuando nos encontramos en la ventana
 modal que despliega el botón All eMeetings se nos ofrece la posibilidad
 de acceder a reuniones con sus respeoctivas grabaciones ordenadas por año
 y mes, la lógica para acceder a estas lista se encuentra en la función
 historicalAction del controlador de usuario\SpecialChar \@.
 La lista de grabaciones para
 cada reunión se realiza en la función llamada recordingListAction del controlad
or de usuario\SpecialChar \@.

\end_layout

\begin_layout Standard
La lógica para bloquear las grabaciones también está disponible en el controlado
r de usuario en la función lockedRecordingAction\SpecialChar \@.

\end_layout

\begin_layout Standard
La función que ofrece la lista para las grabaciones que mostraremos a usuarios
 que no pertenecen a Campus do Mar, se realiza en la función recordingPublicList
Action\SpecialChar \@.

\end_layout

\begin_layout Standard
Las reuniones también pueden ser bloquedas de forma temporal pulsando el
 botón Disabled para bloquear o Enabled para desbloquear\SpecialChar \@.
 La lógica para
 realizar esta acción se encuentra en la función lockedAction del controlador
 de usuario\SpecialChar \@.

\end_layout

\begin_layout Standard
La lógica para cambiar la contraseña de un usuario también se encuentra,
 como no podía ser de otro modo, en el controlador de usuario\SpecialChar \@.
 Esta función
 sincroniza nuestra contraseña de aplicación con la de nuestro usuario en
 el servidor Adobe Connect
\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
Hemos creado una función que nos permite cambiar cualquier característica
 de nuestra reunión a posteriori desde la página de usuario\SpecialChar \@.
 Esta función
 llamada updateAction se encuentra en el contorlador de usuario\SpecialChar \@.

\end_layout

\begin_layout Standard
También tenemos disponible una función que nos permite crear una reunión
 actuando directamente sobre la base de datos\SpecialChar \@.
 Esta función llamada editAction
 se encuentra en el contorlador de usuario\SpecialChar \@.

\end_layout

\begin_layout Standard
Para crear una nueva reunión directamente en la base de datos para un usuario
 concreto, el 
\shape italic
framework
\shape default
 Symfony nos ofrece la posibilidad de crear un formulario rápidamente a
 partir de la table de la base de datos definida para las reuniones\SpecialChar \@.
 De esta
 forma al función userFormAction crea un formulario para el template de
 usuario que nos permite crear una nueva reunión actuando directamente sobre
 la base de datos\SpecialChar \@.

\end_layout

\begin_layout Standard
La función listAction contiene la lógica para la acción javascript de autocomple
tado que se implementa en la ventana modal para agregar usuarios de Campus
 do Mar a las reuniones\SpecialChar \@.
 De esta forma si introducimos en la caja de agregado
 3 letras, la función nos devolverá una lista de usuarios que contengan
 estas 3 letras en el orden establecido, tanto en el nombre, apellidos o
 correo electrónico\SpecialChar \@.

\end_layout

\begin_layout Standard
La función adminAction ofrece un menú exclusivo para los usuarios administradore
s de la aplicación\SpecialChar \@.
 Este usuario tendrá acceso a los formularios de creación
 y edición de reuniones directamente sobre la base de datos, también para
 la creación de usuarios y su correspondiente edición y se han introducido
 2 gráficas estadísticas que nos ofrecen la ocupación máxima de salas cada
 día y el número total de usuarios simultáneos en la aplicación por cada
 reunión\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
Controlador de reuniones futuras(Wizard)
\end_layout

\begin_layout Standard

\color red
ESTA LÓGICA ESTÁ IMPLEMENTADA PERO NO SE DESPLEGÓ EN LA VERSIÓN EN USO,
 PUEDO DESCRIBIRLA O DEJARLO PARA LINEAS FUTURAS
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
Entidades y sus respectivos repositorios
\end_layout

\begin_layout Standard
En las entidades definiremos los campos que se guardarán en la base de datos,
 y una serie de sentencias sencillas para obtener valores de las tablas
 de la base de datos, tales como obtener el nombre de una reunión, su identifica
dor y usuario creador\SpecialChar \@.

\end_layout

\begin_layout Standard
Asociado a cada entidad tendremos su respectivo repositorio, dónde estarán
 las sentencias a la base de datos que no implementa el 
\shape italic
framework por defecto\SpecialChar \@.

\end_layout

\begin_layout Subsection
Meeting
\end_layout

\begin_layout Standard
A continuación y a modo de ejemplo se muestra el archivo de la entidad Meeting,
 sin duda la más importante de la aplicación, y que nos dará una idea de
 la estructura de la base de datos de la entidad central\SpecialChar \@.

\end_layout

\begin_layout Standard

\color red
PREGUNTAR A YOLANDA SI TIENE SENTIDO DESCRIBIR DE ESTA FORMA LAS ENTIDADES
 YA QUE ES CÓDIGO DE SYMFONY PARA REALIZAR LAS TABLAS DE LA BASE DE DATOS
 DESCRITAS EN CAPITULOS ANTERIORES
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
/** * @var integer $id 
\end_layout

\begin_layout Standard
* * @ORM
\backslash
Column(name=
\begin_inset Quotes erd
\end_inset

id
\begin_inset Quotes erd
\end_inset

, type=
\begin_inset Quotes erd
\end_inset

integer
\begin_inset Quotes erd
\end_inset

) 
\end_layout

\begin_layout Standard
* @ORM
\backslash
Id * @ORM
\backslash
GeneratedValue(strategy=
\begin_inset Quotes eld
\end_inset

AUTO
\begin_inset Quotes eld
\end_inset

)
\end_layout

\begin_layout Standard
*/ 
\end_layout

\begin_layout Standard
private $id;
\end_layout

\begin_layout Standard
/** * @var integer $state 
\end_layout

\begin_layout Standard
* * @ORM
\backslash
Column(name=
\begin_inset Quotes eld
\end_inset

state
\begin_inset Quotes eld
\end_inset

, type=
\begin_inset Quotes eld
\end_inset

integer
\begin_inset Quotes eld
\end_inset

)
\end_layout

\begin_layout Standard
*/
\end_layout

\begin_layout Standard
private $state = self::STATE_NEW;
\end_layout

\begin_layout Standard
/** * @var string $salt 
\end_layout

\begin_layout Standard
* * @Assert
\backslash
NotBlank() 
\end_layout

\begin_layout Standard
* @ORM
\backslash
Column(name=
\begin_inset Quotes eld
\end_inset

salt
\begin_inset Quotes eld
\end_inset

, type=
\begin_inset Quotes eld
\end_inset

string
\begin_inset Quotes eld
\end_inset

, length=255, nullable=false) 
\end_layout

\begin_layout Standard
*/
\end_layout

\begin_layout Standard
private $salt; 
\end_layout

\begin_layout Standard
/** * Link para entrar como usuario mini-host en ADO 
\end_layout

\begin_layout Standard
* @var string $secretsalt
\end_layout

\begin_layout Standard
* * @Assert
\backslash
NotBlank() 
\end_layout

\begin_layout Standard
* @ORM
\backslash
Column(name=
\begin_inset Quotes eld
\end_inset

secretsalt
\begin_inset Quotes eld
\end_inset

, type=
\begin_inset Quotes eld
\end_inset

string
\begin_inset Quotes eld
\end_inset

, length=255, nullable=false)
\end_layout

\begin_layout Standard
*/
\end_layout

\begin_layout Standard
private $secretsalt; 
\end_layout

\begin_layout Standard
/** * Link para entrar como usuario view en ADO
\end_layout

\begin_layout Standard
* @var string $viewsalt 
\end_layout

\begin_layout Standard
** @Assert
\backslash
NotBlank()
\end_layout

\begin_layout Standard
* @ORM
\backslash
Column(name=
\begin_inset Quotes eld
\end_inset

viewsalt
\begin_inset Quotes eld
\end_inset

, type=
\begin_inset Quotes eld
\end_inset

string
\begin_inset Quotes eld
\end_inset

, length=255, nullable=false)
\end_layout

\begin_layout Standard
*/
\end_layout

\begin_layout Standard
private $viewsalt;
\end_layout

\begin_layout Standard
/** * @var string $title 
\end_layout

\begin_layout Standard
* * @Assert
\backslash
NotBlank() 
\end_layout

\begin_layout Standard
* @ORM
\backslash
Column(name=
\begin_inset Quotes eld
\end_inset

title
\begin_inset Quotes eld
\end_inset

, type=
\begin_inset Quotes eld
\end_inset

string
\begin_inset Quotes eld
\end_inset

, length=255, nullable=false)
\end_layout

\begin_layout Standard
*/
\end_layout

\begin_layout Standard
private $title;
\end_layout

\begin_layout Standard
/** * @var text $description 
\end_layout

\begin_layout Standard
* * @ORM
\backslash
Column(name=
\begin_inset Quotes eld
\end_inset

description
\begin_inset Quotes eld
\end_inset

, type=
\begin_inset Quotes eld
\end_inset

text
\begin_inset Quotes eld
\end_inset

, nullable=true) 
\end_layout

\begin_layout Standard
*/
\end_layout

\begin_layout Standard
private $description;
\end_layout

\begin_layout Standard
/** * @var string $url
\end_layout

\begin_layout Standard
* * @ORM
\backslash
Column(name=
\begin_inset Quotes eld
\end_inset

url
\begin_inset Quotes eld
\end_inset

, type=
\begin_inset Quotes eld
\end_inset

string
\begin_inset Quotes eld
\end_inset

, length=255, nullable=true) 
\end_layout

\begin_layout Standard
*/
\end_layout

\begin_layout Standard
private $url; 
\end_layout

\begin_layout Standard
/** * @var string $title 
\end_layout

\begin_layout Standard
* * @Assert
\backslash
NotBlank() 
\end_layout

\begin_layout Standard
* @ORM
\backslash
Column(name=
\begin_inset Quotes eld
\end_inset

title
\begin_inset Quotes eld
\end_inset

, type=
\begin_inset Quotes eld
\end_inset

string
\begin_inset Quotes eld
\end_inset

, length=255, nullable=false)
\end_layout

\begin_layout Standard
*/ 
\end_layout

\begin_layout Standard
private $title; 
\end_layout

\begin_layout Standard
/** * @var text $description 
\end_layout

\begin_layout Standard
* * @ORM
\backslash
Column(name=
\begin_inset Quotes eld
\end_inset

description
\begin_inset Quotes eld
\end_inset

, type=
\begin_inset Quotes eld
\end_inset

text
\begin_inset Quotes eld
\end_inset

, nullable=true)
\end_layout

\begin_layout Standard
*/
\end_layout

\begin_layout Standard
private $description;
\end_layout

\begin_layout Standard
/** * @var string $url 
\end_layout

\begin_layout Standard
* * @ORM
\backslash
Column(name=
\begin_inset Quotes eld
\end_inset

url
\begin_inset Quotes eld
\end_inset

, type=
\begin_inset Quotes eld
\end_inset

string
\begin_inset Quotes eld
\end_inset

, length=255, nullable=true) 
\end_layout

\begin_layout Standard
*/
\end_layout

\begin_layout Standard
private $url; 
\end_layout

\begin_layout Standard
/** * @var datetime $date
\end_layout

\begin_layout Standard
* * @ORM
\backslash
Column(name=
\begin_inset Quotes eld
\end_inset

date
\begin_inset Quotes eld
\end_inset

, type=
\begin_inset Quotes eld
\end_inset

datetime
\begin_inset Quotes eld
\end_inset

)
\end_layout

\begin_layout Standard
*/
\end_layout

\begin_layout Standard
private $date;
\end_layout

\begin_layout Standard
/** * @var boolean $public
\end_layout

\begin_layout Standard
* * @ORM
\backslash
Column(name=
\begin_inset Quotes eld
\end_inset

public
\begin_inset Quotes eld
\end_inset

, type=
\begin_inset Quotes eld
\end_inset

boolean
\begin_inset Quotes eld
\end_inset

, nullable=true)
\end_layout

\begin_layout Standard
*/
\end_layout

\begin_layout Standard
private $public;
\end_layout

\begin_layout Standard
/** * @var boolean $public
\end_layout

\begin_layout Standard
* * @ORM
\backslash
Column(name=
\begin_inset Quotes eld
\end_inset

magic
\begin_inset Quotes eld
\end_inset

, type=
\begin_inset Quotes eld
\end_inset

boolean
\begin_inset Quotes eld
\end_inset

, nullable=false)
\end_layout

\begin_layout Standard
*/
\end_layout

\begin_layout Standard
private $magic; 
\end_layout

\begin_layout Standard
/** * @var User $owner
\end_layout

\begin_layout Standard
**@ORM
\backslash
ManyToOne(targetEntity=
\begin_inset Quotes eld
\end_inset

User
\begin_inset Quotes eld
\end_inset

, inversedBy=
\begin_inset Quotes eld
\end_inset

id
\begin_inset Quotes eld
\end_inset

)
\end_layout

\begin_layout Standard
* @ORM
\backslash
JoinColumn(name=
\begin_inset Quotes eld
\end_inset

owner_id
\begin_inset Quotes eld
\end_inset

, referencedColumnName=
\begin_inset Quotes eld
\end_inset

id
\begin_inset Quotes eld
\end_inset

)
\end_layout

\begin_layout Standard
*/ 
\end_layout

\begin_layout Standard
private $owner; 
\end_layout

\begin_layout Standard
/** * @var Group $group 
\end_layout

\begin_layout Standard
** @ORM
\backslash
ManyToOne(targetEntity=
\begin_inset Quotes eld
\end_inset

Group
\begin_inset Quotes eld
\end_inset

, inversedBy=
\begin_inset Quotes eld
\end_inset

id
\begin_inset Quotes eld
\end_inset

, cascade={
\begin_inset Quotes eld
\end_inset

remove
\begin_inset Quotes eld
\end_inset

})
\end_layout

\begin_layout Standard
* @ORM
\backslash
JoinColumn(name=
\begin_inset Quotes eld
\end_inset

group_id
\begin_inset Quotes eld
\end_inset

, referencedColumnName=
\begin_inset Quotes eld
\end_inset

id
\begin_inset Quotes eld
\end_inset

) 
\end_layout

\begin_layout Standard
*/ 
\end_layout

\begin_layout Standard
private $group = null;
\end_layout

\begin_layout Standard
/** * @var ArrayCollection $users
\end_layout

\begin_layout Standard
**@ORM
\backslash
ManyToMany(targetEntity=
\begin_inset Quotes eld
\end_inset

User
\begin_inset Quotes eld
\end_inset

, cascade={
\begin_inset Quotes eld
\end_inset

remove
\begin_inset Quotes eld
\end_inset

})
\end_layout

\begin_layout Standard
*@ORM
\backslash
JoinTable(name=
\begin_inset Quotes eld
\end_inset

meeting_user
\begin_inset Quotes eld
\end_inset

,joinColumns={@ORM
\backslash
JoinColumn(name=
\begin_inset Quotes eld
\end_inset

meeting_id
\begin_inset Quotes eld
\end_inset

, referencedColumnName=
\begin_inset Quotes eld
\end_inset

id
\begin_inset Quotes eld
\end_inset

)},
\end_layout

\begin_layout Standard
* inverseJoinColumns={@ORM
\backslash
JoinColumn(name=
\begin_inset Quotes eld
\end_inset

user_id
\begin_inset Quotes eld
\end_inset

, referencedColumnName=
\begin_inset Quotes eld
\end_inset

id
\begin_inset Quotes eld
\end_inset

)} * ) 
\end_layout

\begin_layout Standard
*/ 
\end_layout

\begin_layout Standard
private $users;
\end_layout

\begin_layout Standard
/** * @var ArrayCollection $recordings 
\end_layout

\begin_layout Standard
** @ORM
\backslash
OneToMany(targetEntity=
\begin_inset Quotes eld
\end_inset

Recording
\begin_inset Quotes eld
\end_inset

, mappedBy=
\begin_inset Quotes eld
\end_inset

meeting
\begin_inset Quotes eld
\end_inset

, cascade={
\begin_inset Quotes eld
\end_inset

remove
\begin_inset Quotes eld
\end_inset

}) 
\end_layout

\begin_layout Standard
*/ 
\end_layout

\begin_layout Standard
private $recordings; 
\end_layout

\begin_layout Standard
/** * @var ArrayCollection $recordings 
\end_layout

\begin_layout Standard
* * @ORM
\backslash
OneToMany(targetEntity=
\begin_inset Quotes eld
\end_inset

NickName
\begin_inset Quotes eld
\end_inset

, mappedBy=
\begin_inset Quotes eld
\end_inset

meeting
\begin_inset Quotes eld
\end_inset

, cascade={
\begin_inset Quotes eld
\end_inset

remove
\begin_inset Quotes eld
\end_inset

})
\end_layout

\begin_layout Standard
*/
\end_layout

\begin_layout Standard
private $nicknames;
\end_layout

\begin_layout Standard
/** * @var integer $concurrent 
\end_layout

\begin_layout Standard
* * @ORM
\backslash
Column(name=
\begin_inset Quotes eld
\end_inset

concurrent
\begin_inset Quotes eld
\end_inset

, type=
\begin_inset Quotes eld
\end_inset

integer
\begin_inset Quotes eld
\end_inset

)
\end_layout

\begin_layout Standard
*/ 
\end_layout

\begin_layout Standard
private $concurrent = 0;
\end_layout

\begin_layout Standard
/** * @var datetime $created 
\end_layout

\begin_layout Standard
* * @ORM
\backslash
Column(name=
\begin_inset Quotes eld
\end_inset

created
\begin_inset Quotes eld
\end_inset

, type=
\begin_inset Quotes eld
\end_inset

datetime
\begin_inset Quotes eld
\end_inset

) 
\end_layout

\begin_layout Standard
*/ 
\end_layout

\begin_layout Standard
private $created;
\end_layout

\begin_layout Standard
/*** @var datetime $updated 
\end_layout

\begin_layout Standard
** @ORM
\backslash
Column(name=
\begin_inset Quotes eld
\end_inset

updated
\begin_inset Quotes eld
\end_inset

, type=
\begin_inset Quotes eld
\end_inset

datetime
\begin_inset Quotes eld
\end_inset

) 
\end_layout

\begin_layout Standard
*/ 
\end_layout

\begin_layout Standard
private $updated; 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Itemize
Función que introduce datos al crear una reunión nueva:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
public function __construct(User $owner = null) { 
\end_layout

\begin_layout Standard
$this->owner = $owner; $this->created = $this->updated = new 
\backslash
DateTime(
\begin_inset Quotes eld
\end_inset

now
\begin_inset Quotes eld
\end_inset

); 
\end_layout

\begin_layout Standard
$this->date = new 
\backslash
DateTime(
\begin_inset Quotes eld
\end_inset

tomorrow
\begin_inset Quotes eld
\end_inset

); 
\end_layout

\begin_layout Standard
$this->users = new 
\backslash
Doctrine
\backslash
Common
\backslash
Collections
\backslash
ArrayCollection(); 
\end_layout

\begin_layout Standard
$this->recordings = new 
\backslash
Doctrine
\backslash
Common
\backslash
Collections
\backslash
ArrayCollection(); 
\end_layout

\begin_layout Standard
}
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Función que devuelve el título de la reunión en forma de string cuando solicitam
os el título de esa varible de la forma $varible->getTitle():
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
public function __toString() {
\end_layout

\begin_layout Standard
retur $this->title;
\end_layout

\begin_layout Standard
}
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
Función que devuelve el estado de la reunión.
\end_layout

\begin_layout Standard
Para cada una de las variables definidas en la entidad, tenemos una función
 get y set para recuperar o guardar la variable en el momento que precisemos
 y que será transparente para diferentes bases de datos, ya que el 
\shape italic
framework
\shape default
 se encargará de contruir la petición según la base de datos que introduzcamos
 en el fichero de configuración\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
Usuario
\end_layout

\begin_layout Standard

\color red
ESTAS SECCIONES ESTÁN A LA ESPERA DE LA PREGUNTA SOBRE LA DESCRIPCIÓN DE
 LAS ENTIDADES
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
Nickname
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
Grabaciones
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
Estadísticas parciales y totales (Log y Log Total)
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
Página de usuario
\end_layout

\begin_layout Standard
Existe un histórico de reuniones, en el cuál podremos observar, todas las
 reuniones del usuario, tanto canceladas como terminadas.
 En una primera versión, esta lista era únicamente de reuniones terminadas.
 En la siguiente versión si amplió la lista a reuniones canceladas, y en
 todas estas reuniones se podían visualizar las grabaciones, en caso de
 existir, de estas reuniones.
 Debido al alto número de reuniones pueden aparecer en esta lista, se decidió
 acotar el histórico, y así seleccionamos el mes al cual queremos acceder,
 y en esa propia caja de selección podemos visualizar para cada mes el número
 de reuniones y el total de grabaciones sin acceder al histórico de forma
 que el usuario tendrá mayores posibilidades de éxito en la búsqueda de
 su reunión o grabación pasada.
 En este punto se modifica la apariencia de la página para que la experiencia
 del usuario sea más intuitiva y satisfactoria, ofreciéndole más opciones
 a la hora de actuar sobre su reunión.
 El usuario puede incrementar en 30 minutos la duración de su reunión una
 vez iniciada sin más que presionar un botón.
 Se incluye un contador que nos dice el tiempo restante de reunión y el
 número de salas disponibles\SpecialChar \@.

\end_layout

\begin_layout Standard

\color red
INCLUIR MÁS INFORMACIÓN SOBRE COMO SE IMPLEMENTA ESTA FUNCIÓN AUNQUE ESTÁ
 CLARO QUE ESTÁ DESCRITA EN EL APARTADO DE INTERFAZ DE USUARIO.
 SE PODRÍAN UNIR LAS DOS PARTES PARA DESCRIBIR LAS ENTIDADES CONJUNTAMENTE
 CON EL INTERFAZ
\end_layout

\begin_layout Standard
Existen diferentes roles de usuarios y grupos que implementaremos más adelante,
 para determinar los permisos de acceso de los usuarios a las reuniones.
 Dentro de los diferentes roles de ususario existe uno muy importante para
 nuestra aplicación como es el usuario anónimo que no pertenece a Campus
 del Mar.
 Para dar mayor flexibilidad a la aplicación es posible mantener una reunión
 con un usuario no perteneciente a Campus del Mar, para ello cuando se procesa
 la invitación y el usuario no se encuentra en la base de datos de Campus
 del Mar, en una plantilla creada para este fin, puede elegir su propio
 nombre de usuario y de forma rápida la aplicación le permite entrar en
 la reunión si ésta está configurada para tal fin.
 Esta plantilla también permite al usuario que pertenece a Campus del Mar
 introducir su usuario y contraseña para que a nivel estadístico aparezca
 reflejada la reunión en su perfil.
 En una nueva modificación un usuario puede crear varias reuniones simultáneas
 y sólo se comprueba si la sala está ocupada cuando se intenta crear la
 nueva reunión, en la página del usuario aparecerán todas las reuniones
 creadas para cada grupo, ya que un usuario puede crear o participar en
 reuniones de diferentes grupos y en caso de que un grupo tenga un secreatariao
 que cree las reuniones este puede visualizar las reuniones de todos los
 grupos para los cuales las haya creado.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
Página Controladora
\end_layout

\begin_layout Standard
La página inicial es un enlace a las dos páginas que describiremos a continuació
n\SpecialChar \@.
 En la primera versión esta página contiene un listado de las salas de
 usuario y de todos los grupos a los que pertenece\SpecialChar \@.
 De esta forma puede visualiza
r si existe alguna reunión actual en ejecución a la que el usuario tiene
 acceso y si la sala está libre para reservarla para una reunión, todo ello
 mediante un sencillo código de colores\SpecialChar \@.
 Se muestran enlaces a las salas
 para poder reservar las salas\SpecialChar \@.
 Estos enlaces nos redirigen a las páginas
 que comentaremos a continuación\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
Estilo de la aplicación con CSS y HTML
\end_layout

\begin_layout Standard
En el archivo cmar.css y meeting.css tenemos nuestras hojas de estilo para
 la aplicación “meeting”, como es obvio en el archivo cmar.css tenemos el
 estilo común a toda la plataforma Campus del Mar y en meeting.css tenemos
 el estilo específico y necesario para cada uno de los conceptos relatados
 a lo largo de este proyecto\SpecialChar \@.

\end_layout

\begin_layout Standard

\color red
RECRECER ESTA SECCIÓN
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
Funciones Javascript
\end_layout

\begin_layout Standard
Para las funciones javascript hemos usado la librería jQuery en su versión
 1.7.1, también hemos usado la librería específica para interfaces jquery-ui-1.8.18,
 jquery-kamicgraphs, jquery.tokeninputs(esta es para la entrada anonima),
 bootstrap(la parte de los menús desplegables, librería que se ha echo popular
 por su vinculación con Twitter) y la libreía tipTip.
 Pasamos a describir a continuación una breve descripción de cada una de
 estas librerías, cuya principial función han sido la simplificación de
 los desarrollos y nos han dado la posibilidad de implementar un interfaz
 avanzado de forma sencilla.
\end_layout

\begin_layout Standard
Todas las funciones que hemos implementado a partir de estas librerías y
 las propias librerías se encuentran en la carpeta src/Cmar/MeetingBundle/Resour
ces/Public/js.
\end_layout

\begin_layout Standard
Estos ficheros se han renombrado con una técnica típica de numeración para
 que se carguen en el explorador en el orden adecuado, ya que unos dependen
 de otros y la carga incorrecta generará incongruencias de código y el mal
 funcionamiento de la aplicación.
\end_layout

\begin_layout Subsection
jQuery 1.7.1
\end_layout

\begin_layout Subsection
jQuery-ui-1.8.18
\end_layout

\begin_layout Subsection
jQuery-kamicgraphs
\end_layout

\begin_layout Standard
Para las gráficas del interfaz de administrador.
 Muestra las estadísticas de utilización de la aplicación.
\end_layout

\begin_layout Subsection
jQuery.tokeninputs
\end_layout

\begin_layout Subsection
Bootstrap
\end_layout

\begin_layout Subsection
jQuery-tipTip
\end_layout

\begin_layout Subsection
Funciones propias
\end_layout

\begin_layout Standard
Las funciones propias reciben en su mayoría el nombre de la función que
 desempeñan para la aplicación.
 Describimos a continuación los archivos javascript y las funciones que
 contienen\SpecialChar \@.

\end_layout

\begin_layout Itemize
EL fichero 
\begin_inset Quotes eld
\end_inset

js.js
\begin_inset Quotes erd
\end_inset

 contiene la función updateClock que como su nombre indica actualiza el
 reloj junto al nombre de usuario en la parte superior derecha de la aplicación.
 Esta función recoge la hora, minutos y segundos del sistema en el que se
 encuentre alojado y actualiza el reloj visualizado por el usuario con una
 precisión de segundos.
 Realiza un parseado para obtener siempre números enteros en cada valor
 que muestra el reloj y también obtiene la franja horaria para mostrar 
\begin_inset Quotes eld
\end_inset

AM
\begin_inset Quotes erd
\end_inset

 o 
\begin_inset Quotes eld
\end_inset

PM
\begin_inset Quotes erd
\end_inset

 o si lo deseamos hora en formato en 24 horas.
\end_layout

\begin_layout Itemize
El fichero 
\begin_inset Quotes eld
\end_inset

tabla.js
\begin_inset Quotes erd
\end_inset

 despliega los elementos de una lista utilizando el evento jQuery fadeIn,
 el cuál embellece la acción ya que la lista de elementos se despliegan
 de forma suave y constante\SpecialChar \@.

\end_layout

\begin_layout Itemize
EL fichero 
\begin_inset Quotes eld
\end_inset

addbox.js
\begin_inset Quotes erd
\end_inset

 se utilizó en un primera versión del proyecto para agregar elementos de
 una lista que aparecía a la izquierda del usuario en su homóloga en la
 parte izquierda.
 De esta manera se invita al resto de usuarios a participar de la vídeoconferenc
ia que ha creado.
 Con el uso de la aplicación se comprobó que la lista de usuarios era demasiado
 grande y debían introducirse otro tipo de técnicas para tal invitación\SpecialChar \@.

 En esta acción también se incluye la posibilidad de invitar a todos los
 usuarios del sistema\SpecialChar \@.
 Este tipo de mecanismos es más utilizado cuando el
 número de usuarios a invitar se aplica a una lista de contactos seleccionados
 por el usuario y no al total de usuarios de la aplicación como es el caso\SpecialChar \@.

\end_layout

\begin_layout Itemize
A raíz de la experiencia descrita en el fichero anterior se desarrolla el
 fichero 
\begin_inset Quotes eld
\end_inset

autocomplete.js
\begin_inset Quotes erd
\end_inset

\SpecialChar \@.
 Este fichero realiza una petición AJAX sobre la base de datos a partir
 de la introducción de tres caracteres en una caja de texto\SpecialChar \@.
 De esta manera
 se despliega una lista bajo la caja de texto con la coincidencia de los
 caracteres introducidos\SpecialChar \@.
 Dicha coincidencia puede darse tanto en el nombre
 completo de un usuario como en su correo electrónico\SpecialChar \@.
 Gracias a jQuery y
 su función 
\shape italic
autocomplete
\shape default
 la lógica de esta función sólo necesita que incluyamos los parámetros de
 interés tales como en qué lugar se encuentra nuestra consulta sobre la
 base de datos y de qué forma mostraremos al usuario la información retornada
 por dicha consulta\SpecialChar \@.
 En nuestro código aparecen dos lugares en los cuales
 podremos añadir usuarios a nuestra vídeoconferencia, de ahí que la lógica
 aparezca duplicada para el identificador 
\shape slanted
users
\shape default
 y 
\shape slanted
users1\SpecialChar \@.

\end_layout

\begin_layout Itemize
EL fichero 
\begin_inset Quotes eld
\end_inset

modal_dialog.js
\begin_inset Quotes erd
\end_inset

 nos ofrece la lógica para desplegar las ventanas modales que se despliegan
 para realizar acciones sobre las vídeoconferencias de la aplicación y proporcio
nan funcionaldades a mayores implementadas para dar información al usuario,
 tales como el menú que ofrece el servidor Adobe Connect para informarnos
 si tenemos conectividad a nivel de red con el servidor o si nuestra conexión
 es suficiente para mantener una vídeoconferencia de calidad\SpecialChar \@.
 En esta función
 definimos los identificadores de los botones que accionarán los menús,
 el tipo de efecto que cerrará la ventana, el tamaño de la ventana y a mayores
 para algunas ventanas especiales hemos añadido el parámetro 
\shape slanted
data-ajax
\shape default
\SpecialChar \@.
 Cuando le pasamos este parámetro a la ventana modal irá acompañado del
 parámetro 
\shape slanted
data-url
\shape default
 que nos indica el lugar en el que se encuentra la lógica de que se ejecutará
 tras nuestra petición AJAX\SpecialChar \@.
 Del mismo modo y gracias a las facilidades ofrecidas
 por Symfony en la ventana se desplegará el template asociado a la url que
 indicamos en la llamada a la ventana modal con los datos de la función
 que se ha ejecutado\SpecialChar \@.
 La posición de la ventana y la clase CSS asociada a
 la ventana también se describen en este fichero\SpecialChar \@.
 Los identificadores y clases
 intentan describir a qué parte del código pertenecen las ventanas modales
 para facilitar la fácil lectura del código y que la incorporación de un
 nuevo miembro al proyecto se lleve a cabo en el menor tiempo posible\SpecialChar \@.

\end_layout

\begin_layout Itemize
El fichero 
\begin_inset Quotes eld
\end_inset

desplegable.js
\begin_inset Quotes erd
\end_inset

 ofrece la lógica para menús desplegables, una funcionalidad muy similar
 a la del fichero 
\begin_inset Quotes eld
\end_inset

menu.js
\begin_inset Quotes erd
\end_inset

 pero con sutiles cambios en la estética\SpecialChar \@.
 En este fichero también se incluye
 la lógica que reducirá el número de letras a mostrar del título para que
 un título muy largo no rompa la estética del interfaz, aunque el título
 se mostrará completamente si el ratón se sitúa sobre él\SpecialChar \@.
 Otra función desarrolla
da en este fichero es el truncado de la entidad gráfica vídeoconferencia(
\color red
EL RECUADRO AZUL CON EL DIBUJO DE LA MESA
\color inherit
) que muestra la aplicación, de forma que si pulsamos dos veces sobre el
 título (
\color red

\begin_inset Quotes eld
\end_inset

DOBLE CLICK
\begin_inset Quotes erd
\end_inset

 NO SÉ SI SE ENTIENDE ASÍ
\color inherit
) la entidad se encoge y viceversa\SpecialChar \@.

\end_layout

\begin_layout Itemize
El fichero 
\begin_inset Quotes eld
\end_inset

filter_meeting.js
\begin_inset Quotes erd
\end_inset

 realiza la función de filtrado de salas de vídeoconferencia que ofrece
 el botón del menú que por defecto tiene el texto 
\shape slanted
\color black
All Meetings
\shape default
\SpecialChar \@.
 Esta función recibe el texto del desplegable que coincide con los diferentes
 estados que puede tener una sala de nuestra aplicación: Pública, privada,
 mágica (Sólo para usuarios administradores) o sala a la que he sido invitado\SpecialChar \@.

 Esta función muestra u oculta las salas con el estado que corresponda\SpecialChar \@.

\end_layout

\begin_layout Itemize
El fichero 
\begin_inset Quotes eld
\end_inset

anonymous.js
\begin_inset Quotes erd
\end_inset

 ofrece toda la lógica del menú de entrada anónima.
 Este menú ofrece la posibilidad de acceder a las salas como anónimo o acceder
 con nuestro usuario\SpecialChar \@.
 Se implementa aquí la lógica de error cuando no coinciden
 las dos contraseñas introducidas como confirmación liberando así al servidor
 de peticiones superfluas sobre la base de datos\SpecialChar \@.

\end_layout

\begin_layout Chapter
Conclusiones y líneas Futuras
\end_layout

\begin_layout Section
Conclusiones
\end_layout

\begin_layout Standard
A raíz de los datos obtenidos sobre la utilización de la aplicación por
 parte de los usuarios de 
\begin_inset Quotes eld
\end_inset

Campus do Mar
\begin_inset Quotes erd
\end_inset

 podemos afirmar que ha sido un rotundo éxito de acogida\SpecialChar \@.
 Por su fácil funcionami
ento y por la rapidez con la que los usuarios pueden crear sus salas de
 vídeoconferencia y gestionarlas es sin duda un producto ventajoso frente
 a su más directa competencia\SpecialChar \@.
 El uso de un framework aumenta altamente la
 productividad del diseñador y ofrece una organización muy completa y ágil,
 ideal para elaborar una excelente documentación\SpecialChar \@.

\end_layout

\begin_layout Standard
Sorprendentemente para el programador se ha profundizado también en el complejo
 conocimiento de las necesidades y singularidades del ser humano, a raíz
 del trabajo realizado en el despliegue de la aplicación\SpecialChar \@.
 En la experiencia
 adquirida después del uso de la aplicación cabe destacar, lo diferente
 de la psique del ser humano aún perteneciendo a perfiles afines y como
 las relaciones mejoran si se tiene un buena herramienta de comunicación\SpecialChar \@.

\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
Líneas Futuras
\end_layout

\begin_layout Standard
Una posible mejora de este proyecto sería implementar una lógica que nos
 indique si ya hay alguien dentro de la sala de vídeoconferencia o no\SpecialChar \@.
 Implementa
r un mecanismo de reserva de salas más completo y sincronizado con el calendario
 que usará el resto de aplicaciones de 
\begin_inset Quotes eld
\end_inset

Campus do Mar
\begin_inset Quotes erd
\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
Implementar la lógica necesaria que permita tener salas con el mismo nombre\SpecialChar \@.

\end_layout

\begin_layout Standard
Muchas de las estructuras de código y algoritmos pueden ser depurados para
 agilizar la carga de la aplicación y aprovechar mejor el ancho de banda
 disponible\SpecialChar \@.

\end_layout

\begin_layout Standard
Determinar el ancho de banda disponible de todos los usuarios involucrados
 en una reunión y ofrecer funciones en función del mismo\SpecialChar \@.
 Estas opciones
 pueden ser configurar la sala con el ancho de banda más restrictivo, mensajes
 para el usuario o usuarios perjudicados por el uso de un ancho de banda
 superior al disponible en recepción\SpecialChar \@.

\end_layout

\begin_layout Standard
Descubrir la forma de salir del servidor 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Adobe Connect}
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
®
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

 \SpecialChar \@.
 Una vez que un usuario entra a una videconferencia queda registrada una
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{cookie}
\end_layout

\end_inset

 en el navegador de forma que si accede al servidor aparecerá como registrado
 aunque haya salido de la aplicación 
\begin_inset Quotes eld
\end_inset

eMeeting
\begin_inset Quotes erd
\end_inset

\SpecialChar \@.

\end_layout

\begin_layout Standard
Utilizar un software de soporte para vídeoconferencia no propietario como
 podría ser Asterix o FreeSwitch 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{key-14}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\color red
PODRIAMOS AÑADIR LA FUNCIONALIDAD DE RESERVAR SALAS EN UN MOMENTO FUTURO
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{thebibliography}{9}
\backslash
addcontentsline{toc}{chapter}{Bibliografía}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bibitem{key-1}
\end_layout

\end_inset

Zaninotto F., Potencier F.
 Symfony 1.2, la guía definitiva
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bibitem{key-2}
\end_layout

\end_inset

Potencier F.
 Jobeet
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bibitem{key-3}
\end_layout

\end_inset

ICB Editores, Programación De Páginas Web Dinámicas Con Apache, Base De
 Datos Mysql Y Php
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bibitem{key-4}
\end_layout

\end_inset

Domine Php Y Mysql.
 2ª Edición, López Quijado, José
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bibitem{key-6}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{http://www.symfony-project.org}{http://www.symfony-project.org}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bibitem{key-7}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{http://www.symfony.com/}{http://www.symfony.com/}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bibitem{key-8}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{http://ebookee.org/La-Biblia-de-MySQL_129482.html}{Dubois P.,La Biblia
 de MySQL}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bibitem{key-9}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{http://www.yaml.org/}{http://www.yaml.org/}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bibitem{key-10}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{http://php.net}{http://php.net}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bibitem{key-11}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{http://www.sun.com/suntrademarks/}{http://www.sun.com/suntrademarks/}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bibitem{key-12}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{http://jquery.org/}{http://jquery.org/}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bibitem{key-13}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{http://jqueryui.com/}{http://jqueryui.com/}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bibitem{key-14}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{http://www.freeswitch.org/}{http://www.freeswitch.org/}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bibitem{key-15}
\end_layout

\end_inset

Michalko M., Thinkertoys: A Handbook of Creative-Thinking Techniques (2nd
 Edition), Jun 8, 2006
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bibitem{key-17}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{http://twig.sensiolabs.org/doc/intro.html}{http://twig.sensiolabs.org/doc/intro.h
tml}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bibitem{key-18}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{http://test-sf-doc-es.readthedocs.org/en/latest/quick_tour/the_architecture.ht
ml}{Manual de Symfony 2}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bibitem{key-19}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{http://www.balsamiq.com/products/mockups}{http://www.balsamiq.com/products/mock
ups}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{thebibliography}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
